
ConfigParserï
SupportsNoArgReadline_typeshed.SupportsNoArgReadline"builtins.object*¡
readline(_typeshed.SupportsNoArgReadline.readline"
_typeshed._T_co*r
selfh
0_typeshed.SupportsNoArgReadline[_typeshed._T_co]
_typeshed._T_co"_typeshed.SupportsNoArgReadlinez27PXj27œ 
IO	typing.IO"typing.Iterator*ä
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*ä
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*~
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*î
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*~
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ñ
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27*ö
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*∏
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27*Ë
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27*Ê
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27*ö
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*Í
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27*ö
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27*Ÿ

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*æ
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¥
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*©
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27Pj27â
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27–
ErrorConfigParser.Error"builtins.Exception*í
__init__ConfigParser.Error.__init__"
None*2
self(
ConfigParser.Error"ConfigParser.Error*'
msg
builtins.str"builtins.str z27*q
_get_messageConfigParser.Error._get_message"
None*2
self(
ConfigParser.Error"ConfigParser.Errorz27*ö
_set_messageConfigParser.Error._set_message"
None*2
self(
ConfigParser.Error"ConfigParser.Error*'
value
builtins.str"builtins.strz27*{
__repr__ConfigParser.Error.__repr__"
builtins.str"builtins.str*0
self(
ConfigParser.Error"ConfigParser.Errorz27*y
__str__ConfigParser.Error.__str__"
builtins.str"builtins.str*0
self(
ConfigParser.Error"ConfigParser.Errorz27j27˜
NoSectionErrorConfigParser.NoSectionError"ConfigParser.Error*Ø
__init__$ConfigParser.NoSectionError.__init__"
None*D
self:
ConfigParser.NoSectionError"ConfigParser.NoSectionError*)
section
builtins.str"builtins.strz27j27ö
DuplicateSectionError"ConfigParser.DuplicateSectionError"ConfigParser.Error*ƒ
__init__+ConfigParser.DuplicateSectionError.__init__"
None*R
selfH
"ConfigParser.DuplicateSectionError""ConfigParser.DuplicateSectionError*)
section
builtins.str"builtins.strz27j27ú
NoOptionErrorConfigParser.NoOptionError"ConfigParser.Error*÷
__init__#ConfigParser.NoOptionError.__init__"
None*B
self8
ConfigParser.NoOptionError"ConfigParser.NoOptionError*(
option
builtins.str"builtins.str*)
section
builtins.str"builtins.strz27j27‹
InterpolationErrorConfigParser.InterpolationError"ConfigParser.Error*å
__init__(ConfigParser.InterpolationError.__init__"
None*L
selfB
ConfigParser.InterpolationError"ConfigParser.InterpolationError*(
option
builtins.str"builtins.str*)
section
builtins.str"builtins.str*%
msg
builtins.str"builtins.strz27j27⁄
InterpolationMissingOptionError,ConfigParser.InterpolationMissingOptionError"ConfigParser.InterpolationError*„
__init__5ConfigParser.InterpolationMissingOptionError.__init__"
None*f
self\
,ConfigParser.InterpolationMissingOptionError",ConfigParser.InterpolationMissingOptionError*(
option
builtins.str"builtins.str*)
section
builtins.str"builtins.str*(
rawval
builtins.str"builtins.str*+
	reference
builtins.str"builtins.strz27j27f
InterpolationSyntaxError%ConfigParser.InterpolationSyntaxError"ConfigParser.InterpolationErrorj27Ö
InterpolationDepthError$ConfigParser.InterpolationDepthError"ConfigParser.InterpolationError*û
__init__-ConfigParser.InterpolationDepthError.__init__"
None*V
selfL
$ConfigParser.InterpolationDepthError"$ConfigParser.InterpolationDepthError*(
option
builtins.str"builtins.str*)
section
builtins.str"builtins.str*(
rawval
builtins.str"builtins.strz27j27ì
ParsingErrorConfigParser.ParsingError"ConfigParser.Error*™
__init__"ConfigParser.ParsingError.__init__"
None*@
self6
ConfigParser.ParsingError"ConfigParser.ParsingError**
filename
builtins.str"builtins.strz27*¢
append ConfigParser.ParsingError.append"
None*@
self6
ConfigParser.ParsingError"ConfigParser.ParsingError*
lineno
Any*
line
Anyz27j27ﬁ
MissingSectionHeaderError&ConfigParser.MissingSectionHeaderError"ConfigParser.ParsingError*˘
__init__/ConfigParser.MissingSectionHeaderError.__init__"
None*Z
selfP
&ConfigParser.MissingSectionHeaderError"&ConfigParser.MissingSectionHeaderError**
filename
builtins.str"builtins.str*
lineno
Any*
line
Anyz27j27ö(
RawConfigParserConfigParser.RawConfigParser"builtins.object*¢
__init__%ConfigParser.RawConfigParser.__init__"
None*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*I
defaults9
builtins.dict[Any,Any]
Any
Any"builtins.dict *
	dict_type
Any *4
allow_no_value
builtins.bool"builtins.bool z27*∏
defaults%ConfigParser.RawConfigParser.defaults"9
builtins.dict[Any,Any]
Any
Any"builtins.dict*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParserz27*…
sections%ConfigParser.RawConfigParser.sections"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParserz27*∏
add_section(ConfigParser.RawConfigParser.add_section"
None*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.strz27*Œ
has_section(ConfigParser.RawConfigParser.has_section"
builtins.bool"builtins.bool*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.strz27*Ú
options$ConfigParser.RawConfigParser.options"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.strz27*˜
read!ConfigParser.RawConfigParser.read"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*≥
	filenames£
1Union[builtins.str,typing.Sequence[builtins.str]]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequencez27*©
readfp#ConfigParser.RawConfigParser.readfp"
None*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*v
fpn
-_typeshed.SupportsNoArgReadline[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsNoArgReadline*,
filename
builtins.str"builtins.str z27*Ê
get ConfigParser.RawConfigParser.get"
builtins.str"builtins.str*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.strz27*¯
items"ConfigParser.RawConfigParser.items"T
builtins.list[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"builtins.list*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.strz27*˝
_get!ConfigParser.RawConfigParser._get"
Any*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
conv
builtins.type"builtins.type*(
option
builtins.str"builtins.strz27*Ï
getint#ConfigParser.RawConfigParser.getint"
builtins.int"builtins.int*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.strz27*Ù
getfloat%ConfigParser.RawConfigParser.getfloat" 
builtins.float"builtins.float*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.strz27*ˆ

getboolean'ConfigParser.RawConfigParser.getboolean"
builtins.bool"builtins.bool*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.strz27*Œ
optionxform(ConfigParser.RawConfigParser.optionxform"
builtins.str"builtins.str*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*+
	optionstr
builtins.str"builtins.strz27*ˆ

has_option'ConfigParser.RawConfigParser.has_option"
builtins.bool"builtins.bool*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.strz27*Ë
set ConfigParser.RawConfigParser.set"
None*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.str*
value
Any z27*Õ
write"ConfigParser.RawConfigParser.write"
None*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*J
fpB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27*Á
remove_option*ConfigParser.RawConfigParser.remove_option"
builtins.bool"builtins.bool*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.str*
option
Anyz27*‘
remove_section+ConfigParser.RawConfigParser.remove_section"
builtins.bool"builtins.bool*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*)
section
builtins.str"builtins.strz27*˜
_read"ConfigParser.RawConfigParser._read"
None*F
self<
ConfigParser.RawConfigParser"ConfigParser.RawConfigParser*J
fpB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*(
fpname
builtins.str"builtins.strz27j27÷

ConfigParserConfigParser.ConfigParser"ConfigParser.RawConfigParser*Ï
getConfigParser.ConfigParser.get"
Any*@
self6
ConfigParser.ConfigParser"ConfigParser.ConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.str*)
raw
builtins.bool"builtins.bool *w
varsk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None z27*∫
itemsConfigParser.ConfigParser.items"{
&builtins.list[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.list*@
self6
ConfigParser.ConfigParser"ConfigParser.ConfigParser*)
section
builtins.str"builtins.str*)
raw
builtins.bool"builtins.bool *w
varsk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None z27*ó
_interpolate&ConfigParser.ConfigParser._interpolate"
builtins.str"builtins.str*@
self6
ConfigParser.ConfigParser"ConfigParser.ConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.str*
rawval
Any*
vars
Anyz27*¬
_interpolation_replace0ConfigParser.ConfigParser._interpolation_replace"
builtins.str"builtins.str*@
self6
ConfigParser.ConfigParser"ConfigParser.ConfigParser*
match
Anyz27j27∏
SafeConfigParserConfigParser.SafeConfigParser"ConfigParser.ConfigParser*£
_interpolate*ConfigParser.SafeConfigParser._interpolate"
builtins.str"builtins.str*H
self>
ConfigParser.SafeConfigParser"ConfigParser.SafeConfigParser*)
section
builtins.str"builtins.str*(
option
builtins.str"builtins.str*
rawval
Any*
vars
Anyz27*ø
_interpolate_some/ConfigParser.SafeConfigParser._interpolate_some"
None*H
self>
ConfigParser.SafeConfigParser"ConfigParser.SafeConfigParser*(
option
builtins.str"builtins.str*7
accum,
builtins.list[Any]
Any"builtins.list*&
rest
builtins.str"builtins.str*)
section
builtins.str"builtins.str*B
map9
builtins.dict[Any,Any]
Any
Any"builtins.dict*'
depth
builtins.int"builtins.intz27j27*9
Any
typing.Any"
builtins.object"builtins.object"27*K
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27*E
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"27*E
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27*I
DEFAULTSECTConfigParser.DEFAULTSECT
builtins.str"builtins.str"27*a
MAX_INTERPOLATION_DEPTH$ConfigParser.MAX_INTERPOLATION_DEPTH
builtins.int"builtins.int"27