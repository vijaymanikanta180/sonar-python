
_posixsubprocess¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310®
cloexec_pipe_posixsubprocess.cloexec_pipe"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intz35z36z37z38z39z310Ë
	fork_exec_posixsubprocess.fork_exec"
builtins.int"builtins.int*X
argsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*i
executable_listT
typing.Sequence[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Sequence*-
	close_fds
builtins.bool"builtins.bool*_
fds_to_keepN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*%
cwd
builtins.str"builtins.str*b
env_listT
typing.Sequence[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Sequence*)
p2cread
builtins.int"builtins.int**
p2cwrite
builtins.int"builtins.int*(
c2pred
builtins.int"builtins.int**
c2pwrite
builtins.int"builtins.int*)
errread
builtins.int"builtins.int**
errwrite
builtins.int"builtins.int*.
errpipe_read
builtins.int"builtins.int*/
errpipe_write
builtins.int"builtins.int*1
restore_signals
builtins.int"builtins.int*3
start_new_session
builtins.int"builtins.int*[

preexec_fnK
CallableType[builtins.function]&
builtins.function"builtins.functionz35z36z37z38z39z310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310