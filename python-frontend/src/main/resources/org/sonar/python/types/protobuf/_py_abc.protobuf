
_py_abcä
TypeVartyping.TypeVar"builtins.object*ž
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310”
ABCMeta_py_abc.ABCMeta"builtins.type*ˆ
__new___py_abc.ABCMeta.__new__""
_py_abc.ABCMeta"_py_abc.ABCMeta*G
__mcls=
Type[_py_abc.ABCMeta]"
_py_abc.ABCMeta"_py_abc.ABCMeta*&
__name
builtins.str"builtins.str*N
__basesC
builtins.tuple[Type[Any]]
	Type[Any]
Any"builtins.tuple*f
__namespaceW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz35z36z37z38z39z310*Ä
register_py_abc.ABCMeta.register"$
Type[_py_abc._T]

_py_abc._T*+
cls"
_py_abc.ABCMeta"_py_abc.ABCMeta*2
subclass$
Type[_py_abc._T]

_py_abc._Tz35z36z37z38z39z310j35j36j37j38j39j310g
get_cache_token_py_abc.get_cache_token""
builtins.object"builtins.objectz35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*X
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310