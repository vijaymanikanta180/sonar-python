
_tracemalloc¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310⁄
_get_object_traceback"_tracemalloc._get_object_traceback"÷
HUnion[typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]],None]˝
<typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]´
+TypeAlias[Tuple[builtins.str,builtins.int]]`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"tracemalloc._FrameTupleT"typing.Sequence
None*+
__obj"
builtins.object"builtins.objectz35z36z37z38z39z310Ô
_get_traces_tracemalloc._get_traces"µ
ytyping.Sequence[TypeAlias[Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]]]¶
hTypeAlias[Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]]ù
]Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]
builtins.int"builtins.int
builtins.int"builtins.int˝
<typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]´
+TypeAlias[Tuple[builtins.str,builtins.int]]`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"tracemalloc._FrameTupleT"typing.Sequence"tracemalloc._TraceTupleT"typing.Sequencez35z36z37z38»
_get_traces_tracemalloc._get_traces"ï
˜typing.Sequence[TypeAlias[Union[Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]],Union[builtins.int,None]],Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]]]]á
ÊTypeAlias[Union[Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]],Union[builtins.int,None]],Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]]]ˇ
€Union[Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]],Union[builtins.int,None]],Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]]¸
vTuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]],Union[builtins.int,None]]
builtins.int"builtins.int
builtins.int"builtins.int˝
<typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]´
+TypeAlias[Tuple[builtins.str,builtins.int]]`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"tracemalloc._FrameTupleT"typing.SequenceD
Union[builtins.int,None]
builtins.int"builtins.int
Noneù
]Tuple[builtins.int,builtins.int,typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]]
builtins.int"builtins.int
builtins.int"builtins.int˝
<typing.Sequence[TypeAlias[Tuple[builtins.str,builtins.int]]]´
+TypeAlias[Tuple[builtins.str,builtins.int]]`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"tracemalloc._FrameTupleT"typing.Sequence"tracemalloc._TraceTupleT"typing.Sequencez39z310L
clear_traces_tracemalloc.clear_traces"
Nonez35z36z37z38z39z310n
get_traceback_limit _tracemalloc.get_traceback_limit"
builtins.int"builtins.intz35z36z37z38z39z310Æ
get_traced_memory_tracemalloc.get_traced_memory"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intz35z36z37z38z39z310t
get_tracemalloc_memory#_tracemalloc.get_tracemalloc_memory"
builtins.int"builtins.intz35z36z37z38z39z310^

is_tracing_tracemalloc.is_tracing"
builtins.bool"builtins.boolz35z36z37z38z39z310j
start_tracemalloc.start"
None**
__nframe
builtins.int"builtins.int z35z36z37z38z39z310<
stop_tracemalloc.stop"
Nonez35z36z37z38z39z3108

reset_peak_tracemalloc.reset_peak"
Nonez39z310*%
syssys *35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310