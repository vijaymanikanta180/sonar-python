
base64ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310‘
	b64encodebase64.b64encode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._encodable*T
altcharsD
Union[builtins.str,None]
builtins.str"builtins.str
None z27›
	b64encodebase64.b64encode" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytes*Z
altcharsJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310Ñ
	b64decodebase64.b64decode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._decodable*T
altcharsD
Union[builtins.str,None]
builtins.str"builtins.str
None *.
validate
builtins.bool"builtins.bool z27”
	b64decodebase64.b64decode" 
builtins.bytes"builtins.bytes*m
sf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*Z
altcharsJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *.
validate
builtins.bool"builtins.bool z35z36z37z38z39z310ê
standard_b64encodebase64.standard_b64encode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._encodablez27ì
standard_b64encodebase64.standard_b64encode" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310ê
standard_b64decodebase64.standard_b64decode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._decodablez27Ÿ
standard_b64decodebase64.standard_b64decode" 
builtins.bytes"builtins.bytes*m
sf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310é
urlsafe_b64encodebase64.urlsafe_b64encode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._encodablez27ë
urlsafe_b64encodebase64.urlsafe_b64encode" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310é
urlsafe_b64decodebase64.urlsafe_b64decode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._decodablez27◊
urlsafe_b64decodebase64.urlsafe_b64decode" 
builtins.bytes"builtins.bytes*m
sf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310˛
	b32encodebase64.b32encode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._encodablez27Å
	b32encodebase64.b32encode" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310Å
	b32decodebase64.b32decode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._decodable*.
casefold
builtins.bool"builtins.bool *Q
map01D
Union[builtins.str,None]
builtins.str"builtins.str
None z27–
	b32decodebase64.b32decode" 
builtins.bytes"builtins.bytes*m
sf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*.
casefold
builtins.bool"builtins.bool *W
map01J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310˛
	b16encodebase64.b16encode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._encodablez27Å
	b16encodebase64.b16encode" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310Æ
	b16decodebase64.b16decode"
builtins.str"builtins.str*º
s¥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"base64._decodable*.
casefold
builtins.bool"builtins.bool z27˜
	b16decodebase64.b16decode" 
builtins.bytes"builtins.bytes*m
sf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*.
casefold
builtins.bool"builtins.bool z35z36z37z38z39z310ƒ
decodebase64.decode"
None*M
inputB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*N
outputB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27Â
decodebase64.decode"
None*S
inputH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*T
outputH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz35z36z37z38z39z310ƒ
encodebase64.encode"
None*M
inputB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*N
outputB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27Â
encodebase64.encode"
None*S
inputH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*T
outputH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz35z36z37z38z39z310j
encodestringbase64.encodestring"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz27~
encodestringbase64.encodestring" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38j
decodestringbase64.decodestring"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz27~
decodestringbase64.decodestring" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38∏
	a85encodebase64.a85encode" 
builtins.bytes"builtins.bytes*'
b 
builtins.bytes"builtins.bytes*0

foldspaces
builtins.bool"builtins.bool *+
wrapcol
builtins.int"builtins.int *)
pad
builtins.bool"builtins.bool *+
adobe
builtins.bool"builtins.bool z35z36z37z38z39z310°
	a85decodebase64.a85decode" 
builtins.bytes"builtins.bytes*m
bf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*0

foldspaces
builtins.bool"builtins.bool *+
adobe
builtins.bool"builtins.bool *y
ignorecharsf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes z35z36z37z38z39z310¨
	b85encodebase64.b85encode" 
builtins.bytes"builtins.bytes*'
b 
builtins.bytes"builtins.bytes*)
pad
builtins.bool"builtins.bool z35z36z37z38z39z310«
	b85decodebase64.b85decode" 
builtins.bytes"builtins.bytes*m
bf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310Ö
encodebytesbase64.encodebytes" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310Ö
decodebytesbase64.decodebytes" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz35z36z37z38z39z310s
b32hexencodebase64.b32hexencode" 
builtins.bytes"builtins.bytes*'
s 
builtins.bytes"builtins.bytesz310È
b32hexdecodebase64.b32hexdecode" 
builtins.bytes"builtins.bytes*m
sf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*.
casefold
builtins.bool"builtins.bool z310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*%
syssys *35*36*37*38*39*310