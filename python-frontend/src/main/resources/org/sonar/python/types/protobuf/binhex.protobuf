
binhexú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310F
Errorbinhex.Error"builtins.Exceptionj27j35j36j37j38j39j310µ
FInfobinhex.FInfo"builtins.object*p
__init__binhex.FInfo.__init__"
None*&
self
binhex.FInfo"binhex.FInfoz27z35z36z37z38z39z310j27j35j36j37j38j39j310Ú
openrsrcbinhex.openrsrc"builtins.object*å
__init__binhex.openrsrc.__init__"
None*,
self"
binhex.openrsrc"binhex.openrsrc*
args
Anyz27z35z36z37z38z39z310*
readbinhex.openrsrc.read"
builtins.str"builtins.str*,
self"
binhex.openrsrc"binhex.openrsrc*
args
Anyz27*ò
readbinhex.openrsrc.read" 
builtins.bytes"builtins.bytes*,
self"
binhex.openrsrc"binhex.openrsrc*
args
Anyz35z36z37z38z39z310*Ü
writebinhex.openrsrc.write"
None*,
self"
binhex.openrsrc"binhex.openrsrc*
args
Anyz27z35z36z37z38z39z310*s
closebinhex.openrsrc.close"
None*,
self"
binhex.openrsrc"binhex.openrsrcz27z35z36z37z38z39z310j27j35j36j37j38j39j310ù
BinHexbinhex.BinHex"builtins.object*Ö
__init__binhex.BinHex.__init__"
None*(
self
binhex.BinHex"binhex.BinHex*¥
name_finfo_dlen_rlenô
ETypeAlias[Tuple[builtins.str,binhex.FInfo,builtins.int,builtins.int]]∂
:Tuple[builtins.str,binhex.FInfo,builtins.int,builtins.int]
builtins.str"builtins.str
binhex.FInfo"binhex.FInfo
builtins.int"builtins.int
builtins.int"builtins.int"binhex._FileInfoTuple*Ò
ofpÁ
6TypeAlias[Union[builtins.str,typing.IO[builtins.str]]]ë
+Union[builtins.str,typing.IO[builtins.str]]
builtins.str"builtins.strB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO"binhex._FileHandleUnionz27*§
__init__binhex.BinHex.__init__"
None*(
self
binhex.BinHex"binhex.BinHex*¥
name_finfo_dlen_rlenô
ETypeAlias[Tuple[builtins.str,binhex.FInfo,builtins.int,builtins.int]]∂
:Tuple[builtins.str,binhex.FInfo,builtins.int,builtins.int]
builtins.str"builtins.str
binhex.FInfo"binhex.FInfo
builtins.int"builtins.int
builtins.int"builtins.int"binhex._FileInfoTuple*˚
ofpÒ
8TypeAlias[Union[builtins.str,typing.IO[builtins.bytes]]]ô
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO"binhex._FileHandleUnionz35z36z37z38z39z310*|
writebinhex.BinHex.write"
None*(
self
binhex.BinHex"binhex.BinHex*&
data
builtins.str"builtins.strz27*ï
writebinhex.BinHex.write"
None*(
self
binhex.BinHex"binhex.BinHex**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*w

close_databinhex.BinHex.close_data"
None*(
self
binhex.BinHex"binhex.BinHexz27z35z36z37z38z39z310*Ü

write_rsrcbinhex.BinHex.write_rsrc"
None*(
self
binhex.BinHex"binhex.BinHex*&
data
builtins.str"builtins.strz27*ü

write_rsrcbinhex.BinHex.write_rsrc"
None*(
self
binhex.BinHex"binhex.BinHex**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*m
closebinhex.BinHex.close"
None*(
self
binhex.BinHex"binhex.BinHexz27z35z36z37z38z39z310j27j35j36j37j38j39j310Ï
HexBinbinhex.HexBin"builtins.object*Œ
__init__binhex.HexBin.__init__"
None*(
self
binhex.HexBin"binhex.HexBin*Ò
ifpÁ
6TypeAlias[Union[builtins.str,typing.IO[builtins.str]]]ë
+Union[builtins.str,typing.IO[builtins.str]]
builtins.str"builtins.strB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO"binhex._FileHandleUnionz27*Ì
__init__binhex.HexBin.__init__"
None*(
self
binhex.HexBin"binhex.HexBin*˚
ifpÒ
8TypeAlias[Union[builtins.str,typing.IO[builtins.bytes]]]ô
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO"binhex._FileHandleUnionz35z36z37z38z39z310*ã
readbinhex.HexBin.read"
builtins.str"builtins.str*(
self
binhex.HexBin"binhex.HexBin*#
n
builtins.int"builtins.intz27*§
readbinhex.HexBin.read" 
builtins.bytes"builtins.bytes*(
self
binhex.HexBin"binhex.HexBin*#
n
builtins.int"builtins.intz35z36z37z38z39z310*w

close_databinhex.HexBin.close_data"
None*(
self
binhex.HexBin"binhex.HexBinz27z35z36z37z38z39z310*ï
	read_rsrcbinhex.HexBin.read_rsrc"
builtins.str"builtins.str*(
self
binhex.HexBin"binhex.HexBin*#
n
builtins.int"builtins.intz27*Æ
	read_rsrcbinhex.HexBin.read_rsrc" 
builtins.bytes"builtins.bytes*(
self
binhex.HexBin"binhex.HexBin*#
n
builtins.int"builtins.intz35z36z37z38z39z310*m
closebinhex.HexBin.close"
None*(
self
binhex.HexBin"binhex.HexBinz27z35z36z37z38z39z310j27j35j36j37j38j39j310Ç
getfileinfobinhex.getfileinfo"ô
ETypeAlias[Tuple[builtins.str,binhex.FInfo,builtins.int,builtins.int]]∂
:Tuple[builtins.str,binhex.FInfo,builtins.int,builtins.int]
builtins.str"builtins.str
binhex.FInfo"binhex.FInfo
builtins.int"builtins.int
builtins.int"builtins.int"binhex._FileInfoTuple*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310å
binhexbinhex.binhex"
None*%
inp
builtins.str"builtins.str*%
out
builtins.str"builtins.strz27z35z36z37z38z39z310å
hexbinbinhex.hexbin"
None*%
inp
builtins.str"builtins.str*%
out
builtins.str"builtins.strz27z35z36z37z38z39z310*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*f
REASONABLY_LARGEbinhex.REASONABLY_LARGE
builtins.int"builtins.int"27"35"36"37"38"39"310*T
LINELENbinhex.LINELEN
builtins.int"builtins.int"27"35"36"37"38"39"310*;
RUNCHARbinhex.RUNCHAR
builtins.str"builtins.str"27*T
RUNCHARbinhex.RUNCHAR 
builtins.bytes"builtins.bytes"35"36"37"38"39"310