
bz2ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310∑
Iterabletyping.Iterable"builtins.object*Â
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z3108PXj27j35j36j37j38j39j310…
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310æ
SupportsIndextyping_extensions.SupportsIndex"builtins.object*◊
	__index__)typing_extensions.SupportsIndex.__index__"
builtins.int"builtins.int*L
selfB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:abc.abstractmethod@z27z35z36z37z38z39z3108@Xj27j35j36j37j38j39j310ø
BZ2Filebz2.BZ2File"io.BufferedIOBase"	typing.IO*F
	__enter__bz2.BZ2File.__enter__"

bz2._T*
self

bz2._Tz27*Î
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*˛
filenameÔ
:TypeAlias[Union[builtins.unicode,typing.IO[builtins.str]]]ù
/Union[builtins.unicode,typing.IO[builtins.str]]$
builtins.unicode"builtins.unicodeB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO"bz2._PathOrFile*(
mode
builtins.str"builtins.str *7
	buffering&
Union[Any,None]
Any
None *1
compresslevel
builtins.int"builtins.int z27*≤
readbz2.BZ2File.read"
builtins.str"builtins.str*$
self
bz2.BZ2File"bz2.BZ2File*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*å
read1bz2.BZ2File.read1"
builtins.str"builtins.str*$
self
bz2.BZ2File"bz2.BZ2File*(
size
builtins.int"builtins.int z27*∏
readlinebz2.BZ2File.readline"
builtins.str"builtins.str*$
self
bz2.BZ2File"bz2.BZ2File*N
sizeB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z27*ê
readintobz2.BZ2File.readinto"
builtins.int"builtins.int*$
self
bz2.BZ2File"bz2.BZ2File*•
bù
cTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]]ò
XUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"
builtins.buffer"builtins.buffer"_typeshed.WriteableBufferz27*Ë
	readlinesbz2.BZ2File.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*$
self
bz2.BZ2File"bz2.BZ2File*N
sizeB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z27*∂
seekbz2.BZ2File.seek"
builtins.int"builtins.int*$
self
bz2.BZ2File"bz2.BZ2File*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27*ƒ
writebz2.BZ2File.write"
builtins.int"builtins.int*$
self
bz2.BZ2File"bz2.BZ2File*ﬂ
data‘
pTypeAlias[Union[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]]√
eUnion[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]
builtins.str"builtins.str(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"
builtins.buffer"builtins.buffer"_typeshed.ReadableBufferz27*—

writelinesbz2.BZ2File.writelines"
None*$
self
bz2.BZ2File"bz2.BZ2File*ˆ
seqÏ
Åtyping.Iterable[TypeAlias[Union[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]]]‘
pTypeAlias[Union[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]]√
eUnion[builtins.str,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,builtins.buffer]
builtins.str"builtins.str(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"
builtins.buffer"builtins.buffer"_typeshed.ReadableBuffer"typing.Iterablez27j27ÃM
BZ2Filebz2.BZ2File"_compression.BaseStream"	typing.IO*k
	__enter__bz2.BZ2File.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z39z310*À
readbz2.BZ2File.read" 
builtins.bytes"builtins.bytes*$
self
bz2.BZ2File"bz2.BZ2File*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*•
read1bz2.BZ2File.read1" 
builtins.bytes"builtins.bytes*$
self
bz2.BZ2File"bz2.BZ2File*(
size
builtins.int"builtins.int z35z36z37z38z39z310*—
readlinebz2.BZ2File.readline" 
builtins.bytes"builtins.bytes*$
self
bz2.BZ2File"bz2.BZ2File*N
sizeB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z35z36z37z38z39z310*·
readintobz2.BZ2File.readinto"
builtins.int"builtins.int*$
self
bz2.BZ2File"bz2.BZ2File*·
bŸ
STypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]‰
HUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.WriteableBufferz35z36z37z38z39z310*É
	readlinesbz2.BZ2File.readlines"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*$
self
bz2.BZ2File"bz2.BZ2File*N
sizeB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z35z36z37z38z39z310*À
seekbz2.BZ2File.seek"
builtins.int"builtins.int*$
self
bz2.BZ2File"bz2.BZ2File*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z35z36z37z38z39z310*ù
writebz2.BZ2File.write"
builtins.int"builtins.int*$
self
bz2.BZ2File"bz2.BZ2File*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBufferz35z36z37z38z39z310*õ

writelinesbz2.BZ2File.writelines"
None*$
self
bz2.BZ2File"bz2.BZ2File*´
seq°
styping.Iterable[TypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]]ò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer"typing.Iterablez35z36z37z38z39z3102¸
__init__bz2.BZ2File.__init__¨
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*:
filename,
bz2._WritableFileobj"bz2._WritableFileobj*£
modeò
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteBinaryMode*7
	buffering&
Union[Any,None]
Any
None *1
compresslevel
builtins.int"builtins.int 0:overloadX¸
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*:
filename,
bz2._ReadableFileobj"bz2._ReadableFileobj*Û
modeÊ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadBinaryMode *7
	buffering&
Union[Any,None]
Any
None *1
compresslevel
builtins.int"builtins.int 0:overloadXõ
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ü

mode˘	
Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]Ê
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadBinaryModeò
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteBinaryMode *7
	buffering&
Union[Any,None]
Any
None *1
compresslevel
builtins.int"builtins.int 0:overloadX"35"36"37"382 
__init__bz2.BZ2File.__init__Û
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*:
filename,
bz2._WritableFileobj"bz2._WritableFileobj*£
modeò
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteBinaryMode*1
compresslevel
builtins.int"builtins.int 0:overloadX√
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*:
filename,
bz2._ReadableFileobj"bz2._ReadableFileobj*Û
modeÊ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadBinaryMode *1
compresslevel
builtins.int"builtins.int 0:overloadX‚
__init__bz2.BZ2File.__init__"
None*$
self
bz2.BZ2File"bz2.BZ2File*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ü

mode˘	
Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]Ê
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadBinaryModeò
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteBinaryMode *1
compresslevel
builtins.int"builtins.int 0:overloadX"39"310j35j36j37j38j39j310Ú
BZ2Compressorbz2.BZ2Compressor"builtins.object*≤
__init__bz2.BZ2Compressor.__init__"
None*0
self&
bz2.BZ2Compressor"bz2.BZ2Compressor*1
compresslevel
builtins.int"builtins.int z27z35z36z37z38z39z310*¢
compressbz2.BZ2Compressor.compress"
builtins.str"builtins.str*0
self&
bz2.BZ2Compressor"bz2.BZ2Compressor*&
__data
builtins.str"builtins.strz27*ø
compressbz2.BZ2Compressor.compress" 
builtins.bytes"builtins.bytes*0
self&
bz2.BZ2Compressor"bz2.BZ2Compressor**
__data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*t
flushbz2.BZ2Compressor.flush"
builtins.str"builtins.str*0
self&
bz2.BZ2Compressor"bz2.BZ2Compressorz27*ç
flushbz2.BZ2Compressor.flush" 
builtins.bytes"builtins.bytes*0
self&
bz2.BZ2Compressor"bz2.BZ2Compressorz35z36z37z38z39z310j27j35j36j37j38j39j310í	
BZ2Decompressorbz2.BZ2Decompressor"builtins.object*¨

decompressbz2.BZ2Decompressor.decompress"
builtins.str"builtins.str*4
self*
bz2.BZ2Decompressor"bz2.BZ2Decompressor*&
data
builtins.str"builtins.strz27*˘

decompressbz2.BZ2Decompressor.decompress" 
builtins.bytes"builtins.bytes*4
self*
bz2.BZ2Decompressor"bz2.BZ2Decompressor**
data 
builtins.bytes"builtins.bytes*.

max_length
builtins.int"builtins.int z35z36z37z38z39z310*î
unused_databz2.BZ2Decompressor.unused_data"
builtins.str"builtins.str*4
self*
bz2.BZ2Decompressor"bz2.BZ2Decompressor0:property`z27*≠
unused_databz2.BZ2Decompressor.unused_data" 
builtins.bytes"builtins.bytes*4
self*
bz2.BZ2Decompressor"bz2.BZ2Decompressor0:property`z35z36z37z38z39z310*õ
eofbz2.BZ2Decompressor.eof"
builtins.bool"builtins.bool*4
self*
bz2.BZ2Decompressor"bz2.BZ2Decompressor0:property`z35z36z37z38z39z310*´
needs_inputbz2.BZ2Decompressor.needs_input"
builtins.bool"builtins.bool*4
self*
bz2.BZ2Decompressor"bz2.BZ2Decompressor0:property`z35z36z37z38z39z310j27j35j36j37j38j39j310Q

BaseStream_compression.BaseStream"io.BufferedIOBasej35j36j37j38j39j310◊
TextIOtyping.TextIO"	typing.IO*ì
buffertyping.TextIO.buffer""
typing.BinaryIO"typing.BinaryIO*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*ë
encodingtyping.TextIO.encoding"
builtins.str"builtins.str*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*µ
errorstyping.TextIO.errors"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*ù
line_bufferingtyping.TextIO.line_buffering"
builtins.int"builtins.int*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*|
newlinestyping.TextIO.newlines"
Any*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*ô
	__enter__typing.TextIO.__enter__"
typing.TextIO"typing.TextIO*&
self
typing.TextIO"typing.TextIO0:abstractmethod@z35z36z37z38z39z310j35j36j37j38j39j310Y
_ReadableFileobjbz2._ReadableFileobj"_compression._ReaderXj35j36j37j38j39j310ò
_WritableFileobjbz2._WritableFileobj"builtins.object*¡
writebz2._WritableFileobj.write""
builtins.object"builtins.object*6
self,
bz2._WritableFileobj"bz2._WritableFileobj*'
__b 
builtins.bytes"builtins.bytesz35z36z37z38z39z310Xj35j36j37j38j39j310ï
compressbz2.compress"
builtins.str"builtins.str*&
data
builtins.str"builtins.str*1
compresslevel
builtins.int"builtins.int z27≤
compressbz2.compress" 
builtins.bytes"builtins.bytes**
data 
builtins.bytes"builtins.bytes*1
compresslevel
builtins.int"builtins.int z35z36z37z38z39z310f

decompressbz2.decompress"
builtins.str"builtins.str*&
data
builtins.str"builtins.strz27É

decompressbz2.decompress" 
builtins.bytes"builtins.bytes**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310"Æ1
openbz2.openÍ
openbz2.open"
bz2.BZ2File"bz2.BZ2File*:
filename,
bz2._ReadableFileobj"bz2._ReadableFileobj*Û
modeÊ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadBinaryMode *1
compresslevel
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:overloadX®
openbz2.open"
typing.TextIO"typing.TextIO*:
filename,
bz2._ReadableFileobj"bz2._ReadableFileobj*z
modep
 TypeAlias[Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadTextMode*1
compresslevel
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXö
openbz2.open"
bz2.BZ2File"bz2.BZ2File*:
filename,
bz2._WritableFileobj"bz2._WritableFileobj*£
modeò
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteBinaryMode*1
compresslevel
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:overloadXü
openbz2.open"
typing.TextIO"typing.TextIO*:
filename,
bz2._WritableFileobj"bz2._WritableFileobj*
modeÂ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteTextMode*1
compresslevel
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXâ
openbz2.open"
bz2.BZ2File"bz2.BZ2File*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ü

mode˘	
Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]Ê
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadBinaryModeò
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteBinaryMode *1
compresslevel
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:overloadXü
openbz2.open"
typing.TextIO"typing.TextIO*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*‰
modeŸ
{Union[TypeAlias[Literal[builtins.str]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]p
 TypeAlias[Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._ReadTextModeÂ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"bz2._WriteTextMode*1
compresslevel
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36"37"38"39"310*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*`
Protocoltyping.Protocol*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310*
Literaltyping_extensions.Literal@
typing_extensions._SpecialForm"typing_extensions._SpecialForm"35"36"37"38"39"310