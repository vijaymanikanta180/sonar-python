
cPickleœ 
IO	typing.IO"typing.Iterator*ä
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*ä
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*~
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*î
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*~
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ñ
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27*ö
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*∏
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27*Ë
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27*Ê
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27*ö
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*Í
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27*ö
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27*Ÿ

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*æ
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¥
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*©
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27Pj27‡
PicklercPickle.Pickler"builtins.object*‹
__init__cPickle.Pickler.__init__"
None*,
self"
cPickle.Pickler"cPickle.Pickler*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*,
protocol
builtins.int"builtins.int z27*j
dumpcPickle.Pickler.dump"
None*,
self"
cPickle.Pickler"cPickle.Pickler*
obj
Anyz27*d

clear_memocPickle.Pickler.clear_memo"
None*,
self"
cPickle.Pickler"cPickle.Picklerz27j27¨
	UnpicklercPickle.Unpickler"builtins.object*¥
__init__cPickle.Unpickler.__init__"
None*0
self&
cPickle.Unpickler"cPickle.Unpickler*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27*]
loadcPickle.Unpickler.load"
Any*0
self&
cPickle.Unpickler"cPickle.Unpicklerz27*a
noloadcPickle.Unpickler.noload"
Any*0
self&
cPickle.Unpickler"cPickle.Unpicklerz27j27:
PickleErrorcPickle.PickleError"builtins.Exceptionj27C
UnpicklingErrorcPickle.UnpicklingError"cPickle.PickleErrorj27A
BadPickleGetcPickle.BadPickleGet"cPickle.UnpicklingErrorj27?
PicklingErrorcPickle.PicklingError"cPickle.PickleErrorj27I
UnpickleableErrorcPickle.UnpickleableError"cPickle.PicklingErrorj27∞
dumpcPickle.dump"
None*
obj
Any*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*,
protocol
builtins.int"builtins.int z27x
dumpscPickle.dumps"
builtins.str"builtins.str*
obj
Any*,
protocol
builtins.int"builtins.int z27o
loadcPickle.load"
Any*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27J
loadscPickle.loads"
Any*%
str
builtins.str"builtins.strz27*9
Any
typing.Any"
builtins.object"builtins.object*27*N
HIGHEST_PROTOCOLcPickle.HIGHEST_PROTOCOL
builtins.int"builtins.int*27*Ä
compatible_formatscPickle.compatible_formatsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*J
format_versioncPickle.format_version
builtins.str"builtins.str*27