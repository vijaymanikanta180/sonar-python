
	cStringIO 
ABCMetaabc.ABCMeta"builtins.type*¿
__init__abc.ABCMeta.__init__"
None*$
self
abc.ABCMeta"abc.ABCMeta*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*f
	namespaceW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz27*{
__instancecheck__abc.ABCMeta.__instancecheck__"
Any*#
cls
abc.ABCMeta"abc.ABCMeta*
instance
Anyz27*{
__subclasscheck__abc.ABCMeta.__subclasscheck__"
Any*#
cls
abc.ABCMeta"abc.ABCMeta*
subclass
Anyz27*Ê
_dump_registryabc.ABCMeta._dump_registry"
None*#
cls
abc.ABCMeta"abc.ABCMeta*Ñ
filex
(Union[_typeshed.SupportsWrite[Any],None]@
_typeshed.SupportsWrite[Any]
Any"_typeshed.SupportsWrite
None z27*y
registerabc.ABCMeta.register"
None*#
cls
abc.ABCMeta"abc.ABCMeta*$
subclass
	Type[Any]
Anyz27j27œ 
IO	typing.IO"typing.Iterator*ä
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*ä
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*~
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*î
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*~
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ñ
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27*ö
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*∏
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27*Ë
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27*Ê
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27*ö
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*Í
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27*ö
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27*Ÿ

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*æ
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¥
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*©
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27Pj27Ö
Iterabletyping.Iterable"builtins.object*Ã
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z278PXj27à
Iteratortyping.Iterator"typing.Iterable*î
nexttyping.Iterator.next"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z27*∏
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz278PXj27Ò
	InputTypecStringIO.InputType"	typing.IO"typing.Iterator*Ä
getvaluecStringIO.InputType.getvalue"
builtins.str"builtins.str*4
self*
cStringIO.InputType"cStringIO.InputTypez27*f
closecStringIO.InputType.close"
None*4
self*
cStringIO.InputType"cStringIO.InputTypez27*å
closedcStringIO.InputType.closed"
builtins.bool"builtins.bool*4
self*
cStringIO.InputType"cStringIO.InputType0:property`z27*f
flushcStringIO.InputType.flush"
None*4
self*
cStringIO.InputType"cStringIO.InputTypez27*~
isattycStringIO.InputType.isatty"
builtins.bool"builtins.bool*4
self*
cStringIO.InputType"cStringIO.InputTypez27*¢
readcStringIO.InputType.read"
builtins.str"builtins.str*4
self*
cStringIO.InputType"cStringIO.InputType*(
size
builtins.int"builtins.int z27*™
readlinecStringIO.InputType.readline"
builtins.str"builtins.str*4
self*
cStringIO.InputType"cStringIO.InputType*(
size
builtins.int"builtins.int z27*⁄
	readlinescStringIO.InputType.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*4
self*
cStringIO.InputType"cStringIO.InputType*(
hint
builtins.int"builtins.int z27*Œ
seekcStringIO.InputType.seek"
builtins.int"builtins.int*4
self*
cStringIO.InputType"cStringIO.InputType*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27*x
tellcStringIO.InputType.tell"
builtins.int"builtins.int*4
self*
cStringIO.InputType"cStringIO.InputTypez27*“
truncatecStringIO.InputType.truncate"
builtins.int"builtins.int*4
self*
cStringIO.InputType"cStringIO.InputType*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*å
__iter__cStringIO.InputType.__iter__"*
cStringIO.InputType"cStringIO.InputType*2
self*
cStringIO.InputType"cStringIO.InputTypez27*x
nextcStringIO.InputType.next"
builtins.str"builtins.str*4
self*
cStringIO.InputType"cStringIO.InputTypez27*f
resetcStringIO.InputType.reset"
None*4
self*
cStringIO.InputType"cStringIO.InputTypez27@babc.ABCMetaj27Ê

OutputTypecStringIO.OutputType"	typing.IO"typing.Iterator*ì
	softspacecStringIO.OutputType.softspace"
builtins.int"builtins.int*6
self,
cStringIO.OutputType"cStringIO.OutputType0:property`z27*É
getvaluecStringIO.OutputType.getvalue"
builtins.str"builtins.str*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*i
closecStringIO.OutputType.close"
None*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*è
closedcStringIO.OutputType.closed"
builtins.bool"builtins.bool*6
self,
cStringIO.OutputType"cStringIO.OutputType0:property`z27*i
flushcStringIO.OutputType.flush"
None*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*Å
isattycStringIO.OutputType.isatty"
builtins.bool"builtins.bool*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*•
readcStringIO.OutputType.read"
builtins.str"builtins.str*6
self,
cStringIO.OutputType"cStringIO.OutputType*(
size
builtins.int"builtins.int z27*≠
readlinecStringIO.OutputType.readline"
builtins.str"builtins.str*6
self,
cStringIO.OutputType"cStringIO.OutputType*(
size
builtins.int"builtins.int z27*›
	readlinescStringIO.OutputType.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*6
self,
cStringIO.OutputType"cStringIO.OutputType*(
hint
builtins.int"builtins.int z27*—
seekcStringIO.OutputType.seek"
builtins.int"builtins.int*6
self,
cStringIO.OutputType"cStringIO.OutputType*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27*{
tellcStringIO.OutputType.tell"
builtins.int"builtins.int*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*’
truncatecStringIO.OutputType.truncate"
builtins.int"builtins.int*6
self,
cStringIO.OutputType"cStringIO.OutputType*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*ë
__iter__cStringIO.OutputType.__iter__",
cStringIO.OutputType"cStringIO.OutputType*4
self,
cStringIO.OutputType"cStringIO.OutputTypez27*{
nextcStringIO.OutputType.next"
builtins.str"builtins.str*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*i
resetcStringIO.OutputType.reset"
None*6
self,
cStringIO.OutputType"cStringIO.OutputTypez27*Ú
writecStringIO.OutputType.write"
builtins.int"builtins.int*6
self,
cStringIO.OutputType"cStringIO.OutputType*s
bl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicodez27*∏

writelinescStringIO.OutputType.writelines"
None*6
self,
cStringIO.OutputType"cStringIO.OutputType*¬
lines∂
5typing.Iterable[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"typing.Iterablez27@babc.ABCMetaj27D
overloadtyping.overload"
	typing._F*
f
	typing._Fz27"˝
StringIOcStringIO.StringIOZ
StringIOcStringIO.StringIO",
cStringIO.OutputType"cStringIO.OutputType0:overloadX}
StringIOcStringIO.StringIO"*
cStringIO.InputType"cStringIO.InputType*#
s
builtins.str"builtins.str0:overloadX"27*K
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27*E
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27