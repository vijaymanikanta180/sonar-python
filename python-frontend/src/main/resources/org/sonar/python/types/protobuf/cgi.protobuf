
cgiÉ
SupportsGetItem_typeshed.SupportsGetItem"typing.Container*°
__getitem__%_typeshed.SupportsGetItem.__getitem__"
_typeshed._VT_co*ñ
selfç
@_typeshed.SupportsGetItem[_typeshed._KT_contra,_typeshed._VT_co]
_typeshed._KT_contra
_typeshed._VT_co"_typeshed.SupportsGetItem*
__k
_typeshed._KT_contraz27z35z36z37z38z39z310PXj27j35j36j37j38j39j310æ
SupportsItemAccess_typeshed.SupportsItemAccess"_typeshed.SupportsGetItem*≤
__setitem__(_typeshed.SupportsItemAccess.__setitem__"
None*ñ
selfç
@_typeshed.SupportsItemAccess[_typeshed._KT_contra,_typeshed._VT]
_typeshed._KT_contra
_typeshed._VT"_typeshed.SupportsItemAccess*
__k
_typeshed._KT_contra*
__v
_typeshed._VTz27z35z36z37z38z39z310*ò
__delitem__(_typeshed.SupportsItemAccess.__delitem__"
None*ñ
selfç
@_typeshed.SupportsItemAccess[_typeshed._KT_contra,_typeshed._VT]
_typeshed._KT_contra
_typeshed._VT"_typeshed.SupportsItemAccess*
__v
_typeshed._KT_contraz27z35z36z37z38z39z310PXj27j35j36j37j38j39j310ƒ
typebuiltins.type"builtins.object*ò
__call__builtins.type.__call__"
Any*(
self
builtins.type"builtins.type*
args
Any*
kwds
Anyz27z35z36z37z38z39z310*ß
__subclasses__builtins.type.__subclasses__">
builtins.list[builtins._TT]
builtins._TT"builtins.list*
self
builtins._TTz27z35z36z37z38z39z310*Æ
mrobuiltins.type.mro"M
builtins.list[builtins.type]
builtins.type"builtins.type"builtins.list*(
self
builtins.type"builtins.typez27z35z36z37z38z39z310*≤
__instancecheck__builtins.type.__instancecheck__"
builtins.bool"builtins.bool*(
self
builtins.type"builtins.type*
instance
Anyz27z35z36z37z38z39z310*…
__subclasscheck__builtins.type.__subclasscheck__"
builtins.bool"builtins.bool*(
self
builtins.type"builtins.type*,
subclass
builtins.type"builtins.typez27z35z36z37z38z39z310*ä
__prepare__builtins.type.__prepare__"Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*D
metacls7
Type[builtins.type]
builtins.type"builtins.type*&
__name
builtins.str"builtins.str*Z
__basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*
kwds
Any0:classmethodpz35z36z37z38z39z310*u
__or__builtins.type.__or__"
types.Union"types.Union*&
self
builtins.type"builtins.type*
t
Anyz310*w
__ror__builtins.type.__ror__"
types.Union"types.Union*&
self
builtins.type"builtins.type*
t
Anyz3102Ü
__init__builtins.type.__init__è
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*)
o"
builtins.object"builtins.object0:overloadXÀ
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*a
dictW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict0:overloadX"272Æ
__init__builtins.type.__init__è
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*)
o"
builtins.object"builtins.object0:overloadXﬁ
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*a
dictW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
kwds
Any0:overloadX"35"36"37"38"39"3102·
__new__builtins.type.__new__ª
__new__builtins.type.__new__"
builtins.type"builtins.type*@
cls7
Type[builtins.type]
builtins.type"builtins.type*)
o"
builtins.object"builtins.object0:overloadX¸
__new__builtins.type.__new__"
builtins.type"builtins.type*@
cls7
Type[builtins.type]
builtins.type"builtins.type*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*f
	namespaceW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict0:overloadX"272Ï
__new__builtins.type.__new__ª
__new__builtins.type.__new__"
builtins.type"builtins.type*@
cls7
Type[builtins.type]
builtins.type"builtins.type*)
o"
builtins.object"builtins.object0:overloadXÚ
__new__builtins.type.__new__"
builtins._TT*1
cls(
Type[builtins._TT]
builtins._TT*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*f
	namespaceW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
kwds
Any0:overloadX"35"36"37"38"39"310j27j35j36j37j38j39j310ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310∑
Iterabletyping.Iterable"builtins.object*Â
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z3108PXj27j35j36j37j38j39j310Ó
Iteratortyping.Iterator"typing.Iterable*î
nexttyping.Iterator.next"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z27*—
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz27z35z36z37z38z39z310*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z3108PXj27j35j36j37j38j39j310É
Mappingtyping.Mapping"typing.Iterable"typing.Container*–
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z27*ƒ
keystyping.Mapping.keys":
builtins.list[typing._KT]

typing._KT"builtins.list*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*Œ
valuestyping.Mapping.values"@
builtins.list[typing._VT_co]
typing._VT_co"builtins.list*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*î
itemstyping.Mapping.items"á
.builtins.list[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"builtins.list*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*–
iterkeystyping.Mapping.iterkeys">
typing.Iterator[typing._KT]

typing._KT"typing.Iterator*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*⁄

itervaluestyping.Mapping.itervalues"D
typing.Iterator[typing._VT_co]
typing._VT_co"typing.Iterator*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*†
	iteritemstyping.Mapping.iteritems"ã
0typing.Iterator[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Iterator*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*ﬂ
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz27*æ
__len__typing.Mapping.__len__"
builtins.int"builtins.int*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping0:abstractmethod@z272∆
gettyping.Mapping.get„
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:overloadX¿
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"27Pj27í
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310…
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310Œ
UserDictUserDict.UserDict"builtins.dict*ô
__init__UserDict.UserDict.__init__"
None*o
selfe
,UserDict.UserDict[UserDict._KT,UserDict._VT]
UserDict._KT
UserDict._VT"UserDict.UserDict*r
initialdata_
)typing.Mapping[UserDict._KT,UserDict._VT]
UserDict._KT
UserDict._VT"typing.Mapping z27Pj27©
_Environcgi._Environ"builtins.object*≠
__getitem__cgi._Environ.__getitem__"
builtins.str"builtins.str*$
self
cgi._Environ"cgi._Environ*#
__k
builtins.str"builtins.strz27z35z36z37z38z39z310*Æ
keyscgi._Environ.keys"N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*&
self
cgi._Environ"cgi._Environz27z35z36z37z38z39z310Xj27j35j36j37j38j39j310•
MiniFieldStoragecgi.MiniFieldStorage"builtins.object*Ø
__init__cgi.MiniFieldStorage.__init__"
None*6
self,
cgi.MiniFieldStorage"cgi.MiniFieldStorage*
name
Any*
value
Anyz27z35z36z37z38z39z310*ö
__repr__cgi.MiniFieldStorage.__repr__"
builtins.str"builtins.str*4
self,
cgi.MiniFieldStorage"cgi.MiniFieldStoragez27z35z36z37z38z39z310j27j35j36j37j38j39j310ˇ!
FieldStoragecgi.FieldStorage"builtins.object*⁄
__init__cgi.FieldStorage.__init__"
None*.
self$
cgi.FieldStorage"cgi.FieldStorage*.
fp$
typing.IO[Any]
Any"	typing.IO *Ü
headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *1
outerboundary
builtins.str"builtins.str *ù
environç
4_typeshed.SupportsGetItem[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsGetItem *5
keep_blank_values
builtins.int"builtins.int *2
strict_parsing
builtins.int"builtins.int z27*õ
__init__cgi.FieldStorage.__init__"
None*.
self$
cgi.FieldStorage"cgi.FieldStorage*X
fpN
Union[typing.IO[Any],None]$
typing.IO[Any]
Any"	typing.IO
None *Ã
headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *5
outerboundary 
builtins.bytes"builtins.bytes *ù
environç
4_typeshed.SupportsGetItem[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsGetItem *5
keep_blank_values
builtins.int"builtins.int *2
strict_parsing
builtins.int"builtins.int *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *Z
max_num_fieldsD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	separator
builtins.str"builtins.str z35z36z37z38z39z310*é
__repr__cgi.FieldStorage.__repr__"
builtins.str"builtins.str*,
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z39z310*¿
__iter__cgi.FieldStorage.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*,
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z39z310*§
__getitem__cgi.FieldStorage.__getitem__"
Any*,
self$
cgi.FieldStorage"cgi.FieldStorage*#
key
builtins.str"builtins.strz27z35z36z37z38z39z310*∫
getvaluecgi.FieldStorage.getvalue"
Any*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.str*
default
Any z27z35z36z37z38z39z310*∫
getfirstcgi.FieldStorage.getfirst"
Any*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.str*
default
Any z27z35z36z37z38z39z310*≈
getlistcgi.FieldStorage.getlist",
builtins.list[Any]
Any"builtins.list*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.strz27z35z36z37z38z39z310*∂
keyscgi.FieldStorage.keys"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z39z310*û
has_keycgi.FieldStorage.has_key"
builtins.bool"builtins.bool*.
self$
cgi.FieldStorage"cgi.FieldStorage*%
key
builtins.str"builtins.strz27*Ω
__contains__cgi.FieldStorage.__contains__"
builtins.bool"builtins.bool*,
self$
cgi.FieldStorage"cgi.FieldStorage*#
key
builtins.str"builtins.strz27z35z36z37z38z39z310*å
__len__cgi.FieldStorage.__len__"
builtins.int"builtins.int*,
self$
cgi.FieldStorage"cgi.FieldStoragez27z35z36z37z38z39z310*}
__nonzero__cgi.FieldStorage.__nonzero__"
builtins.bool"builtins.bool*,
self$
cgi.FieldStorage"cgi.FieldStoragez27*∂
	make_filecgi.FieldStorage.make_file"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*.
self$
cgi.FieldStorage"cgi.FieldStorage*
binary
Any z27*ñ
	make_filecgi.FieldStorage.make_file"$
typing.IO[Any]
Any"	typing.IO*.
self$
cgi.FieldStorage"cgi.FieldStoragez35z36z37z38z39z310*`
	__enter__cgi.FieldStorage.__enter__"

cgi._T*
self

cgi._Tz35z36z37z38z39z310*â
__exit__cgi.FieldStorage.__exit__"
None*,
self$
cgi.FieldStorage"cgi.FieldStorage*
args
Anyz35z36z37z38z39z310*é
__bool__cgi.FieldStorage.__bool__"
builtins.bool"builtins.bool*.
self$
cgi.FieldStorage"cgi.FieldStoragez35z36z37z38z39z310j27j35j36j37j38j39j310†
FormContentDictcgi.FormContentDict"UserDict.UserDict*‡
__init__cgi.FormContentDict.__init__"
None*4
self*
cgi.FormContentDict"cgi.FormContentDict*Ü
environw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *5
keep_blank_values
builtins.int"builtins.int *2
strict_parsing
builtins.int"builtins.int z27j27«
SvFormContentDictcgi.SvFormContentDict"cgi.FormContentDict*Å
getlistcgi.SvFormContentDict.getlist"
Any*8
self.
cgi.SvFormContentDict"cgi.SvFormContentDict*
key
Anyz27j27M
InterpFormContentDictcgi.InterpFormContentDict"cgi.SvFormContentDictj27“
FormContentcgi.FormContent"cgi.FormContentDict*ß
indexed_valuecgi.FormContent.indexed_value"
Any*,
self"
cgi.FormContent"cgi.FormContent*
key
Any**
location
builtins.int"builtins.intz27*k
valuecgi.FormContent.value"
Any*,
self"
cgi.FormContent"cgi.FormContent*
key
Anyz27*Ç
lengthcgi.FormContent.length"
builtins.int"builtins.int*,
self"
cgi.FormContent"cgi.FormContent*
key
Anyz27*q
strippedcgi.FormContent.stripped"
Any*,
self"
cgi.FormContent"cgi.FormContent*
key
Anyz27*â
parscgi.FormContent.pars"9
builtins.dict[Any,Any]
Any
Any"builtins.dict*,
self"
cgi.FormContent"cgi.FormContentz27j27∫
parse	cgi.parse"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*X
fpN
Union[typing.IO[Any],None]$
typing.IO[Any]
Any"	typing.IO
None *£
environì
7_typeshed.SupportsItemAccess[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsItemAccess *7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27˛
parse	cgi.parse"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*X
fpN
Union[typing.IO[Any],None]$
typing.IO[Any]
Any"	typing.IO
None *£
environì
7_typeshed.SupportsItemAccess[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsItemAccess *7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool *-
	separator
builtins.str"builtins.str z35z36z37z38z39z310Ú
parse_qscgi.parse_qs"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*$
qs
builtins.str"builtins.str*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27z35z36z37‰
	parse_qslcgi.parse_qsl"¢
/builtins.list[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list*$
qs
builtins.str"builtins.str*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27z35z36z37©
parse_multipartcgi.parse_multipart"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*,
fp$
typing.IO[Any]
Any"	typing.IO*ô
pdictç
4_typeshed.SupportsGetItem[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"_typeshed.SupportsGetItemz27ª
parse_multipartcgi.parse_multipart"∫
9builtins.dict[builtins.str,builtins.list[builtins.bytes]]
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"builtins.dict*,
fp$
typing.IO[Any]
Any"	typing.IO*ü
pdictì
6_typeshed.SupportsGetItem[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"_typeshed.SupportsGetItemz35z36û
parse_multipartcgi.parse_multipart"ã
.builtins.dict[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"builtins.dict*,
fp$
typing.IO[Any]
Any"	typing.IO*ü
pdictì
6_typeshed.SupportsGetItem[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"_typeshed.SupportsGetItem*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *-
	separator
builtins.str"builtins.str z37z38z39z310Ω
parse_headercgi.parse_header"’
<Tuple[builtins.str,builtins.dict[builtins.str,builtins.str]]
builtins.str"builtins.stru
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*&
line
builtins.str"builtins.strz27z35z36z37z38z39z310d
testcgi.test"
None*+
environ
cgi._Environ"cgi._Environ z27z35z36z37z38z39z310v
print_environcgi.print_environ"
None*+
environ
cgi._Environ"cgi._Environ z27z35z36z37z38z39z310¶

print_formcgi.print_form"
None*a
formW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz27z35z36z37z38z39z310M
print_directorycgi.print_directory"
Nonez27z35z36z37z38z39z310U
print_environ_usagecgi.print_environ_usage"
Nonez27z35z36z37z38z39z310r
escape
cgi.escape"
typing.AnyStr*
s
typing.AnyStr*+
quote
builtins.bool"builtins.bool z27π
escape
cgi.escape"
builtins.str"builtins.str*#
s
builtins.str"builtins.str*T
quoteG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z35z36z37*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*d
Protocoltyping.Protocol*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310