
disÓ
Iteratortyping.Iterator"typing.Iterable*î
nexttyping.Iterator.next"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z27*—
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz27z35z36z37z38z39z310*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z3108PXj27j35j36j37j38j39j310º$
IO	typing.IO"typing.Iterator*ü
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ü
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*ì
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z35z36z37z38z39z310*©
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ì
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*´
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*Õ
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˝
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*˚
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z35z36z37z38z39z310*Ø
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*•
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*ˇ
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z35z36z37z38z39z310*Ø
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*¡
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z35z36z37z38z39z310*Ó

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*”
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*…
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310*æ
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z35z36z37z38z39z310Pj35j36j37j38j39j310Ô

NamedTupletyping.NamedTuple"builtins.tuple*Ã
__init__typing.NamedTuple.__init__"
None*0
self&
typing.NamedTuple"typing.NamedTuple**
typename
builtins.str"builtins.str*ç
fields
(typing.Iterable[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterable *
kwargs
Anyz35z36z37z38z39z310*∆
_maketyping.NamedTuple._make"
	typing._T*+
cls"
Type[typing._T]
	typing._T*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:classmethodpz35z36z37z38z39z310*œ
_asdicttyping.NamedTuple._asdict"k
)collections.OrderedDict[builtins.str,Any]
builtins.str"builtins.str
Any"collections.OrderedDict*0
self&
typing.NamedTuple"typing.NamedTuplez35z36z37*º
_asdicttyping.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
typing.NamedTuple"typing.NamedTuplez38z39z310*|
_replacetyping.NamedTuple._replace"
	typing._T*
self
	typing._T*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310Ê
Instructiondis.Instruction"builtins.tuple*¢
_replacedis.Instruction._replace"
dis.Instruction._NT*"
_self
dis.Instruction._NT**
opname
builtins.str"builtins.str **
opcode
builtins.int"builtins.int *O
argD
Union[builtins.int,None]
builtins.int"builtins.int
None *
argval
Any *+
argrepr
builtins.str"builtins.str **
offset
builtins.int"builtins.int *W
starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *4
is_jump_target
builtins.bool"builtins.bool z35z36z37z38z39z310*Æ
__new__dis.Instruction.__new__"
dis.Instruction._NT*@
_cls6
Type[dis.Instruction._NT]
dis.Instruction._NT*(
opname
builtins.str"builtins.str*(
opcode
builtins.int"builtins.int*M
argD
Union[builtins.int,None]
builtins.int"builtins.int
None*
argval
Any*)
argrepr
builtins.str"builtins.str*(
offset
builtins.int"builtins.int*U
starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None*2
is_jump_target
builtins.bool"builtins.boolz35z36z37z38z39z310*∏
_asdictdis.Instruction._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*"
_self
dis.Instruction._NTz35z36z37z38z39z310*ã
_makedis.Instruction._make"
dis.Instruction._NT*@
_cls6
Type[dis.Instruction._NT]
dis.Instruction._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310˙
Bytecodedis.Bytecode"builtins.object*ù	
__init__dis.Bytecode.__init__"
None*&
self
dis.Bytecode"dis.Bytecode*˙
xÚ
†TypeAlias[Union[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.bytes]]∞
ïUnion[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.bytes]”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"dis._have_code_or_string*V

first_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
current_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*∏
__iter__dis.Bytecode.__iter__"’
ètyping.Iterator[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]]Ø
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool"typing.Iterator*$
self
dis.Bytecode"dis.Bytecodez35z36z37z38z39z310*~
__repr__dis.Bytecode.__repr__"
builtins.str"builtins.str*$
self
dis.Bytecode"dis.Bytecodez35z36z37z38z39z310*x
infodis.Bytecode.info"
builtins.str"builtins.str*&
self
dis.Bytecode"dis.Bytecodez35z36z37z38z39z310*v
disdis.Bytecode.dis"
builtins.str"builtins.str*&
self
dis.Bytecode"dis.Bytecodez35z36z37z38z39z310*Ë
from_tracebackdis.Bytecode.from_traceback"
dis.Bytecode"dis.Bytecode*=
cls4
Type[dis.Bytecode]
dis.Bytecode"dis.Bytecode*2
tb*
types.TracebackType"types.TracebackType0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310È

findlabelsdis.findlabels"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*˙
codeÔ
yTypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]]ﬂ
nUnion[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]2
types.UnboundMethodType"types.UnboundMethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_codez27‚

findlabelsdis.findlabels"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*ﬁ
code”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_codez35z36z37z38z39z310Œ
findlinestartsdis.findlinestarts"¶
1typing.Iterator[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"typing.Iterator*˙
codeÔ
yTypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]]ﬂ
nUnion[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]2
types.UnboundMethodType"types.UnboundMethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_codez27«
findlinestartsdis.findlinestarts"¶
1typing.Iterator[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"typing.Iterator*ﬁ
code”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_codez35z36z37z38z39z310Ω
disdis.dis"
None*û
xî
•TypeAlias[Union[TypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.str]]Õ
öUnion[TypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.str]Ô
yTypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]]ﬂ
nUnion[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]2
types.UnboundMethodType"types.UnboundMethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code
builtins.str"builtins.str
builtins.str"builtins.str"dis._have_code_or_string z27Á
disdis.dis"
None*¿
x∂
àUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function],builtins.str,builtins.bytes,None]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z35z36√
disdis.dis"
None*¿
x∂
àUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function],builtins.str,builtins.bytes,None]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *Q
depthD
Union[builtins.int,None]
builtins.int"builtins.int
None z37z38z39z310V
distb	dis.distb"
None*4
tb*
types.TracebackType"types.TracebackType z27û
distb	dis.distb"
None*c
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z35z36z37z38z39z310“
disassembledis.disassemble"
None*¯
coÔ
yTypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]]ﬂ
nUnion[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]2
types.UnboundMethodType"types.UnboundMethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code*)
lasti
builtins.int"builtins.int z27œ
disassembledis.disassemble"
None*‹
co”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code*)
lasti
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z35z36z37z38z39z310∆
disco	dis.disco"
None*¯
coÔ
yTypeAlias[Union[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]]ﬂ
nUnion[types.UnboundMethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]2
types.UnboundMethodType"types.UnboundMethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code*)
lasti
builtins.int"builtins.int z27√
disco	dis.disco"
None*‹
co”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code*)
lasti
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z35z36z37z38z39z310 
stack_effectopcode.stack_effect"
builtins.int"builtins.int*(
__opcode
builtins.int"builtins.int*Q
__opargD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37†
stack_effectopcode.stack_effect"
builtins.int"builtins.int*(
__opcode
builtins.int"builtins.int*Q
__opargD
Union[builtins.int,None]
builtins.int"builtins.int
None *S
jumpG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z38z39z310Ä
pretty_flagsdis.pretty_flags"
builtins.str"builtins.str*'
flags
builtins.int"builtins.intz35z36z37z38z39z310Œ
	code_infodis.code_info"
builtins.str"builtins.str*˙
xÚ
†TypeAlias[Union[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.bytes]]∞
ïUnion[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.bytes]”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code
builtins.str"builtins.str 
builtins.bytes"builtins.bytes"dis._have_code_or_stringz35z36z37z38z39z310†
	show_codedis.show_code"
None*‹
co”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z35z36z37z38z39z310œ	
get_instructionsdis.get_instructions"’
ètyping.Iterator[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]]Ø
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool"typing.Iterator*€
x”
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._have_code*V

first_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*-
typestypes *27*35*36*37*38*39*310*^
EXTENDED_ARGopcode.EXTENDED_ARG
builtins.int"builtins.int*27*35*36*37*38*39*310*`
HAVE_ARGUMENTopcode.HAVE_ARGUMENT
builtins.int"builtins.int*27*35*36*37*38*39*310*Ñ
cmp_opopcode.cmp_opN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*27*35*36*37*38*39*310*à

hascompareopcode.hascompareJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*Ñ
hasconstopcode.hasconstJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*Ç
hasfreeopcode.hasfreeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*Ç
hasjabsopcode.hasjabsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*Ç
hasjrelopcode.hasjrelJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*Ñ
haslocalopcode.haslocalJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*Ç
hasnameopcode.hasnameJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*27*35*36*37*38*39*310*©
opmapopcode.opmapu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*27*35*36*37*38*39*310*Ä
opnameopcode.opnameJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*35*36*37*38*39*310*R
Any
typing.Any"
builtins.object"builtins.object*27*35*36*37*38*39*310*d
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*¬
COMPILER_FLAG_NAMESdis.COMPILER_FLAG_NAMESu
(builtins.dict[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dict*27*35*36*37*38*39*310*%
syssys *35*36*37*38*39*310*Ä
hasnargsopcode.hasnargsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310