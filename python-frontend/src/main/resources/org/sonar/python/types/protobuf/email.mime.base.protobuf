
email.mime.baseÂ
MIMEBaseemail.mime.base.MIMEBase"email.message.Message*À
__init__!email.mime.base.MIMEBase.__init__"
None*>
self4
email.mime.base.MIMEBase"email.mime.base.MIMEBase*
	_maintype
Any*
_subtype
Any*
_params
Anyz27*¤
__init__!email.mime.base.MIMEBase.__init__"
None*>
self4
email.mime.base.MIMEBase"email.mime.base.MIMEBase*+
	_maintype
builtins.str"builtins.str**
_subtype
builtins.str"builtins.str*g
policyY
Union[email.policy.Policy,None]*
email.policy.Policy"email.policy.Policy
None *Ï
_paramsÁ
]TypeAlias[Union[builtins.str,None,Tuple[builtins.str,Union[builtins.str,None],builtins.str]]]À
RUnion[builtins.str,None,Tuple[builtins.str,Union[builtins.str,None],builtins.str]]
builtins.str"builtins.str
None¿
9Tuple[builtins.str,Union[builtins.str,None],builtins.str]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.str"builtins.str"email.mime.base._ParamsTypez35z36z37z38z39z310j27j35j36j37j38j39j310è
Policyemail.policy.Policy"builtins.object*’
__init__email.policy.Policy.__init__"
None*4
self*
email.policy.Policy"email.policy.Policy*
kw
Anyz35z36z37z38z39z310*®
cloneemail.policy.Policy.clone"*
email.policy.Policy"email.policy.Policy*4
self*
email.policy.Policy"email.policy.Policy*
kw
Anyz35z36z37z38z39z310*Š
handle_defect!email.policy.Policy.handle_defect"
None*4
self*
email.policy.Policy"email.policy.Policy*7
obj.
email.message.Message"email.message.Message*D
defect8
email.errors.MessageDefect"email.errors.MessageDefectz35z36z37z38z39z310*Ž
register_defect#email.policy.Policy.register_defect"
None*4
self*
email.policy.Policy"email.policy.Policy*7
obj.
email.message.Message"email.message.Message*D
defect8
email.errors.MessageDefect"email.errors.MessageDefectz35z36z37z38z39z310*õ
header_max_count$email.policy.Policy.header_max_count"D
Union[builtins.int,None]
builtins.int"builtins.int
None*4
self*
email.policy.Policy"email.policy.Policy*&
name
builtins.str"builtins.strz35z36z37z38z39z310*à
header_source_parse'email.policy.Policy.header_source_parse"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*4
self*
email.policy.Policy"email.policy.Policy*[
sourcelinesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list0:abstractmethod@z35z36z37z38z39z310*Ò
header_store_parse&email.policy.Policy.header_store_parse"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*4
self*
email.policy.Policy"email.policy.Policy*&
name
builtins.str"builtins.str*'
value
builtins.str"builtins.str0:abstractmethod@z35z36z37z38z39z310*Ž
header_fetch_parse&email.policy.Policy.header_fetch_parse"
builtins.str"builtins.str*4
self*
email.policy.Policy"email.policy.Policy*&
name
builtins.str"builtins.str*'
value
builtins.str"builtins.str0:abstractmethod@z35z36z37z38z39z310*ò
foldemail.policy.Policy.fold"
builtins.str"builtins.str*4
self*
email.policy.Policy"email.policy.Policy*&
name
builtins.str"builtins.str*'
value
builtins.str"builtins.str0:abstractmethod@z35z36z37z38z39z310*„
fold_binaryemail.policy.Policy.fold_binary" 
builtins.bytes"builtins.bytes*4
self*
email.policy.Policy"email.policy.Policy*&
name
builtins.str"builtins.str*'
value
builtins.str"builtins.str0:abstractmethod@z35z36z37z38z39z310j35j36j37j38j39j310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310