
imaplibâ5
socketsocket.socket"builtins.object*€
__init__socket.socket.__init__"
None*(
self
socket.socket"socket.socket**
family
builtins.int"builtins.int *(
type
builtins.int"builtins.int *)
proto
builtins.int"builtins.int z27*∆
acceptsocket.socket.accept"x
#Tuple[socket.socket,TypeAlias[Any]]
socket.socket"socket.socket/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socketz27*ê
bindsocket.socket.bind"
None*(
self
socket.socket"socket.socket*ª
address≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz27*T
closesocket.socket.close"
None*(
self
socket.socket"socket.socketz27*ñ
connectsocket.socket.connect"
None*(
self
socket.socket"socket.socket*ª
address≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz27*∞

connect_exsocket.socket.connect_ex"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*ª
address≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz27*j
detachsocket.socket.detach"
builtins.int"builtins.int*(
self
socket.socket"socket.socketz27*f
dupsocket.socket.dup"
socket.socket"socket.socket*(
self
socket.socket"socket.socketz27*j
filenosocket.socket.fileno"
builtins.int"builtins.int*(
self
socket.socket"socket.socketz27*á
getpeernamesocket.socket.getpeername"/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socketz27*á
getsocknamesocket.socket.getsockname"/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socketz27*†

gettimeoutsocket.socket.gettimeout"J
Union[builtins.float,None] 
builtins.float"builtins.float
None*(
self
socket.socket"socket.socketz27*Å
listensocket.socket.listen"
None*(
self
socket.socket"socket.socket*)
	__backlog
builtins.int"builtins.intz27*’
makefilesocket.socket.makefile""
typing.BinaryIO"typing.BinaryIO*(
self
socket.socket"socket.socket*0
mode$
builtins.unicode"builtins.unicode *-
	buffering
builtins.int"builtins.int z27*º
recvsocket.socket.recv"
builtins.str"builtins.str*(
self
socket.socket"socket.socket*)
bufsize
builtins.int"builtins.int*)
flags
builtins.int"builtins.int z27*ù
recvfromsocket.socket.recvfrom"u
"Tuple[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socket*)
bufsize
builtins.int"builtins.int*)
flags
builtins.int"builtins.int z27*ì
recvfrom_intosocket.socket.recvfrom_into"u
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int/
TypeAlias[Any]
Any"socket._RetAddress*(
self
socket.socket"socket.socket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer**
nbytes
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z27*≤
	recv_intosocket.socket.recv_into"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer**
nbytes
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z27*π
sendsocket.socket.send"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*&
data
builtins.str"builtins.str*)
flags
builtins.int"builtins.int z27*´
sendallsocket.socket.sendall"
None*(
self
socket.socket"socket.socket*&
data
builtins.str"builtins.str*)
flags
builtins.int"builtins.int z27*ä
setblockingsocket.socket.setblocking"
None*(
self
socket.socket"socket.socket*(
flag
builtins.bool"builtins.boolz27*µ

settimeoutsocket.socket.settimeout"
None*(
self
socket.socket"socket.socket*U
valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
Nonez27*ü

setsockoptsocket.socket.setsockopt"
None*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int*k
value`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.strz27*Å
shutdownsocket.socket.shutdown"
None*(
self
socket.socket"socket.socket*%
how
builtins.int"builtins.intz272˙

getsockoptsocket.socket.getsockopt–

getsockoptsocket.socket.getsockopt"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int0:overloadX˙

getsockoptsocket.socket.getsockopt"
builtins.str"builtins.str*(
self
socket.socket"socket.socket*'
level
builtins.int"builtins.int*)
optname
builtins.int"builtins.int*(
buflen
builtins.int"builtins.int0:overloadX"272Ø
sendtosocket.socket.sendtoÔ
sendtosocket.socket.sendto"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*&
data
builtins.str"builtins.str*–
address¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address0:overloadXò
sendtosocket.socket.sendto"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*&
data
builtins.str"builtins.str*'
flags
builtins.int"builtins.int*–
address¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address0:overloadX"27j27Ø"
socketsocket.socket"_socket.socket*Ù
__init__socket.socket.__init__"
None*(
self
socket.socket"socket.socket*Ü
familyx
(Union[socket.AddressFamily,builtins.int],
socket.AddressFamily"socket.AddressFamily
builtins.int"builtins.int *{
typeo
%Union[socket.SocketKind,builtins.int]&
socket.SocketKind"socket.SocketKind
builtins.int"builtins.int *)
proto
builtins.int"builtins.int *R
filenoD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*c
	__enter__socket.socket.__enter__"
	socket._T*
self
	socket._Tz35z36z37z38z39z310*õ
__exit__socket.socket.__exit__"
None*&
self
socket.socket"socket.socket*,
args"
builtins.object"builtins.objectz35z36z37z38z39z310*Y
dupsocket.socket.dup"
	socket._T*
self
	socket._Tz35z36z37z38z39z310*‹
acceptsocket.socket.accept"y
#Tuple[socket.socket,TypeAlias[Any]]
socket.socket"socket.socket0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
socket.socket"socket.socketz35z36z37z38z39z310*∞
sendfilesocket.socket.sendfile"
builtins.int"builtins.int*(
self
socket.socket"socket.socket*,
file"
typing.BinaryIO"typing.BinaryIO**
offset
builtins.int"builtins.int *Q
countD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*ù
familysocket.socket.family",
socket.AddressFamily"socket.AddressFamily*(
self
socket.socket"socket.socket0:property`z35z36z37z38z39z310*ì
typesocket.socket.type"&
socket.SocketKind"socket.SocketKind*(
self
socket.socket"socket.socket0:property`z35z36z37z38z39z310*ì
get_inheritablesocket.socket.get_inheritable"
builtins.bool"builtins.bool*(
self
socket.socket"socket.socketz35z36z37z38z39z310*Æ
set_inheritablesocket.socket.set_inheritable"
None*(
self
socket.socket"socket.socket*/
inheritable
builtins.bool"builtins.boolz35z36z37z38z39z3102à
makefilesocket.socket.makefileı
makefilesocket.socket.makefile"
typing.TextIO"typing.TextIO*(
self
socket.socket"socket.socket*¢
modeï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *U
	bufferingD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX“

makefilesocket.socket.makefile""
typing.BinaryIO"typing.BinaryIO*(
self
socket.socket"socket.socket*˚
mode
¯Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*U
	bufferingD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36"37"38"39"310j35j36j37j38j39j310ö±
	SSLSocketssl.SSLSocket"socket.socket*Å
__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*S
sockG
Union[socket.socket,None]
socket.socket"socket.socket
None *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
server_side
builtins.bool"builtins.bool *-
	cert_reqs
builtins.int"builtins.int */
ssl_version
builtins.int"builtins.int *T
ca_certsD
Union[builtins.str,None]
builtins.str"builtins.str
None *=
do_handshake_on_connect
builtins.bool"builtins.bool **
family
builtins.int"builtins.int *(
type
builtins.int"builtins.int *)
proto
builtins.int"builtins.int *R
filenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *:
suppress_ragged_eofs
builtins.bool"builtins.bool *ù
npn_protocolsá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *S
ciphersD
Union[builtins.str,None]
builtins.str"builtins.str
None *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Z
_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None *6
_session&
Union[Any,None]
Any
None z27z35z36*è
__init__ssl.SSLSocket.__init__"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*
args
Any*
kwargs
Anyz37z38z39z310*ì
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*∏
addr≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz27*Ø
connectssl.SSLSocket.connect"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*ø
addr¥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*≠

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*∏
addr≠
FUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.str]¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address
builtins.str"builtins.strz27*…

connect_exssl.SSLSocket.connect_ex"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*ø
addr¥
HUnion[TypeAlias[Union[builtins.tuple[Any],builtins.str]],builtins.bytes]√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ω
recvssl.SSLSocket.recv"
builtins.str"builtins.str*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z27*÷
recvssl.SSLSocket.recv" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z35z36z37z38z39z310*⁄
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z27*Ì
	recv_intossl.SSLSocket.recv_into"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*Ê
bufferŸ
STypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]‰
HUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z35z36z37z38z39z310*û
recvfromssl.SSLSocket.recvfrom"u
"Tuple[builtins.str,TypeAlias[Any]]
builtins.str"builtins.str/
TypeAlias[Any]
Any"socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z27*∫
recvfromssl.SSLSocket.recvfrom"|
$Tuple[builtins.bytes,TypeAlias[Any]] 
builtins.bytes"builtins.bytes0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket**
buflen
builtins.int"builtins.int *)
flags
builtins.int"builtins.int z35z36z37z38z39z310*ª
recvfrom_intossl.SSLSocket.recvfrom_into"u
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int/
TypeAlias[Any]
Any"socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*Ë
buffer€
8TypeAlias[Union[builtins.bytearray,builtins.memoryview]]á
-Union[builtins.bytearray,builtins.memoryview](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview"socket._WriteBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z27*œ
recvfrom_intossl.SSLSocket.recvfrom_into"v
"Tuple[builtins.int,TypeAlias[Any]]
builtins.int"builtins.int0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocket*Ê
bufferŸ
STypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]‰
HUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.WriteableBuffer*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None *)
flags
builtins.int"builtins.int z35z36z37z38z39z310*ı
readssl.SSLSocket.read"
builtins.str"builtins.str*(
self
ssl.SSLSocket"ssl.SSLSocket*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z27*é
readssl.SSLSocket.read" 
builtins.bytes"builtins.bytes*(
self
ssl.SSLSocket"ssl.SSLSocket*'
len
builtins.int"builtins.int *d
bufferV
Union[builtins.bytearray,None](
builtins.bytearray"builtins.bytearray
None z35z36z37z38z39z310*ê
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*&
data
builtins.str"builtins.strz27*©
writessl.SSLSocket.write"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*®
do_handshakessl.SSLSocket.do_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
block
builtins.bool"builtins.bool z27z35z36z37z38z39z310*Ω
cipherssl.SSLSocket.cipher"’
9Union[Tuple[builtins.str,builtins.str,builtins.int],None]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*µ
compressionssl.SSLSocket.compression"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*Ÿ
get_channel_binding!ssl.SSLSocket.get_channel_binding"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
cb_type
builtins.str"builtins.str z27*Ù
get_channel_binding!ssl.SSLSocket.get_channel_binding"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*+
cb_type
builtins.str"builtins.str z35z36z37z38z39z310*À
selected_alpn_protocol$ssl.SSLSocket.selected_alpn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*…
selected_npn_protocol#ssl.SSLSocket.selected_npn_protocol"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*∆
acceptssl.SSLSocket.accept"x
#Tuple[ssl.SSLSocket,TypeAlias[Any]]
ssl.SSLSocket"ssl.SSLSocket/
TypeAlias[Any]
Any"socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocketz27*‹
acceptssl.SSLSocket.accept"y
#Tuple[ssl.SSLSocket,TypeAlias[Any]]
ssl.SSLSocket"ssl.SSLSocket0
TypeAlias[Any]
Any"_socket._RetAddress*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z39z310*Ö
unwrapssl.SSLSocket.unwrap"
socket.socket"socket.socket*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*≠
versionssl.SSLSocket.version"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*Ö
pendingssl.SSLSocket.pending"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocketz27z35z36z37z38z39z310*Ã
sendssl.SSLSocket.send"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*æ
sendallssl.SSLSocket.sendall"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int z35z36z37z38z39z310*ñ
shutdownssl.SSLSocket.shutdown"
None*(
self
ssl.SSLSocket"ssl.SSLSocket*%
how
builtins.int"builtins.intz35z36z37z38z39z310*®
shared_ciphersssl.SSLSocket.shared_ciphers"¥
HUnion[builtins.list[Tuple[builtins.str,builtins.str,builtins.int]],None]€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.list
None*(
self
ssl.SSLSocket"ssl.SSLSocketz35z36z37z38z39z310*ã
verify_client_post_handshake*ssl.SSLSocket.verify_client_post_handshake"
None*(
self
ssl.SSLSocket"ssl.SSLSocketz38z39z3102ï
sendtossl.SSLSocket.sendtoı
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*&
data
builtins.str"builtins.str*÷
flags_or_addr¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address0:overloadX¯
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*&
data
builtins.str"builtins.str*¡
flags_or_addr≠
FUnion[builtins.int,TypeAlias[Union[builtins.tuple[Any],builtins.str]]]
builtins.int"builtins.int¬
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"socket._Address*ï
addrà
,Union[builtins.tuple[Any],builtins.str,None].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str
None 0:overloadX"272®
sendtossl.SSLSocket.sendtoÙ
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*◊
flags_or_addr√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address0:overloadX˜
sendtossl.SSLSocket.sendto"
builtins.int"builtins.int*(
self
ssl.SSLSocket"ssl.SSLSocket*£
dataò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*¬
flags_or_addrÆ
FUnion[builtins.int,TypeAlias[Union[builtins.tuple[Any],builtins.str]]]
builtins.int"builtins.int√
2TypeAlias[Union[builtins.tuple[Any],builtins.str]]y
'Union[builtins.tuple[Any],builtins.str].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str"_socket._Address*ï
addrà
,Union[builtins.tuple[Any],builtins.str,None].
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str
None 0:overloadX"35"36"37"38"39"3102Ã
getpeercertssl.SSLSocket.getpeercertá
getpeercertssl.SSLSocket.getpeercert"’

ŒUnion[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],None]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict
None*(
self
ssl.SSLSocket"ssl.SSLSocket*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadXÛ
getpeercertssl.SSLSocket.getpeercert"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
ssl.SSLSocket"ssl.SSLSocket*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXù
getpeercertssl.SSLSocket.getpeercert"â
ÒTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.str,None]]˙
ÊUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.str,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType
builtins.str"builtins.str
None"ssl._PeerCertRetType*(
self
ssl.SSLSocket"ssl.SSLSocket*/
binary_form
builtins.bool"builtins.bool0:overloadX"272Ô
getpeercertssl.SSLSocket.getpeercertá
getpeercertssl.SSLSocket.getpeercert"’

ŒUnion[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],None]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict
None*(
self
ssl.SSLSocket"ssl.SSLSocket*M
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX˘
getpeercertssl.SSLSocket.getpeercert"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*(
self
ssl.SSLSocket"ssl.SSLSocket*K
binary_form:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX•
getpeercertssl.SSLSocket.getpeercert"ë
ÛTypeAlias[Union[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]]Ä
ËUnion[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]],builtins.bytes,None]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType 
builtins.bytes"builtins.bytes
None"ssl._PeerCertRetType*(
self
ssl.SSLSocket"ssl.SSLSocket*/
binary_form
builtins.bool"builtins.bool0:overloadX"35"36"37"38"39"310j27j35j36j37j38j39j310ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310˙4
Patterntyping.Pattern"builtins.object*‰
searchtyping.Pattern.search"{
)Union[typing.Match[typing._AnyStr2],None]B
typing.Match[typing._AnyStr2]
typing._AnyStr2"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*Ò
searchtyping.Pattern.search"u
'Union[typing.Match[typing.AnyStr],None]>
typing.Match[typing.AnyStr]
typing.AnyStr"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z35z36z37z38z39z310*‚
matchtyping.Pattern.match"{
)Union[typing.Match[typing._AnyStr2],None]B
typing.Match[typing._AnyStr2]
typing._AnyStr2"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*Ô
matchtyping.Pattern.match"u
'Union[typing.Match[typing.AnyStr],None]>
typing.Match[typing.AnyStr]
typing.AnyStr"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z35z36z37z38z39z310*Ñ
splittyping.Pattern.split"D
builtins.list[typing._AnyStr2]
typing._AnyStr2"builtins.list*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*,
maxsplit
builtins.int"builtins.int z27*ì
splittyping.Pattern.split"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing.AnyStr*,
maxsplit
builtins.int"builtins.int z35z36z37z38z39z310*
findalltyping.Pattern.findall",
builtins.list[Any]
Any"builtins.list*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*x
stringl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*™
findalltyping.Pattern.findall",
builtins.list[Any]
Any"builtins.list*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z35z36z37z38z39z310*Û
finditertyping.Pattern.finditer"Ö
.typing.Iterator[typing.Match[typing._AnyStr2]]B
typing.Match[typing._AnyStr2]
typing._AnyStr2"typing.Match"typing.Iterator*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*ˇ
finditertyping.Pattern.finditer"
,typing.Iterator[typing.Match[typing.AnyStr]]>
typing.Match[typing.AnyStr]
typing.AnyStr"typing.Match"typing.Iterator*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z35z36z37z38z39z310*˜
	fullmatchtyping.Pattern.fullmatch"u
'Union[typing.Match[typing.AnyStr],None]>
typing.Match[typing.AnyStr]
typing.AnyStr"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing.AnyStr*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z35z36z37z38z39z310*Û
__class_getitem__ typing.Pattern.__class_getitem__"(
types.GenericAlias"types.GenericAlias*t
clsk
#Type[typing.Pattern[typing.AnyStr]]B
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
item
Anypz39z3102≈
subtyping.Pattern.subı
subtyping.Pattern.sub"
typing._AnyStr2*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
repl
typing._AnyStr2*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadX≠
subtyping.Pattern.sub"
typing._AnyStr2*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*U
replK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadX"272–
subtyping.Pattern.subÔ
subtyping.Pattern.sub"
typing.AnyStr*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
repl
typing.AnyStr*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX©
subtyping.Pattern.sub"
typing.AnyStr*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*U
replK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX"35"36"37"38"39"3102Ÿ
subntyping.Pattern.subnæ
subntyping.Pattern.subn"Z
#Tuple[typing._AnyStr2,builtins.int]
typing._AnyStr2
builtins.int"builtins.int*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
repl
typing._AnyStr2*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadXˆ
subntyping.Pattern.subn"Z
#Tuple[typing._AnyStr2,builtins.int]
typing._AnyStr2
builtins.int"builtins.int*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*U
replK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadX"272‡
subntyping.Pattern.subn∂
subntyping.Pattern.subn"V
!Tuple[typing.AnyStr,builtins.int]
typing.AnyStr
builtins.int"builtins.int*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
repl
typing.AnyStr*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX
subntyping.Pattern.subn"V
!Tuple[typing.AnyStr,builtins.int]
typing.AnyStr
builtins.int"builtins.int*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*U
replK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing.AnyStr*)
count
builtins.int"builtins.int 0:overloadX"35"36"37"38"39"310Pj27j35j36j37j38j39j310∑æ
IMAP4imaplib.IMAP4"builtins.object*æ
__init__imaplib.IMAP4.__init__"
None*(
self
imaplib.IMAP4"imaplib.IMAP4*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int z27z35z36z37z38*é
__init__imaplib.IMAP4.__init__"
None*(
self
imaplib.IMAP4"imaplib.IMAP4*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z39z310*∂
openimaplib.IMAP4.open"
None*(
self
imaplib.IMAP4"imaplib.IMAP4*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int z27z35z36z37z38*Ü
openimaplib.IMAP4.open"
None*(
self
imaplib.IMAP4"imaplib.IMAP4*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z39z310*ú
__getattr__imaplib.IMAP4.__getattr__"
Any*&
self
imaplib.IMAP4"imaplib.IMAP4*$
attr
builtins.str"builtins.strz27z35z36z37z38z39z310*é
readimaplib.IMAP4.read"
builtins.str"builtins.str*(
self
imaplib.IMAP4"imaplib.IMAP4*&
size
builtins.int"builtins.intz27*ß
readimaplib.IMAP4.read" 
builtins.bytes"builtins.bytes*(
self
imaplib.IMAP4"imaplib.IMAP4*&
size
builtins.int"builtins.intz35z36z37z38z39z310*n
readlineimaplib.IMAP4.readline"
builtins.str"builtins.str*(
self
imaplib.IMAP4"imaplib.IMAP4z27*á
readlineimaplib.IMAP4.readline" 
builtins.bytes"builtins.bytes*(
self
imaplib.IMAP4"imaplib.IMAP4z35z36z37z38z39z310*z
sendimaplib.IMAP4.send"
None*(
self
imaplib.IMAP4"imaplib.IMAP4*&
data
builtins.str"builtins.strz27*ì
sendimaplib.IMAP4.send"
None*(
self
imaplib.IMAP4"imaplib.IMAP4**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*s
shutdownimaplib.IMAP4.shutdown"
None*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*Ö
socketimaplib.IMAP4.socket"
socket.socket"socket.socket*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*Æ
recentimaplib.IMAP4.recent"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*⁄
responseimaplib.IMAP4.response"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
code
builtins.str"builtins.strz27z35z36z37z38z39z310*Ø
appendimaplib.IMAP4.append"
builtins.str"builtins.str*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.str*'
flags
builtins.str"builtins.str*+
	date_time
builtins.str"builtins.str*)
message
builtins.str"builtins.strz27z35z36z37z38z39z310*›
authenticateimaplib.IMAP4.authenticate"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*(
self
imaplib.IMAP4"imaplib.IMAP4*+
	mechanism
builtins.str"builtins.str*[

authobjectK
CallableType[builtins.function]&
builtins.function"builtins.functionz27z35z36z37z38z39z310*∂

capabilityimaplib.IMAP4.capability"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*¨
checkimaplib.IMAP4.check"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*¨
closeimaplib.IMAP4.close"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*à
copyimaplib.IMAP4.copy"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*-
message_set
builtins.str"builtins.str*-
new_mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*Ÿ
createimaplib.IMAP4.create"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*Ÿ
deleteimaplib.IMAP4.delete"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*Ü
	deleteaclimaplib.IMAP4.deleteacl"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.str*%
who
builtins.str"builtins.strz27z35z36z37z38z39z310*∞
expungeimaplib.IMAP4.expunge"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*˝
fetchimaplib.IMAP4.fetch"–
}Tuple[builtins.str,TypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]]]]
builtins.str"builtins.strÆ
iTypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]]]§
^Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]].
builtins.list[None]
None"builtins.listè
Cbuiltins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.str]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list"imaplib._AnyResponseData*(
self
imaplib.IMAP4"imaplib.IMAP4*-
message_set
builtins.str"builtins.str*/
message_parts
builtins.str"builtins.strz27*¡
fetchimaplib.IMAP4.fetch"ˇ
ÉTuple[builtins.str,TypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]]]]
builtins.str"builtins.str÷
oTypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]]]∆
dUnion[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]].
builtins.list[None]
None"builtins.list´
Ibuiltins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]Œ
:Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]] 
builtins.bytes"builtins.bytesl
$Tuple[builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"builtins.list"imaplib._AnyResponseData*(
self
imaplib.IMAP4"imaplib.IMAP4*-
message_set
builtins.str"builtins.str*/
message_parts
builtins.str"builtins.strz35z36z37z38z39z310*Ÿ
getaclimaplib.IMAP4.getacl"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*Ω
getannotationimaplib.IMAP4.getannotation"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.str*'
entry
builtins.str"builtins.str*+
	attribute
builtins.str"builtins.strz27z35z36z37z38z39z310*⁄
getquotaimaplib.IMAP4.getquota"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
root
builtins.str"builtins.strz27z35z36z37z38z39z310*Â
getquotarootimaplib.IMAP4.getquotaroot"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*˜
listimaplib.IMAP4.list"–
}Tuple[builtins.str,TypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]]]]
builtins.str"builtins.strÆ
iTypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]]]§
^Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]].
builtins.list[None]
None"builtins.listè
Cbuiltins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.str]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list"imaplib._AnyResponseData*(
self
imaplib.IMAP4"imaplib.IMAP4*-
	directory
builtins.str"builtins.str *+
pattern
builtins.str"builtins.str z27*ª
listimaplib.IMAP4.list"ˇ
ÉTuple[builtins.str,TypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]]]]
builtins.str"builtins.str÷
oTypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]]]∆
dUnion[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]].
builtins.list[None]
None"builtins.list´
Ibuiltins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]Œ
:Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]] 
builtins.bytes"builtins.bytesl
$Tuple[builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"builtins.list"imaplib._AnyResponseData*(
self
imaplib.IMAP4"imaplib.IMAP4*-
	directory
builtins.str"builtins.str *+
pattern
builtins.str"builtins.str z35z36z37z38z39z310*Ú
loginimaplib.IMAP4.login"—
<Tuple[Literal[builtins.unicode],builtins.list[builtins.str]]C
Literal[builtins.unicode]	$
builtins.unicode"builtins.unicodeJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4*&
user
builtins.str"builtins.str**
password
builtins.str"builtins.strz27*ˇ
loginimaplib.IMAP4.login"…
:Tuple[Literal[builtins.str],builtins.list[builtins.bytes]]7
Literal[builtins.str]	
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4*&
user
builtins.str"builtins.str**
password
builtins.str"builtins.strz35z36z37z38z39z310*í
login_cram_md5imaplib.IMAP4.login_cram_md5"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
user
builtins.str"builtins.str**
password
builtins.str"builtins.strz27z35z36z37z38z39z310*ü
logoutimaplib.IMAP4.logout"–
}Tuple[builtins.str,TypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]]]]
builtins.str"builtins.strÆ
iTypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]]]§
^Union[builtins.list[None],builtins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]].
builtins.list[None]
None"builtins.listè
Cbuiltins.list[Union[builtins.str,Tuple[builtins.str,builtins.str]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.str]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list"imaplib._AnyResponseData*(
self
imaplib.IMAP4"imaplib.IMAP4z27*„
logoutimaplib.IMAP4.logout"ˇ
ÉTuple[builtins.str,TypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]]]]
builtins.str"builtins.str÷
oTypeAlias[Union[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]]]∆
dUnion[builtins.list[None],builtins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]].
builtins.list[None]
None"builtins.list´
Ibuiltins.list[Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]]]Œ
:Union[builtins.bytes,Tuple[builtins.bytes,builtins.bytes]] 
builtins.bytes"builtins.bytesl
$Tuple[builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"builtins.list"imaplib._AnyResponseData*(
self
imaplib.IMAP4"imaplib.IMAP4z35z36z37z38z39z310*Ü
lsubimaplib.IMAP4.lsub"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*-
	directory
builtins.str"builtins.str *+
pattern
builtins.str"builtins.str z27z35z36z37z38z39z310*›
myrightsimaplib.IMAP4.myrights"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*¥
	namespaceimaplib.IMAP4.namespace"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*Ë
noopimaplib.IMAP4.noop"ù
/Tuple[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4z27*Ö
noopimaplib.IMAP4.noop"•
1Tuple[builtins.str,builtins.list[builtins.bytes]]
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4z35z36z37z38z39z310*‚
partialimaplib.IMAP4.partial"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*-
message_num
builtins.str"builtins.str*.
message_part
builtins.str"builtins.str*'
start
builtins.str"builtins.str*(
length
builtins.str"builtins.strz27z35z36z37z38z39z310*‹
	proxyauthimaplib.IMAP4.proxyauth"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
user
builtins.str"builtins.strz27z35z36z37z38z39z310*ä
renameimaplib.IMAP4.rename"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*,

oldmailbox
builtins.str"builtins.str*,

newmailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*≠
searchimaplib.IMAP4.search"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*Q
charsetD
Union[builtins.str,None]
builtins.str"builtins.str
None**
criteria
builtins.str"builtins.strz27z35z36z37z38z39z310*â
selectimaplib.IMAP4.select"›
;Tuple[builtins.str,builtins.list[Union[builtins.str,None]]]
builtins.str"builtins.str~
'builtins.list[Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4*+
mailbox
builtins.str"builtins.str *.
readonly
builtins.bool"builtins.bool z27*©
selectimaplib.IMAP4.select"Ë
=Tuple[builtins.str,builtins.list[Union[builtins.bytes,None]]]
builtins.str"builtins.strÜ
)builtins.list[Union[builtins.bytes,None]]J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4*+
mailbox
builtins.str"builtins.str *.
readonly
builtins.bool"builtins.bool z35z36z37z38z39z310*®
setaclimaplib.IMAP4.setacl"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.str*%
who
builtins.str"builtins.str*&
what
builtins.str"builtins.strz27z35z36z37z38z39z310*‰
setannotationimaplib.IMAP4.setannotation"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
args
builtins.str"builtins.strz27z35z36z37z38z39z310*Ñ
setquotaimaplib.IMAP4.setquota"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
root
builtins.str"builtins.str*(
limits
builtins.str"builtins.strz27z35z36z37z38z39z310*π
sortimaplib.IMAP4.sort"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*/
sort_criteria
builtins.str"builtins.str*)
charset
builtins.str"builtins.str*1
search_criteria
builtins.str"builtins.strz27z35z36z37z38z39z310*Ç
statusimaplib.IMAP4.status"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.str*'
names
builtins.str"builtins.strz27z35z36z37z38z39z310*Ø
storeimaplib.IMAP4.store"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*-
message_set
builtins.str"builtins.str*)
command
builtins.str"builtins.str*'
flags
builtins.str"builtins.strz27z35z36z37z38z39z310*ﬂ
	subscribeimaplib.IMAP4.subscribe"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*√
threadimaplib.IMAP4.thread"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*5
threading_algorithm
builtins.str"builtins.str*)
charset
builtins.str"builtins.str*1
search_criteria
builtins.str"builtins.strz27z35z36z37z38z39z310*˚
uidimaplib.IMAP4.uid"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
command
builtins.str"builtins.str*&
args
builtins.str"builtins.strz27z35z36z37z38z39z310*„
unsubscribeimaplib.IMAP4.unsubscribe"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*)
mailbox
builtins.str"builtins.strz27z35z36z37z38z39z310*¸
xatomimaplib.IMAP4.xatom"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*&
name
builtins.str"builtins.str*&
args
builtins.str"builtins.strz27z35z36z37z38z39z310*u
	print_logimaplib.IMAP4.print_log"
None*(
self
imaplib.IMAP4"imaplib.IMAP4z27z35z36z37z38z39z310*ÿ
enableimaplib.IMAP4.enable"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4*,

capability
builtins.str"builtins.strz35z36z37z38z39z310*m
	__enter__imaplib.IMAP4.__enter__"
_typeshed.Self*
self
_typeshed.Selfz35z36z37z38z39z310* 
__exit__imaplib.IMAP4.__exit__"
None*&
self
imaplib.IMAP4"imaplib.IMAP4*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*g
vb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*¿
starttlsimaplib.IMAP4.starttls"ù
0Tuple[Literal[builtins.str],builtins.list[None]]7
Literal[builtins.str]	
builtins.str"builtins.str.
builtins.list[None]
None"builtins.list*(
self
imaplib.IMAP4"imaplib.IMAP4*9
ssl_context&
Union[Any,None]
Any
None z35z36z37z38z39z310*û
unselectimaplib.IMAP4.unselect"∆
1TypeAlias[Tuple[builtins.str,builtins.list[Any]]]v
&Tuple[builtins.str,builtins.list[Any]]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list"imaplib._CommandResults*(
self
imaplib.IMAP4"imaplib.IMAP4z39z310j27j35j36j37j38j39j310â
	IMAP4_SSLimaplib.IMAP4_SSL"imaplib.IMAP4*Â
__init__imaplib.IMAP4_SSL.__init__"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None z27*–
__init__imaplib.IMAP4_SSL.__init__"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
ssl_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None z35z36z37z38*§
__init__imaplib.IMAP4_SSL.__init__"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*(
host
builtins.str"builtins.str *(
port
builtins.int"builtins.int *S
keyfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
certfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
ssl_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z39z310*Í
openimaplib.IMAP4_SSL.open"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*(
host
builtins.str"builtins.str *P
portD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38*∫
openimaplib.IMAP4_SSL.open"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*(
host
builtins.str"builtins.str *P
portD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z39z310*ö
readimaplib.IMAP4_SSL.read"
builtins.str"builtins.str*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*&
size
builtins.int"builtins.intz27*≥
readimaplib.IMAP4_SSL.read" 
builtins.bytes"builtins.bytes*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*&
size
builtins.int"builtins.intz35z36z37z38z39z310*z
readlineimaplib.IMAP4_SSL.readline"
builtins.str"builtins.str*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSLz27*ì
readlineimaplib.IMAP4_SSL.readline" 
builtins.bytes"builtins.bytes*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSLz35z36z37z38z39z310*Ü
sendimaplib.IMAP4_SSL.send"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL*&
data
builtins.str"builtins.strz27*ü
sendimaplib.IMAP4_SSL.send"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSL**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*
shutdownimaplib.IMAP4_SSL.shutdown"
None*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSLz27z35z36z37z38z39z310*ë
socketimaplib.IMAP4_SSL.socket"
socket.socket"socket.socket*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSLz27z35z36z37z38z39z310*ã
sslimaplib.IMAP4_SSL.ssl"
ssl.SSLSocket"ssl.SSLSocket*0
self&
imaplib.IMAP4_SSL"imaplib.IMAP4_SSLz27z35z36z37z38z39z310j27j35j36j37j38j39j310‰
IMAP4_streamimaplib.IMAP4_stream"imaplib.IMAP4*≥
__init__imaplib.IMAP4_stream.__init__"
None*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream*)
command
builtins.str"builtins.strz27z35z36z37z38z39z310*õ
openimaplib.IMAP4_stream.open"
None*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream*P
hostD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
portD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38*Î
openimaplib.IMAP4_stream.open"
None*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream*P
hostD
Union[builtins.str,None]
builtins.str"builtins.str
None *P
portD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z39z310*£
readimaplib.IMAP4_stream.read"
builtins.str"builtins.str*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream*&
size
builtins.int"builtins.intz27*º
readimaplib.IMAP4_stream.read" 
builtins.bytes"builtins.bytes*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream*&
size
builtins.int"builtins.intz35z36z37z38z39z310*É
readlineimaplib.IMAP4_stream.readline"
builtins.str"builtins.str*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_streamz27*ú
readlineimaplib.IMAP4_stream.readline" 
builtins.bytes"builtins.bytes*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_streamz35z36z37z38z39z310*è
sendimaplib.IMAP4_stream.send"
None*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream*&
data
builtins.str"builtins.strz27*®
sendimaplib.IMAP4_stream.send"
None*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_stream**
data 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*à
shutdownimaplib.IMAP4_stream.shutdown"
None*6
self,
imaplib.IMAP4_stream"imaplib.IMAP4_streamz27z35z36z37z38z39z310j27j35j36j37j38j39j310˚	
_Authenticatorimaplib._Authenticator"builtins.object*È
__init__imaplib._Authenticator.__init__"
None*:
self0
imaplib._Authenticator"imaplib._Authenticator*Y
mechinstK
CallableType[builtins.function]&
builtins.function"builtins.functionz27z35z36z37z38z39z310*»
processimaplib._Authenticator.process"
builtins.str"builtins.str*:
self0
imaplib._Authenticator"imaplib._Authenticator*&
data
builtins.str"builtins.strz27z35z36z37z38z39z310*¨
encodeimaplib._Authenticator.encode"
builtins.str"builtins.str*:
self0
imaplib._Authenticator"imaplib._Authenticator*%
inp
builtins.str"builtins.strz27*≈
encodeimaplib._Authenticator.encode"
builtins.str"builtins.str*:
self0
imaplib._Authenticator"imaplib._Authenticator*)
inp 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*¨
decodeimaplib._Authenticator.decode"
builtins.str"builtins.str*:
self0
imaplib._Authenticator"imaplib._Authenticator*%
inp
builtins.str"builtins.strz27*≈
decodeimaplib._Authenticator.decode" 
builtins.bytes"builtins.bytes*:
self0
imaplib._Authenticator"imaplib._Authenticator*%
inp
builtins.str"builtins.strz35z36z37z38z39z310j27j35j36j37j38j39j310÷<

SSLContextssl.SSLContext"builtins.object*˜
__new__ssl.SSLContext.__new__" 
ssl.SSLContext"ssl.SSLContext*C
cls:
Type[ssl.SSLContext] 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int *
args
Any*
kwargs
Anyz35z36z37z38z39z310*î
protocolssl.SSLContext.protocol"
builtins.int"builtins.int**
self 
ssl.SSLContext"ssl.SSLContext0:property`z35z36z37z38z39z310*†
__init__ssl.SSLContext.__init__"
None**
self 
ssl.SSLContext"ssl.SSLContext*,
protocol
builtins.int"builtins.int z35z36z37z38z39z310*Ô
cert_store_statsssl.SSLContext.cert_store_stats"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict**
self 
ssl.SSLContext"ssl.SSLContextz35z36z37z38z39z310*™
load_cert_chainssl.SSLContext.load_cert_chain"
None**
self 
ssl.SSLContext"ssl.SSLContext*¯
certfileÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
keyfile¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *Û
password‚
GUnion[CallableType[builtins.function],builtins.str,builtins.bytes,None]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310*œ
load_default_certs!ssl.SSLContext.load_default_certs"
None**
self 
ssl.SSLContext"ssl.SSLContext*∆
purpose∂
:Tuple[builtins.int,builtins.str,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str z35z36z37z38z39z310*Ç
load_verify_locations$ssl.SSLContext.load_verify_locations"
None**
self 
ssl.SSLContext"ssl.SSLContext*µ
cafile¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *µ
capath¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *É
cadatau
'Union[builtins.str,builtins.bytes,None]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310*÷
get_ca_certsssl.SSLContext.get_ca_certs"∞
ÅUnion[builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]],builtins.list[builtins.bytes]]’
‹builtins.list[TypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]]‰

ÕTypeAlias[builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]]ı
¬builtins.dict[builtins.str,Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]
builtins.str"builtins.strÄ
¶Union[builtins.str,TypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]],TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]
builtins.str"builtins.stræ
VTypeAlias[builtins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]]”
Kbuiltins.tuple[TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]]Û
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.tuple"ssl._PCTRTTTÛ
;TypeAlias[builtins.tuple[Tuple[builtins.str,builtins.str]]]§
0builtins.tuple[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.tuple"ssl._PCTRTT"builtins.dict"ssl._PeerCertRetDictType"builtins.listP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
self 
ssl.SSLContext"ssl.SSLContext*1
binary_form
builtins.bool"builtins.bool z35z36z37z38z39z310*í
set_default_verify_paths'ssl.SSLContext.set_default_verify_paths"
None**
self 
ssl.SSLContext"ssl.SSLContextz35z36z37z38z39z310*¶
set_ciphersssl.SSLContext.set_ciphers"
None**
self 
ssl.SSLContext"ssl.SSLContext*,
__cipherlist
builtins.str"builtins.strz35z36z37z38z39z310*Í
set_alpn_protocols!ssl.SSLContext.set_alpn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*b
alpn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*Á
set_npn_protocols ssl.SSLContext.set_npn_protocols"
None**
self 
ssl.SSLContext"ssl.SSLContext*a
npn_protocolsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez35z36z37z38z39z310*ï
set_servername_callback&ssl.SSLContext.set_servername_callback"
None**
self 
ssl.SSLContext"ssl.SSLContext*ì
__methodÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonez35z36*¨
set_servername_callback&ssl.SSLContext.set_servername_callback"
None**
self 
ssl.SSLContext"ssl.SSLContext*°
server_name_callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonez37z38z39z310*¶
load_dh_paramsssl.SSLContext.load_dh_params"
None**
self 
ssl.SSLContext"ssl.SSLContext*&
__path
builtins.str"builtins.strz35z36z37z38z39z310*¶
set_ecdh_curvessl.SSLContext.set_ecdh_curve"
None**
self 
ssl.SSLContext"ssl.SSLContext*&
__name
builtins.str"builtins.strz35z36z37z38z39z310*û
wrap_socketssl.SSLContext.wrap_socket"
ssl.SSLSocket"ssl.SSLSocket**
self 
ssl.SSLContext"ssl.SSLContext*(
sock
socket.socket"socket.socket*1
server_side
builtins.bool"builtins.bool *=
do_handshake_on_connect
builtins.bool"builtins.bool *:
suppress_ragged_eofs
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None z35z36z37z38z39z310*œ
wrap_biossl.SSLContext.wrap_bio"
ssl.SSLObject"ssl.SSLObject**
self 
ssl.SSLContext"ssl.SSLContext*,
incoming
ssl.MemoryBIO"ssl.MemoryBIO*,
outgoing
ssl.MemoryBIO"ssl.MemoryBIO*1
server_side
builtins.bool"builtins.bool *[
server_hostnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
sessionJ
Union[ssl.SSLSession,None] 
ssl.SSLSession"ssl.SSLSession
None z35z36z37z38z39z310*È
session_statsssl.SSLContext.session_stats"u
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict**
self 
ssl.SSLContext"ssl.SSLContextz35z36z37z38z39z310j35j36j37j38j39j310á	
TracebackTypetypes.TracebackType"builtins.object*Õ
tb_nexttypes.TracebackType.tb_next"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*4
self*
types.TracebackType"types.TracebackType0:property`z35z36*©
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*£
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*•
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*Ï
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.intz37z38z39z310j35j36j37j38j39j310Ö
Internaldate2tupleimaplib.Internaldate2tuple"ç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*&
resp
builtins.str"builtins.strz27z35z36z37z38z39z310z
Int2APimaplib.Int2AP"
builtins.str"builtins.str*%
num
builtins.int"builtins.intz27z35z36z37z38z39z310ú

ParseFlagsimaplib.ParseFlags"5
Tuple[builtins.str]
builtins.str"builtins.str*&
resp
builtins.str"builtins.strz27z35z36z37z38z39z310Ô
Time2Internaldateimaplib.Time2Internaldate"
builtins.str"builtins.str*É
	date_timeÛ
ûUnion[builtins.float,Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int],builtins.str] 
builtins.float"builtins.floatç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.str"builtins.strz27z35z36z37z38z39z310*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*d
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*\
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*É
Literaltyping_extensions.Literal@
typing_extensions._SpecialForm"typing_extensions._SpecialForm"27"35"36"37"38"39"310