
impú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310Ö
Iterabletyping.Iterable"builtins.object*Ã
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z278PXj27Ø
NullImporterimp.NullImporter"builtins.object*í
__init__imp.NullImporter.__init__"
None*.
self$
imp.NullImporter"imp.NullImporter*-
path_string
builtins.str"builtins.strz27*Ô
__init__imp.NullImporter.__init__"
None*.
self$
imp.NullImporter"imp.NullImporter*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310*ø
find_moduleimp.NullImporter.find_module"
None*.
self$
imp.NullImporter"imp.NullImporter**
fullname
builtins.str"builtins.str*(
path
builtins.str"builtins.str z27*ï
find_moduleimp.NullImporter.find_module"
None*.
self$
imp.NullImporter"imp.NullImporter*
fullname
Anyz35z36z37z38z39z310j27j35j36j37j38j39j310‚
PathLikeos.PathLike"builtins.object*ò

__fspath__os.PathLike.__fspath__"
os._AnyStr_co*F
self<
os.PathLike[os._AnyStr_co]
os._AnyStr_co"os.PathLikez35z36z37z38z39z3108PXj35j36j37j38j39j310‰
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310È
	_FileLikeimp._FileLike"builtins.object*≈
readimp._FileLike.read"f
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*(
self
imp._FileLike"imp._FileLikez35z36z37z38z39z310*h
closeimp._FileLike.close"
Any*(
self
imp._FileLike"imp._FileLikez35z36z37z38z39z310*n
	__enter__imp._FileLike.__enter__"
Any*&
self
imp._FileLike"imp._FileLikez35z36z37z38z39z310*
__exit__imp._FileLike.__exit__"
Any*&
self
imp._FileLike"imp._FileLike*
args
Anyz35z36z37z38z39z310Xj35j36j37j38j39j310.
acquire_lockimp.acquire_lock"
Nonez27º
find_moduleimp.find_module"ì
\Union[Tuple[typing.IO[Any],builtins.str,Tuple[builtins.str,builtins.str,builtins.int]],None]¶
PTuple[typing.IO[Any],builtins.str,Tuple[builtins.str,builtins.str,builtins.int]]$
typing.IO[Any]
Any"	typing.IO
builtins.str"builtins.strã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int
None*&
name
builtins.str"builtins.str*Z
pathN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable z27÷
find_moduleimp.find_module"¶
PTuple[typing.IO[Any],builtins.str,Tuple[builtins.str,builtins.str,builtins.int]]$
typing.IO[Any]
Any"	typing.IO
builtins.str"builtins.strã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int*&
name
builtins.str"builtins.str*À
pathæ
òUnion[None,builtins.list[builtins.str],builtins.list[os.PathLike[builtins.str]],builtins.list[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]]
NoneJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listÅ
(builtins.list[os.PathLike[builtins.str]]F
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"builtins.listƒ
Gbuiltins.list[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"builtins.list z35z36z37z38z39z310<
	get_magicimp.get_magic"
builtins.str"builtins.strz27U
	get_magicimp.get_magic" 
builtins.bytes"builtins.bytesz35z36z37z38z39z310õ
get_suffixesimp.get_suffixes"€
<builtins.list[Tuple[builtins.str,builtins.str,builtins.int]]ã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.int"builtins.listz27z35z36z37z38z39z310r
init_builtinimp.init_builtin"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.strz27≥
init_builtinimp.init_builtin"P
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None*&
name
builtins.str"builtins.strz35z36z37z38z39z310p
init_frozenimp.init_frozen"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.strz27f

is_builtinimp.is_builtin"
builtins.int"builtins.int*&
name
builtins.str"builtins.strz27f
	is_frozenimp.is_frozen"
builtins.bool"builtins.bool*&
name
builtins.str"builtins.strz27“
load_compiledimp.load_compiled"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str**
pathname
builtins.str"builtins.str*0
file$
typing.IO[Any]
Any"	typing.IO z27ä
load_compiledimp.load_compiled"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str**
pathname
builtins.str"builtins.str*S
fileG
Union[imp._FileLike,None]
imp._FileLike"imp._FileLike
None z35z36z37z38z39z310–
load_dynamicimp.load_dynamic"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str**
pathname
builtins.str"builtins.str*0
file$
typing.IO[Any]
Any"	typing.IO z27ƒ
load_dynamicimp.load_dynamic"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*&
path
builtins.str"builtins.str*
file
Any z35z36z37z38z39z310‰
load_moduleimp.load_module"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*&
file
builtins.str"builtins.str**
pathname
builtins.str"builtins.str*ù
descriptionã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.intz27†
load_moduleimp.load_module"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*Q
fileG
Union[imp._FileLike,None]
imp._FileLike"imp._FileLike
None**
filename
builtins.str"builtins.str*ô
detailsã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.intz35z36z37z38z39z310Œ
load_sourceimp.load_source"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str**
pathname
builtins.str"builtins.str*0
file$
typing.IO[Any]
Any"	typing.IO z27Ü
load_sourceimp.load_source"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str**
pathname
builtins.str"builtins.str*S
fileG
Union[imp._FileLike,None]
imp._FileLike"imp._FileLike
None z35z36z37z38z39z310>
	lock_heldimp.lock_held"
builtins.bool"builtins.boolz27á

new_moduleimp.new_module"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310.
release_lockimp.release_lock"
Nonez27D
acquire_lock_imp.acquire_lock"
Nonez35z36z37z38z39z310©
create_dynamic_imp.create_dynamic"
None*J
__spec@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec*
__file
Any z35z36z37z38z39z310é
get_frozen_object_imp.get_frozen_object" 
types.CodeType"types.CodeType*&
__name
builtins.str"builtins.strz35z36z37z38z39z310Ü
init_frozen_imp.init_frozen"$
types.ModuleType"types.ModuleType*&
__name
builtins.str"builtins.strz35z36z37z38z39z310|

is_builtin_imp.is_builtin"
builtins.int"builtins.int*&
__name
builtins.str"builtins.strz35z36z37z38z39z310|
	is_frozen_imp.is_frozen"
builtins.bool"builtins.bool*&
__name
builtins.str"builtins.strz35z36z37z38z39z310å
is_frozen_package_imp.is_frozen_package"
builtins.bool"builtins.bool*&
__name
builtins.str"builtins.strz35z36z37z38z39z310T
	lock_held_imp.lock_held"
builtins.bool"builtins.boolz35z36z37z38z39z310D
release_lock_imp.release_lock"
Nonez35z36z37z38z39z310M
get_tagimp.get_tag"
builtins.str"builtins.strz35z36z37z38z39z310∑
cache_from_sourceimp.cache_from_source"
builtins.str"builtins.str*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*]
debug_overrideG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z35z36z37z38z39z310ÿ
source_from_cacheimp.source_from_cache"
builtins.str"builtins.str*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310˛
load_packageimp.load_package"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310Ö
reload
imp.reload"$
types.ModuleType"types.ModuleType*0
module$
types.ModuleType"types.ModuleTypez35z36z37z38z39z310*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*U
	C_BUILTINimp.C_BUILTIN
builtins.int"builtins.int"27"35"36"37"38"39"310*Y
C_EXTENSIONimp.C_EXTENSION
builtins.int"builtins.int"27"35"36"37"38"39"310*S
IMP_HOOKimp.IMP_HOOK
builtins.int"builtins.int"27"35"36"37"38"39"310*]
PKG_DIRECTORYimp.PKG_DIRECTORY
builtins.int"builtins.int"27"35"36"37"38"39"310*a
PY_CODERESOURCEimp.PY_CODERESOURCE
builtins.int"builtins.int"27"35"36"37"38"39"310*Y
PY_COMPILEDimp.PY_COMPILED
builtins.int"builtins.int"27"35"36"37"38"39"310*U
	PY_FROZENimp.PY_FROZEN
builtins.int"builtins.int"27"35"36"37"38"39"310*Y
PY_RESOURCEimp.PY_RESOURCE
builtins.int"builtins.int"27"35"36"37"38"39"310*U
	PY_SOURCEimp.PY_SOURCE
builtins.int"builtins.int"27"35"36"37"38"39"310*[
SEARCH_ERRORimp.SEARCH_ERROR
builtins.int"builtins.int"27"35"36"37"38"39"310*`
Protocoltyping.Protocol*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310