
mmapâ
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27Û
mmap	mmap.mmap"typing.Sequence*œ
__init__mmap.mmap.__init__"
None* 
self
	mmap.mmap"	mmap.mmap*(
fileno
builtins.int"builtins.int*(
length
builtins.int"builtins.int*)
flags
builtins.int"builtins.int *(
prot
builtins.int"builtins.int **
access
builtins.int"builtins.int **
offset
builtins.int"builtins.int z27*H
closemmap.mmap.close"
None* 
self
	mmap.mmap"	mmap.mmapz27*≤
flushmmap.mmap.flush"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap**
offset
builtins.int"builtins.int *(
size
builtins.int"builtins.int z27*æ
movemmap.mmap.move"
None* 
self
	mmap.mmap"	mmap.mmap*&
dest
builtins.int"builtins.int*%
src
builtins.int"builtins.int*'
count
builtins.int"builtins.intz27*d
	read_bytemmap.mmap.read_byte"
builtins.str"builtins.str* 
self
	mmap.mmap"	mmap.mmapz27*b
readlinemmap.mmap.readline"
builtins.str"builtins.str* 
self
	mmap.mmap"	mmap.mmapz27*u
resizemmap.mmap.resize"
None* 
self
	mmap.mmap"	mmap.mmap*)
newsize
builtins.int"builtins.intz27*ô
seekmmap.mmap.seek"
None* 
self
	mmap.mmap"	mmap.mmap*%
pos
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27*Z
sizemmap.mmap.size"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmapz27*Z
tellmmap.mmap.tell"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmapz27*z

write_bytemmap.mmap.write_byte"
None* 
self
	mmap.mmap"	mmap.mmap*&
byte
builtins.str"builtins.strz27*^
__len__mmap.mmap.__len__"
builtins.int"builtins.int*
self
	mmap.mmap"	mmap.mmapz27*ÿ
findmmap.mmap.find"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*(
string
builtins.str"builtins.str*)
start
builtins.int"builtins.int *'
end
builtins.int"builtins.int z27*€
rfindmmap.mmap.rfind"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*(
string
builtins.str"builtins.str*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z27*Å
readmmap.mmap.read"
builtins.str"builtins.str* 
self
	mmap.mmap"	mmap.mmap*%
num
builtins.int"builtins.intz27*r
writemmap.mmap.write"
None* 
self
	mmap.mmap"	mmap.mmap*(
string
builtins.str"builtins.strz27*◊
__getitem__mmap.mmap.__getitem__"
builtins.str"builtins.str*
self
	mmap.mmap"	mmap.mmap*o
indexf
"Union[builtins.int,builtins.slice]
builtins.int"builtins.int 
builtins.slice"builtins.slicez27*Ñ
__getslice__mmap.mmap.__getslice__"
builtins.str"builtins.str* 
self
	mmap.mmap"	mmap.mmap*K
iD
Union[builtins.int,None]
builtins.int"builtins.int
None*K
jD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez27*«
__delitem__mmap.mmap.__delitem__"
NoReturn
*
self
	mmap.mmap"	mmap.mmap*o
indexf
"Union[builtins.int,builtins.slice]
builtins.int"builtins.int 
builtins.slice"builtins.slicez27*Î
__setitem__mmap.mmap.__setitem__"
None*
self
	mmap.mmap"	mmap.mmap*o
indexf
"Union[builtins.int,builtins.slice]
builtins.int"builtins.int 
builtins.slice"builtins.slice*&
object
builtins.str"builtins.strz27j27∏.
mmap	mmap.mmap"typing.ContextManager"typing.Iterable"typing.Sized*‰
__init__mmap.mmap.__init__"
None* 
self
	mmap.mmap"	mmap.mmap*(
fileno
builtins.int"builtins.int*(
length
builtins.int"builtins.int*)
flags
builtins.int"builtins.int *(
prot
builtins.int"builtins.int **
access
builtins.int"builtins.int **
offset
builtins.int"builtins.int z35z36z37z38z39z310*]
closemmap.mmap.close"
None* 
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*∫
flushmmap.mmap.flush"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap**
offset
builtins.int"builtins.int *(
size
builtins.int"builtins.int z35z36z37*ß
flushmmap.mmap.flush"
None* 
self
	mmap.mmap"	mmap.mmap**
offset
builtins.int"builtins.int *(
size
builtins.int"builtins.int z38z39z310*”
movemmap.mmap.move"
None* 
self
	mmap.mmap"	mmap.mmap*&
dest
builtins.int"builtins.int*%
src
builtins.int"builtins.int*'
count
builtins.int"builtins.intz35z36z37z38z39z310*y
	read_bytemmap.mmap.read_byte"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*{
readlinemmap.mmap.readline" 
builtins.bytes"builtins.bytes* 
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*ä
resizemmap.mmap.resize"
None* 
self
	mmap.mmap"	mmap.mmap*)
newsize
builtins.int"builtins.intz35z36z37z38z39z310*Æ
seekmmap.mmap.seek"
None* 
self
	mmap.mmap"	mmap.mmap*%
pos
builtins.int"builtins.int**
whence
builtins.int"builtins.int z35z36z37z38z39z310*o
sizemmap.mmap.size"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*o
tellmmap.mmap.tell"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*è

write_bytemmap.mmap.write_byte"
None* 
self
	mmap.mmap"	mmap.mmap*&
byte
builtins.int"builtins.intz35z36z37z38z39z310*s
__len__mmap.mmap.__len__"
builtins.int"builtins.int*
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*È
findmmap.mmap.find"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*¢
subò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*Î
rfindmmap.mmap.rfind"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*¢
subò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*¬
readmmap.mmap.read" 
builtins.bytes"builtins.bytes* 
self
	mmap.mmap"	mmap.mmap*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*ò
writemmap.mmap.write"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*§
bytesò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBufferz35z36z37z38z39z310*‹
__delitem__mmap.mmap.__delitem__"
NoReturn
*
self
	mmap.mmap"	mmap.mmap*o
indexf
"Union[builtins.int,builtins.slice]
builtins.int"builtins.int 
builtins.slice"builtins.slicez35z36z37z38z39z310*ß
__iter__mmap.mmap.__iter__"N
typing.Iterator[builtins.int]
builtins.int"builtins.int"typing.Iterator*
self
	mmap.mmap"	mmap.mmapz35z36z37z38z39z310*÷
madvisemmap.mmap.madvise"
None* 
self
	mmap.mmap"	mmap.mmap*(
option
builtins.int"builtins.int*)
start
builtins.int"builtins.int **
length
builtins.int"builtins.int z38z39z3102˘
__getitem__mmap.mmap.__getitem__ó
__getitem__mmap.mmap.__getitem__"
builtins.int"builtins.int*
self
	mmap.mmap"	mmap.mmap*%
index
builtins.int"builtins.int0:overloadXü
__getitem__mmap.mmap.__getitem__" 
builtins.bytes"builtins.bytes*
self
	mmap.mmap"	mmap.mmap*)
index 
builtins.slice"builtins.slice0:overloadX"35"36"37"38"39"3102õ
__setitem__mmap.mmap.__setitem__´
__setitem__mmap.mmap.__setitem__"
None*
self
	mmap.mmap"	mmap.mmap*%
index
builtins.int"builtins.int*&
object
builtins.int"builtins.int0:overloadX≠
__setitem__mmap.mmap.__setitem__"
None*
self
	mmap.mmap"	mmap.mmap*)
index 
builtins.slice"builtins.slice*£
objectò
bTypeAlias[Union[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap]]ï
WUnion[builtins.bytes,builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap"_typeshed.ReadableBuffer0:overloadX"35"36"37"38"39"310j35j36j37j38j39j310È
ContextManagertyping.ContextManager"builtins.object*Ø
	__enter__typing.ContextManager.__enter__"
typing._T_co*V
selfN
#typing.ContextManager[typing._T_co]
typing._T_co"typing.ContextManagerz35z36z37z38z39z310*›
__exit__typing.ContextManager.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*V
selfN
#typing.ContextManager[typing._T_co]
typing._T_co"typing.ContextManager*ô

__exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*q
__exc_valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*h
__tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z3108PXj35j36j37j38j39j310Ø
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310œ
Iteratortyping.Iterator"typing.Iterable*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z310*Õ
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz35z36z37z38z39z3108PXj35j36j37j38j39j310Â
Sizedtyping.Sized"builtins.object*ê
__len__typing.Sized.__len__"
builtins.int"builtins.int*$
self
typing.Sized"typing.Sized0:abstractmethod@z35z36z37z38z39z3108@Xbabc.ABCMetaj35j36j37j38j39j310\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310*)
syssys *27*35*36*37*38*39*310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*`
ACCESS_DEFAULTmmap.ACCESS_DEFAULT
builtins.int"builtins.int*27*35*36*37*38*39*310*Z
ACCESS_READmmap.ACCESS_READ
builtins.int"builtins.int*27*35*36*37*38*39*310*\
ACCESS_WRITEmmap.ACCESS_WRITE
builtins.int"builtins.int*27*35*36*37*38*39*310*Z
ACCESS_COPYmmap.ACCESS_COPY
builtins.int"builtins.int*27*35*36*37*38*39*310*n
ALLOCATIONGRANULARITYmmap.ALLOCATIONGRANULARITY
builtins.int"builtins.int*27*35*36*37*38*39*310*T
MAP_ANONmmap.MAP_ANON
builtins.int"builtins.int*27*35*36*37*38*39*310*^
MAP_ANONYMOUSmmap.MAP_ANONYMOUS
builtins.int"builtins.int*27*35*36*37*38*39*310*Z
MAP_PRIVATEmmap.MAP_PRIVATE
builtins.int"builtins.int*27*35*36*37*38*39*310*X

MAP_SHAREDmmap.MAP_SHARED
builtins.int"builtins.int*27*35*36*37*38*39*310*V
	PROT_EXECmmap.PROT_EXEC
builtins.int"builtins.int*27*35*36*37*38*39*310*V
	PROT_READmmap.PROT_READ
builtins.int"builtins.int*27*35*36*37*38*39*310*X

PROT_WRITEmmap.PROT_WRITE
builtins.int"builtins.int*27*35*36*37*38*39*310*T
PAGESIZEmmap.PAGESIZE
builtins.int"builtins.int*27*35*36*37*38*39*310*J
MADV_NORMALmmap.MADV_NORMAL
builtins.int"builtins.int*38*39*310*J
MADV_RANDOMmmap.MADV_RANDOM
builtins.int"builtins.int*38*39*310*R
MADV_SEQUENTIALmmap.MADV_SEQUENTIAL
builtins.int"builtins.int*38*39*310*N
MADV_WILLNEEDmmap.MADV_WILLNEED
builtins.int"builtins.int*38*39*310*N
MADV_DONTNEEDmmap.MADV_DONTNEED
builtins.int"builtins.int*38*39*310*P
MADV_FREE_REUSABLEmmap.MADV_FREE_REUSABLE
builtins.int"builtins.int*310*J
MADV_FREE_REUSEmmap.MADV_FREE_REUSE
builtins.int"builtins.int*310