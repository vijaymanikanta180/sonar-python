
multiprocessing.spawnº

ModuleTypetypes.ModuleType"builtins.object*Ò
__init__types.ModuleType.__init__"
None*.
self$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str*O
docD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310j35j36j37j38j39j310í
Mappingtyping.Mapping"typing.Collection*Â
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z35z36z37z38z39z310*≥
itemstyping.Mapping.items"ë
3typing.AbstractSet[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*„
keystyping.Mapping.keys"D
typing.AbstractSet[typing._KT]

typing._KT"typing.AbstractSet*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Î
valuestyping.Mapping.values"H
 typing.ValuesView[typing._VT_co]
typing._VT_co"typing.ValuesView*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz35z36z37z38z39z310*Ù
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz35z36z37z38z39z3102ﬂ
gettyping.Mapping.getÂ
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT0:overloadX¬
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
key

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310Ä
set_executable$multiprocessing.spawn.set_executable"
None*%
exe
builtins.str"builtins.strz35z36z37z38z39z310m
get_executable$multiprocessing.spawn.get_executable"
builtins.str"builtins.strz35z36z37z38z39z310¡

is_forking multiprocessing.spawn.is_forking"
builtins.bool"builtins.bool*X
argvN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequencez35z36z37z38z39z310Y
freeze_support$multiprocessing.spawn.freeze_support"
Nonez35z36z37z38z39z310≤
get_command_line&multiprocessing.spawn.get_command_line"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*
kwds
Anyz35z36z37z38z39z310∞

spawn_main multiprocessing.spawn.spawn_main"
None*-
pipe_handle
builtins.int"builtins.int*V

parent_pidD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

tracker_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310l
_mainmultiprocessing.spawn._main"
Any*$
fd
builtins.int"builtins.intz35z36z37z38z39z310‹
get_preparation_data*multiprocessing.spawn.get_preparation_data"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*&
name
builtins.str"builtins.strz35z36z37z38z39z310∞
preparemultiprocessing.spawn.prepare"
None*c
dataY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz35z36z37z38z39z310ä
import_main_path&multiprocessing.spawn.import_main_path"
None*+
	main_path
builtins.str"builtins.strz35z36z37z38z39z310*N
Any
typing.Any"
builtins.object"builtins.object"35"36"37"38"39"310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310*_
WINEXEmultiprocessing.spawn.WINEXE
builtins.bool"builtins.bool"35"36"37"38"39"310*g

WINSERVICE multiprocessing.spawn.WINSERVICE
builtins.bool"builtins.bool"35"36"37"38"39"310*´
old_main_modules&multiprocessing.spawn.old_main_modulesV
builtins.list[types.ModuleType]$
types.ModuleType"types.ModuleType"builtins.list"35"36"37"38"39"310