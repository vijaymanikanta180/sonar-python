
os.pathâ
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27è
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27j27D
overloadtyping.overload"
	typing._F*
f
	typing._Fz27N
abspathos.path.abspath"
typing.AnyStr*
path
typing.AnyStrz27M
basenameos.path.basename"
typing.AnyStr*
p
typing.AnyStrz27K
dirnameos.path.dirname"
typing.AnyStr*
p
typing.AnyStrz27T

expanduseros.path.expanduser"
typing.AnyStr*
path
typing.AnyStrz27T

expandvarsos.path.expandvars"
typing.AnyStr*
path
typing.AnyStrz27M
normcaseos.path.normcase"
typing.AnyStr*
s
typing.AnyStrz27P
normpathos.path.normpath"
typing.AnyStr*
path
typing.AnyStrz27T
realpathos.path.realpath"
typing.AnyStr*
filename
typing.AnyStrz27î
commonprefixos.path.commonprefix"
Any*a
mZ
!typing.Sequence[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Sequencez27l
existsos.path.exists"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27n
lexistsos.path.lexists"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27v
getatimeos.path.getatime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27v
getmtimeos.path.getmtime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27v
getctimeos.path.getctime" 
builtins.float"builtins.float*2
filename$
builtins.unicode"builtins.unicodez27p
getsizeos.path.getsize"
builtins.int"builtins.int*2
filename$
builtins.unicode"builtins.unicodez27g
isabsos.path.isabs"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27l
isfileos.path.isfile"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27g
isdiros.path.isdir"
builtins.bool"builtins.bool*+
s$
builtins.unicode"builtins.unicodez27l
islinkos.path.islink"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27n
ismountos.path.ismount"
builtins.bool"builtins.bool*.
path$
builtins.unicode"builtins.unicodez27ú
samefileos.path.samefile"
builtins.bool"builtins.bool*,
f1$
builtins.unicode"builtins.unicode*,
f2$
builtins.unicode"builtins.unicodez27ñ
sameopenfileos.path.sameopenfile"
builtins.bool"builtins.bool*%
fp1
builtins.int"builtins.int*%
fp2
builtins.int"builtins.intz27†
samestatos.path.samestat"
builtins.bool"builtins.bool*.
s1&
posix.stat_result"posix.stat_result*.
s2&
posix.stat_result"posix.stat_resultz27Ç
splitos.path.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27å

splitdriveos.path.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27à
splitextos.path.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStrz27∞
walkos.path.walk"
None*
path
typing.AnyStr*V
visitK
CallableType[builtins.function]&
builtins.function"builtins.function*
arg

os.path._Tz27ô
existsgenericpath.exists"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310£
getatimegenericpath.getatime" 
builtins.float"builtins.float*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310£
getctimegenericpath.getctime" 
builtins.float"builtins.float*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310£
getmtimegenericpath.getmtime" 
builtins.float"builtins.float*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310ù
getsizegenericpath.getsize"
builtins.int"builtins.int*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310î
isdirgenericpath.isdir"
builtins.bool"builtins.bool*æ
s∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310ô
isfilegenericpath.isfile"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310›
samefilegenericpath.samefile"
builtins.bool"builtins.bool*ø
f1∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*ø
f2∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310Ø
sameopenfilegenericpath.sameopenfile"
builtins.bool"builtins.bool*%
fp1
builtins.int"builtins.int*%
fp2
builtins.int"builtins.intz35z36z37z38z39z310≠
samestatgenericpath.samestat"
builtins.bool"builtins.bool*(
s1 
os.stat_result"os.stat_result*(
s2 
os.stat_result"os.stat_resultz35z36z37z38z39z310í
isabsposixpath.isabs"
builtins.bool"builtins.bool*æ
s∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310ó
islinkposixpath.islink"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310ô
ismountposixpath.ismount"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310ô
lexistsposixpath.lexists"
builtins.bool"builtins.bool*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz35z36z37z38z39z310"¢
joinos.path.joinã
joinos.path.join"
builtins.str"builtins.str*$
__p1
builtins.str"builtins.str*#
p
builtins.str"builtins.str0:overloadXï
joinos.path.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*$
__p2
builtins.str"builtins.str*$
__p3
builtins.str"builtins.str*,
__p4$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadXÔ
joinos.path.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*$
__p2
builtins.str"builtins.str*,
__p3$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX…
joinos.path.join"$
builtins.unicode"builtins.unicode*$
__p1
builtins.str"builtins.str*,
__p2$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX£
joinos.path.join"$
builtins.unicode"builtins.unicode*,
__p1$
builtins.unicode"builtins.unicode*+
p$
builtins.unicode"builtins.unicode0:overloadX"27"¬
relpathos.path.relpath¡
relpathos.path.relpath"
builtins.str"builtins.str*&
path
builtins.str"builtins.str*Q
startD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX›
relpathos.path.relpath"$
builtins.unicode"builtins.unicode*.
path$
builtins.unicode"builtins.unicode*]
startP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None 0:overloadX"27"√
commonprefixgenericpath.commonprefixß
commonprefixgenericpath.commonprefix"
builtins.str"builtins.str*–
m»
Ityping.Sequence[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"typing.Sequence0:overloadXÆ
commonprefixgenericpath.commonprefix"ä
+Union[builtins.bytes,Literal[builtins.str]] 
builtins.bytes"builtins.bytes7
Literal[builtins.str]	
builtins.str"builtins.str*Ë
m‡
Mtyping.Sequence[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]]˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath"typing.Sequence0:overloadXœ
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*¥
m¨
;typing.Sequence[builtins.list[_typeshed.SupportsLessThanT]]\
*builtins.list[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.list"typing.Sequence0:overloadX“
commonprefixgenericpath.commonprefix"`
,typing.Sequence[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Sequence*∑
mØ
<typing.Sequence[builtins.tuple[_typeshed.SupportsLessThanT]]^
+builtins.tuple[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"builtins.tuple"typing.Sequence0:overloadX"35"36"37"38"39"310"ô
abspathposixpath.abspathÖ
abspathposixpath.abspath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXZ
abspathposixpath.abspath"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39"310"ô
basenameposixpath.basenameÑ
basenameposixpath.basename"
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXY
basenameposixpath.basename"
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39"310"ì
dirnameposixpath.dirnameÇ
dirnameposixpath.dirname"
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXW
dirnameposixpath.dirname"
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39"310"´

expanduserposixpath.expanduserã

expanduserposixpath.expanduser"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`

expanduserposixpath.expanduser"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39"310"´

expandvarsposixpath.expandvarsã

expandvarsposixpath.expandvars"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`

expandvarsposixpath.expandvars"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39"310"ô
normcaseposixpath.normcaseÑ
normcaseposixpath.normcase"
typing.AnyStr*C
s<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXY
normcaseposixpath.normcase"
typing.AnyStr*
s
typing.AnyStr0:overloadX"35"36"37"38"39"310"ü
normpathposixpath.normpathá
normpathposixpath.normpath"
typing.AnyStr*F
path<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX\
normpathposixpath.normpath"
typing.AnyStr*
path
typing.AnyStr0:overloadX"35"36"37"38"39"310"ß

commonpathposixpath.commonpath•

commonpathposixpath.commonpath"
builtins.str"builtins.str*‘
paths»
Ityping.Sequence[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath"typing.Sequence0:overloadX¡

commonpathposixpath.commonpath" 
builtins.bytes"builtins.bytes*Ï
paths‡
Mtyping.Sequence[TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]]˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath"typing.Sequence0:overloadX"35"36"37"38"39"310"Ω	
joinposixpath.joinÆ
joinposixpath.join"
builtins.str"builtins.str*Ò
aÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*ı
pathsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath0:overloadX⁄
joinposixpath.join" 
builtins.bytes"builtins.bytes*Ö
a˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*â
paths˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath0:overloadX"35"36"37"38"39"310"¢
realpathposixpath.realpathã
realpathposixpath.realpath"
typing.AnyStr*J
filename<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadX`
realpathposixpath.realpath"
typing.AnyStr*
filename
typing.AnyStr0:overloadX"35"36"37"38"39"
realpathposixpath.realpathπ
realpathposixpath.realpath"
typing.AnyStr*J
filename<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike*,
strict
builtins.bool"builtins.bool 0:overloadXé
realpathposixpath.realpath"
typing.AnyStr*
filename
typing.AnyStr*,
strict
builtins.bool"builtins.bool 0:overloadX"310"Õ
relpathposixpath.relpathú
relpathposixpath.relpath" 
builtins.bytes"builtins.bytes*à
path˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*¬
start¥
6Union[builtins.bytes,os.PathLike[builtins.bytes],None] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike
None 0:overloadXˆ
relpathposixpath.relpath"
builtins.str"builtins.str*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*¥
start¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None 0:overloadX"35"36"37"38"39"310"˛
splitposixpath.splitπ
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXé
splitposixpath.split"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39"310"ú

splitdriveposixpath.splitdrive√

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXò

splitdriveposixpath.splitdrive"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39"310"ê
splitextposixpath.splitextø
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*C
p<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike0:overloadXî
splitextposixpath.splitext"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
p
typing.AnyStr0:overloadX"35"36"37"38"39"310*9
Any
typing.Any"
builtins.object"builtins.object"27*K
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm"27*K
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27*E
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"27*d
supports_unicode_filenames"os.path.supports_unicode_filenames
builtins.bool"builtins.bool"27*:
curdiros.path.curdir
builtins.str"builtins.str"27*:
pardiros.path.pardir
builtins.str"builtins.str"27*4
sepos.path.sep
builtins.str"builtins.str"27*b
altsepos.path.altsepD
Union[builtins.str,None]
builtins.str"builtins.str
None"27*:
extsepos.path.extsep
builtins.str"builtins.str"27*<
pathsepos.path.pathsep
builtins.str"builtins.str"27*<
defpathos.path.defpath
builtins.str"builtins.str"27*<
devnullos.path.devnull
builtins.str"builtins.str"27*{
supports_unicode_filenames$posixpath.supports_unicode_filenames
builtins.bool"builtins.bool"35"36"37"38"39"310*Q
curdirposixpath.curdir
builtins.str"builtins.str"35"36"37"38"39"310*Q
pardirposixpath.pardir
builtins.str"builtins.str"35"36"37"38"39"310*K
sepposixpath.sep
builtins.str"builtins.str"35"36"37"38"39"310*y
altsepposixpath.altsepD
Union[builtins.str,None]
builtins.str"builtins.str
None"35"36"37"38"39"310*Q
extsepposixpath.extsep
builtins.str"builtins.str"35"36"37"38"39"310*S
pathsepposixpath.pathsep
builtins.str"builtins.str"35"36"37"38"39"310*S
defpathposixpath.defpath
builtins.str"builtins.str"35"36"37"38"39"310*S
devnullposixpath.devnull
builtins.str"builtins.str"35"36"37"38"39"310