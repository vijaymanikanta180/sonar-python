
pkgutilæ
SupportsRead_typeshed.SupportsRead"builtins.object*„
read_typeshed.SupportsRead.read"
_typeshed._T_co*`
selfV
'_typeshed.SupportsRead[_typeshed._T_co]
_typeshed._T_co"_typeshed.SupportsRead**
__length
builtins.int"builtins.int z27z35z36z37z38z39z310PXj27j35j36j37j38j39j310ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310∑
Iterabletyping.Iterable"builtins.object*Â
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z3108PXj27j35j36j37j38j39j310Ó
Iteratortyping.Iterator"typing.Iterable*î
nexttyping.Iterator.next"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z27*—
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz27z35z36z37z38z39z310*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z3108PXj27j35j36j37j38j39j310™
ImpImporterpkgutil.ImpImporter"builtins.object*◊
__init__pkgutil.ImpImporter.__init__"
None*4
self*
pkgutil.ImpImporter"pkgutil.ImpImporter*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z27z35z36z37z38z39z310j27j35j36j37j38j39j310å
	ImpLoaderpkgutil.ImpLoader"builtins.object*Ω
__init__pkgutil.ImpLoader.__init__"
None*0
self&
pkgutil.ImpLoader"pkgutil.ImpLoader**
fullname
builtins.str"builtins.str*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
filename
builtins.str"builtins.str*ï
etcã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.intz27z35z36z37z38z39z310j27j35j36j37j38j39j310„
Loaderimportlib.abc.Loader"builtins.object*“
load_module importlib.abc.Loader.load_module"$
types.ModuleType"types.ModuleType*6
self,
importlib.abc.Loader"importlib.abc.Loader**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*–
module_repr importlib.abc.Loader.module_repr"
builtins.str"builtins.str*6
self,
importlib.abc.Loader"importlib.abc.Loader*0
module$
types.ModuleType"types.ModuleTypez35z36z37z38z39z310*¢
create_module"importlib.abc.Loader.create_module"P
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None*6
self,
importlib.abc.Loader"importlib.abc.Loader*J
spec@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpecz35z36z37z38z39z310*º
exec_module importlib.abc.Loader.exec_module"
None*6
self,
importlib.abc.Loader"importlib.abc.Loader*0
module$
types.ModuleType"types.ModuleTypez35z36z37z38z39z310@babc.ABCMetaj35j36j37j38j39j310®
MetaPathFinderimportlib.abc.MetaPathFinder"importlib.abc.Finder*ç
find_module(importlib.abc.MetaPathFinder.find_module"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder**
fullname
builtins.str"builtins.str*Ë
path›
JUnion[typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]],None]Ç
>typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path"typing.Sequence
Nonez35z36z37z38z39z310*Æ
invalidate_caches.importlib.abc.MetaPathFinder.invalidate_caches"
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinderz35z36z37z38z39z310*á
	find_spec&importlib.abc.MetaPathFinder.find_spec"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*F
self<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder**
fullname
builtins.str"builtins.str*Ë
path›
JUnion[typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]],None]Ç
>typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path"typing.Sequence
None*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z35z36z37z38z39z310j35j36j37j38j39j310˜
PathEntryFinderimportlib.abc.PathEntryFinder"importlib.abc.Finder*•
find_module)importlib.abc.PathEntryFinder.find_module"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*ó
find_loader)importlib.abc.PathEntryFinder.find_loader"Õ
fTuple[Union[importlib.abc.Loader,None],typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]]\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
NoneÇ
>typing.Sequence[TypeAlias[Union[builtins.bytes,builtins.str]]]Æ
-TypeAlias[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"importlib.abc._Path"typing.Sequence*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.strz35z36z37z38z39z310*±
invalidate_caches/importlib.abc.PathEntryFinder.invalidate_caches"
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinderz35z36z37z38z39z310*ü
	find_spec'importlib.abc.PathEntryFinder.find_spec"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*H
self>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder**
fullname
builtins.str"builtins.str*^
targetP
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None z35z36z37z38z39z310j35j36j37j38j39j310Ô

NamedTupletyping.NamedTuple"builtins.tuple*Ã
__init__typing.NamedTuple.__init__"
None*0
self&
typing.NamedTuple"typing.NamedTuple**
typename
builtins.str"builtins.str*ç
fields
(typing.Iterable[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterable *
kwargs
Anyz35z36z37z38z39z310*∆
_maketyping.NamedTuple._make"
	typing._T*+
cls"
Type[typing._T]
	typing._T*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:classmethodpz35z36z37z38z39z310*œ
_asdicttyping.NamedTuple._asdict"k
)collections.OrderedDict[builtins.str,Any]
builtins.str"builtins.str
Any"collections.OrderedDict*0
self&
typing.NamedTuple"typing.NamedTuplez35z36z37*º
_asdicttyping.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
typing.NamedTuple"typing.NamedTuplez38z39z310*|
_replacetyping.NamedTuple._replace"
	typing._T*
self
	typing._T*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310Ø

ModuleInfopkgutil.ModuleInfo"builtins.tuple*∂
_replacepkgutil.ModuleInfo._replace"
pkgutil.ModuleInfo._NT*%
_self
pkgutil.ModuleInfo._NT*Ÿ
module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder *(
name
builtins.str"builtins.str *+
ispkg
builtins.bool"builtins.bool z35z36z37z38z39z310*œ
__new__pkgutil.ModuleInfo.__new__"
pkgutil.ModuleInfo._NT*F
_cls<
Type[pkgutil.ModuleInfo._NT]
pkgutil.ModuleInfo._NT*◊
module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder*&
name
builtins.str"builtins.str*)
ispkg
builtins.bool"builtins.boolz35z36z37z38z39z310*æ
_asdictpkgutil.ModuleInfo._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*%
_self
pkgutil.ModuleInfo._NTz35z36z37z38z39z310*ó
_makepkgutil.ModuleInfo._make"
pkgutil.ModuleInfo._NT*F
_cls<
Type[pkgutil.ModuleInfo._NT]
pkgutil.ModuleInfo._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310â
extend_pathpkgutil.extend_path"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*T
pathJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310z
find_loaderpkgutil.find_loader"&
Union[Any,None]
Any
None**
fullname
builtins.str"builtins.strz27≈
find_loaderpkgutil.find_loader"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None**
fullname
builtins.str"builtins.strz35z36z37z38z39z310}
get_importerpkgutil.get_importer"&
Union[Any,None]
Any
None*+
	path_item
builtins.str"builtins.strz27„
get_importerpkgutil.get_importer"w
)Union[importlib.abc.PathEntryFinder,None]>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
None*+
	path_item
builtins.str"builtins.strz35z36z37z38z39z310É

get_loaderpkgutil.get_loader"+
TypeAlias[Any]
Any"pkgutil.Loader*0
module_or_name
builtins.str"builtins.strz27ô

get_loaderpkgutil.get_loader",
importlib.abc.Loader"importlib.abc.Loader*0
module_or_name
builtins.str"builtins.strz35z36z37z38z39z310ª
iter_importerspkgutil.iter_importers"ﬁ
5typing.Iterator[Union[TypeAlias[Any],TypeAlias[Any]]]ì
$Union[TypeAlias[Any],TypeAlias[Any]]3
TypeAlias[Any]
Any"pkgutil.MetaPathFinder4
TypeAlias[Any]
Any"pkgutil.PathEntryFinder"typing.Iterator*,
fullname
builtins.str"builtins.str z27ù
iter_importerspkgutil.iter_importers"´
Rtyping.Iterator[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder"typing.Iterator*,
fullname
builtins.str"builtins.str z35z36z37z38z39z310ı
iter_modulespkgutil.iter_modules"á
btyping.Iterator[TypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]]è
QTypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]û
FTuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]ì
$Union[TypeAlias[Any],TypeAlias[Any]]3
TypeAlias[Any]
Any"pkgutil.MetaPathFinder4
TypeAlias[Any]
Any"pkgutil.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"pkgutil._ModuleInfoLike"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str z27¯
iter_modulespkgutil.iter_modules"ı
ttyping.Iterator[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]Î
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str z35z36z37z38z39z310ï
	read_codepkgutil.read_code"
Any*h
stream\
$_typeshed.SupportsRead[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsReadz27∞
	read_codepkgutil.read_code"
Any*n
streamb
&_typeshed.SupportsRead[builtins.bytes] 
builtins.bytes"builtins.bytes"_typeshed.SupportsReadz35z36z37z38z39z310ê
walk_packagespkgutil.walk_packages"á
btyping.Iterator[TypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]]è
QTypeAlias[Tuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]]û
FTuple[Union[TypeAlias[Any],TypeAlias[Any]],builtins.str,builtins.bool]ì
$Union[TypeAlias[Any],TypeAlias[Any]]3
TypeAlias[Any]
Any"pkgutil.MetaPathFinder4
TypeAlias[Any]
Any"pkgutil.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"pkgutil._ModuleInfoLike"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z27ì
walk_packagespkgutil.walk_packages"ı
ttyping.Iterator[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]Î
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39z310Ω
get_datapkgutil.get_data"D
Union[builtins.str,None]
builtins.str"builtins.str
None*)
package
builtins.str"builtins.str**
resource
builtins.str"builtins.strz27ÿ
get_datapkgutil.get_data"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*)
package
builtins.str"builtins.str**
resource
builtins.str"builtins.strz35z36z37z38z39z310^
resolve_namepkgutil.resolve_name"
Any*&
name
builtins.str"builtins.strz39z310*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*d
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310