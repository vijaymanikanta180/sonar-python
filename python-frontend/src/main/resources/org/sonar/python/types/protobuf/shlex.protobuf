
shlexœ 
IO	typing.IO"typing.Iterator*ä
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*ä
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*~
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*î
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*~
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ñ
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27*ö
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*∏
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27*Ë
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27*Ê
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27*ö
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*Í
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27*ö
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27*Ÿ

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*æ
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¥
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*©
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27Pj27…
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310°
shlexshlex.shlex"builtins.object*æ
__init__shlex.shlex.__init__"
None*$
self
shlex.shlex"shlex.shlex*Ü
instreamv
&Union[typing.IO[Any],builtins.unicode]$
typing.IO[Any]
Any"	typing.IO$
builtins.unicode"builtins.unicode *2
infile$
typing.IO[Any]
Any"	typing.IO *+
posix
builtins.bool"builtins.bool z27*L
__iter__shlex.shlex.__iter__"

shlex._SLT*
self

shlex._SLTz27*`
nextshlex.shlex.next"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlexz27*í
	get_tokenshlex.shlex.get_token"D
Union[builtins.str,None]
builtins.str"builtins.str
None*$
self
shlex.shlex"shlex.shlexz27*Ä

push_tokenshlex.shlex.push_token"
None*$
self
shlex.shlex"shlex.shlex*&
_str
builtins.str"builtins.strz27*l

read_tokenshlex.shlex.read_token"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlexz27*Ñ

sourcehookshlex.shlex.sourcehook"
None*$
self
shlex.shlex"shlex.shlex**
filename
builtins.str"builtins.strz27*∫
push_sourceshlex.shlex.push_source"
None*$
self
shlex.shlex"shlex.shlex*0
stream$
typing.IO[Any]
Any"	typing.IO*,
filename
builtins.str"builtins.str z27*t

pop_sourceshlex.shlex.pop_source"$
typing.IO[Any]
Any"	typing.IO*$
self
shlex.shlex"shlex.shlexz27*ƒ
error_leadershlex.shlex.error_leader"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlex*(
file
builtins.str"builtins.str *(
line
builtins.int"builtins.int z27j27œ
shlexshlex.shlex"typing.Iterable*Ì
__init__shlex.shlex.__init__"
None*$
self
shlex.shlex"shlex.shlex*Ç
instreamr
&Union[builtins.str,typing.TextIO,None]
builtins.str"builtins.str
typing.TextIO"typing.TextIO
None *R
infileD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
posix
builtins.bool"builtins.bool *|
punctuation_charsc
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str z35z36z37z38z39z310*
	get_tokenshlex.shlex.get_token"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlexz35z36z37z38z39z310*î

push_tokenshlex.shlex.push_token"
None*$
self
shlex.shlex"shlex.shlex*%
tok
builtins.str"builtins.strz35z36z37z38z39z310*Å

read_tokenshlex.shlex.read_token"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlexz35z36z37z38z39z310*Û

sourcehookshlex.shlex.sourcehook"c
!Tuple[builtins.str,typing.TextIO]
builtins.str"builtins.str
typing.TextIO"typing.TextIO*$
self
shlex.shlex"shlex.shlex*)
newfile
builtins.str"builtins.strz35z36z37z38z39z310*ü
push_sourceshlex.shlex.push_source"
None*$
self
shlex.shlex"shlex.shlex*
	newstream
Any*
newfile
Any z35z36z37z38z39z310*m

pop_sourceshlex.shlex.pop_source"
None*$
self
shlex.shlex"shlex.shlexz35z36z37z38z39z310*ô
error_leadershlex.shlex.error_leader"
None*$
self
shlex.shlex"shlex.shlex*R
infileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*a
__iter__shlex.shlex.__iter__"

shlex._SLT*
self

shlex._SLTz35z36z37z38z39z310*}
__next__shlex.shlex.__next__"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlexz35z36z37z38z39z310j35j36j37j38j39j310Ø
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310◊
TextIOtyping.TextIO"	typing.IO*ì
buffertyping.TextIO.buffer""
typing.BinaryIO"typing.BinaryIO*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*ë
encodingtyping.TextIO.encoding"
builtins.str"builtins.str*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*µ
errorstyping.TextIO.errors"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*ù
line_bufferingtyping.TextIO.line_buffering"
builtins.int"builtins.int*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*|
newlinestyping.TextIO.newlines"
Any*(
self
typing.TextIO"typing.TextIO0:property`z35z36z37z38z39z310*ô
	__enter__typing.TextIO.__enter__"
typing.TextIO"typing.TextIO*&
self
typing.TextIO"typing.TextIO0:abstractmethod@z35z36z37z38z39z310j35j36j37j38j39j310é
splitshlex.split"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*K
sD
Union[builtins.str,None]
builtins.str"builtins.str
None*.
comments
builtins.bool"builtins.bool *+
posix
builtins.bool"builtins.bool z27˚
splitshlex.split"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*#
s
builtins.str"builtins.str*.
comments
builtins.bool"builtins.bool *+
posix
builtins.bool"builtins.bool z35z36z37z38z39z310p
quoteshlex.quote"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz35z36z37z38z39z310†
join
shlex.join"
builtins.str"builtins.str*a
split_commandN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez38z39z310*R
Any
typing.Any"
builtins.object"builtins.object"27"35"36"37"38"39"310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm"27"35"36"37"38"39"310*Z
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm"35"36"37"38"39"310