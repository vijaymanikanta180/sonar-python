
shutilæ
SupportsRead_typeshed.SupportsRead"builtins.object*„
read_typeshed.SupportsRead.read"
_typeshed._T_co*`
selfV
'_typeshed.SupportsRead[_typeshed._T_co]
_typeshed._T_co"_typeshed.SupportsRead**
__length
builtins.int"builtins.int z27z35z36z37z38z39z310PXj27j35j36j37j38j39j310µ
SupportsWrite_typeshed.SupportsWrite"builtins.object*ÿ
write_typeshed.SupportsWrite.write"
Any*j
self`
,_typeshed.SupportsWrite[_typeshed._T_contra]
_typeshed._T_contra"_typeshed.SupportsWrite*
__s
_typeshed._T_contraz27z35z36z37z38z39z310PXj27j35j36j37j38j39j310∑
Iterabletyping.Iterable"builtins.object*Â
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z3108PXj27j35j36j37j38j39j310â
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310…
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j3104
Errorshutil.Error"builtins.EnvironmentErrorj27@
Errorshutil.Error"builtins.OSErrorj35j36j37j38j39j310J
SpecialFileErrorshutil.SpecialFileError"builtins.EnvironmentErrorj27V
SpecialFileErrorshutil.SpecialFileError"builtins.OSErrorj35j36j37j38j39j310<
	ExecErrorshutil.ExecError"builtins.EnvironmentErrorj27H
	ExecErrorshutil.ExecError"builtins.OSErrorj35j36j37j38j39j310Ô

NamedTupletyping.NamedTuple"builtins.tuple*Ã
__init__typing.NamedTuple.__init__"
None*0
self&
typing.NamedTuple"typing.NamedTuple**
typename
builtins.str"builtins.str*ç
fields
(typing.Iterable[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterable *
kwargs
Anyz35z36z37z38z39z310*∆
_maketyping.NamedTuple._make"
	typing._T*+
cls"
Type[typing._T]
	typing._T*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:classmethodpz35z36z37z38z39z310*œ
_asdicttyping.NamedTuple._asdict"k
)collections.OrderedDict[builtins.str,Any]
builtins.str"builtins.str
Any"collections.OrderedDict*0
self&
typing.NamedTuple"typing.NamedTuplez35z36z37*º
_asdicttyping.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
typing.NamedTuple"typing.NamedTuplez38z39z310*|
_replacetyping.NamedTuple._replace"
	typing._T*
self
	typing._T*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310L
SameFileErrorshutil.SameFileError"shutil.Errorj35j36j37j38j39j310H
	ReadErrorshutil.ReadError"builtins.OSErrorj35j36j37j38j39j310R
RegistryErrorshutil.RegistryError"builtins.Exceptionj35j36j37j38j39j310¢	
_ntuple_diskusageshutil._ntuple_diskusage"builtins.tuple*î
_replace!shutil._ntuple_diskusage._replace" 
shutil._ntuple_diskusage._NT*+
_self 
shutil._ntuple_diskusage._NT*)
total
builtins.int"builtins.int *(
used
builtins.int"builtins.int *(
free
builtins.int"builtins.int z35z36z37z38z39z310*≥
__new__ shutil._ntuple_diskusage.__new__" 
shutil._ntuple_diskusage._NT*R
_clsH
"Type[shutil._ntuple_diskusage._NT] 
shutil._ntuple_diskusage._NT*'
total
builtins.int"builtins.int*&
used
builtins.int"builtins.int*&
free
builtins.int"builtins.intz35z36z37z38z39z310* 
_asdict shutil._ntuple_diskusage._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*+
_self 
shutil._ntuple_diskusage._NTz35z36z37z38z39z310*Ø
_makeshutil._ntuple_diskusage._make" 
shutil._ntuple_diskusage._NT*R
_clsH
"Type[shutil._ntuple_diskusage._NT] 
shutil._ntuple_diskusage._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz35z36z37z38z39z310j35j36j37j38j39j310≤
copyfileobjshutil.copyfileobj"
None*\
fsrcR
%_typeshed.SupportsRead[typing.AnyStr]
typing.AnyStr"_typeshed.SupportsRead*^
fdstT
&_typeshed.SupportsWrite[typing.AnyStr]
typing.AnyStr"_typeshed.SupportsWrite**
length
builtins.int"builtins.int z27z35z36z37z38z39z310á
copyfileshutil.copyfile"
None*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27ê
copyfileshutil.copyfile"
shutil._PathT*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*
dst
shutil._PathT*5
follow_symlinks
builtins.bool"builtins.bool z35z36z37z38z39z310á
copymodeshutil.copymode"
None*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27·
copymodeshutil.copymode"
None*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*5
follow_symlinks
builtins.bool"builtins.bool z35z36z37z38z39z310á
copystatshutil.copystat"
None*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27·
copystatshutil.copystat"
None*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*5
follow_symlinks
builtins.bool"builtins.bool z35z36z37z38z39z310æ
copyshutil.copy"G
TypeAlias[Type[None]]

Type[None]
None"shutil._PathReturn*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27Ä
copyshutil.copy"/
TypeAlias[Any]
Any"shutil._PathReturn*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*5
follow_symlinks
builtins.bool"builtins.bool z35z36z37z38z39z310¿
copy2shutil.copy2"G
TypeAlias[Type[None]]

Type[None]
None"shutil._PathReturn*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27Ç
copy2shutil.copy2"/
TypeAlias[Any]
Any"shutil._PathReturn*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*5
follow_symlinks
builtins.bool"builtins.bool z35z36z37z38z39z310Æ
ignore_patternsshutil.ignore_patterns"K
CallableType[builtins.function]&
builtins.function"builtins.function*2
patterns$
builtins.unicode"builtins.unicodez27ä
ignore_patternsshutil.ignore_patterns"K
CallableType[builtins.function]&
builtins.function"builtins.function*¯
patternsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310Ë
copytreeshutil.copytree"G
TypeAlias[Type[None]]

Type[None]
None"shutil._PathReturn*
src
typing.AnyStr*
dst
typing.AnyStr*.
symlinks
builtins.bool"builtins.bool *ï
ignoreÜ
+Union[None,CallableType[builtins.function]]
NoneK
CallableType[builtins.function]&
builtins.function"builtins.function z27õ
copytreeshutil.copytree"/
TypeAlias[Any]
Any"shutil._PathReturn*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*.
symlinks
builtins.bool"builtins.bool *Ç
ignoreÛ
KUnion[None,CallableType[builtins.function],CallableType[builtins.function]]
NoneK
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function *`
copy_functionK
CallableType[builtins.function]&
builtins.function"builtins.function *>
ignore_dangling_symlinks
builtins.bool"builtins.bool z35z36z37—
copytreeshutil.copytree"/
TypeAlias[Any]
Any"shutil._PathReturn*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*.
symlinks
builtins.bool"builtins.bool *Ç
ignoreÛ
KUnion[None,CallableType[builtins.function],CallableType[builtins.function]]
NoneK
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function *`
copy_functionK
CallableType[builtins.function]&
builtins.function"builtins.function *>
ignore_dangling_symlinks
builtins.bool"builtins.bool *3
dirs_exist_ok
builtins.bool"builtins.bool z38z39z310í
rmtreeshutil.rmtree"
None*
path
shutil._AnyPath*3
ignore_errors
builtins.bool"builtins.bool *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z27ˆ
rmtreeshutil.rmtree"
None*Î
path‡
NUnion[builtins.bytes,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]] 
builtins.bytes"builtins.bytesÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*3
ignore_errors
builtins.bool"builtins.bool *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39z310æ
moveshutil.move"G
TypeAlias[Type[None]]

Type[None]
None"shutil._PathReturn*-
src$
builtins.unicode"builtins.unicode*-
dst$
builtins.unicode"builtins.unicodez27÷
moveshutil.move"/
TypeAlias[Any]
Any"shutil._PathReturn*%
src
builtins.str"builtins.str*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*‚
copy_functionÃ
QTypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]‰
FUnion[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function"shutil._CopyFn z35z36z37z38û
moveshutil.move"/
TypeAlias[Any]
Any"shutil._PathReturn*Û
srcÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Û
dstÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*‚
copy_functionÃ
QTypeAlias[Union[CallableType[builtins.function],CallableType[builtins.function]]]‰
FUnion[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function"shutil._CopyFn z39z310Ü
make_archiveshutil.make_archive"
shutil._AnyStr*!
	base_name
shutil._AnyStr*(
format
builtins.str"builtins.str*`
root_dirP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *`
base_dirP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool *Q
ownerD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
groupD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
logger&
Union[Any,None]
Any
None z27ﬂ
make_archiveshutil.make_archive"
builtins.str"builtins.str*+
	base_name
builtins.str"builtins.str*(
format
builtins.str"builtins.str*∑
root_dir¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *∑
base_dir¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *-
verbose
builtins.bool"builtins.bool *-
dry_run
builtins.bool"builtins.bool *Q
ownerD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
groupD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
logger&
Union[Any,None]
Any
None z35z36z37z38z39z310Û
get_archive_formatsshutil.get_archive_formats"¢
/builtins.list[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.listz27z35z36z37z38z39z310à
register_archive_formatshutil.register_archive_format"
None*&
name
builtins.str"builtins.str*Y
functionK
CallableType[builtins.function]&
builtins.function"builtins.function*Ò

extra_argsﬁ
NUnion[typing.Sequence[Union[Tuple[builtins.str,Any],builtins.list[Any]]],None]ˇ
Btyping.Sequence[Union[Tuple[builtins.str,Any],builtins.list[Any]]]ß
1Union[Tuple[builtins.str,Any],builtins.list[Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any,
builtins.list[Any]
Any"builtins.list"typing.Sequence
None */
description
builtins.str"builtins.str z27z35z36z37z38z39z310å
unregister_archive_format shutil.unregister_archive_format"
None*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310Ω

disk_usageshutil.disk_usage"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz35z36z37z38z39z310™
chownshutil.chown"
None*Ù
pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*{
usero
%Union[builtins.str,builtins.int,None]
builtins.str"builtins.str
builtins.int"builtins.int
None *|
groupo
%Union[builtins.str,builtins.int,None]
builtins.str"builtins.str
builtins.int"builtins.int
None z35z36z37z38z39z310Ω
whichshutil.which"D
Union[builtins.str,None]
builtins.str"builtins.str
None*Û
cmdÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
mode
builtins.int"builtins.int *≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None z35z36z37ˆ
unpack_archiveshutil.unpack_archive"
None**
filename
builtins.str"builtins.str*∫
extract_dir¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36Œ
unpack_archiveshutil.unpack_archive"
None*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∫
extract_dir¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None z37z38z39z310ˇ
register_unpack_formatshutil.register_unpack_format"
None*&
name
builtins.str"builtins.str*Z

extensionsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*
function
Any*÷

extra_args√
4Union[typing.Sequence[Tuple[builtins.str,Any]],None]
(typing.Sequence[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Sequence
None */
description
builtins.str"builtins.str z35z36z37z38z39z310Ü
unregister_unpack_formatshutil.unregister_unpack_format"
None*&
name
builtins.str"builtins.strz35z36z37z38z39z310Ú
get_unpack_formatsshutil.get_unpack_formats"ß
Kbuiltins.list[Tuple[builtins.str,builtins.list[builtins.str],builtins.str]]»
<Tuple[builtins.str,builtins.list[builtins.str],builtins.str]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
builtins.str"builtins.str"builtins.listz35z36z37z38z39z310ö
get_terminal_sizeshutil.get_terminal_size"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*p
fallback`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int z35z36z37z38z39z310"·
whichshutil.whichø
whichshutil.which"D
Union[builtins.str,None]
builtins.str"builtins.str
None*Û
cmdÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*(
mode
builtins.int"builtins.int *≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None 0:overloadX˙
whichshutil.which"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*)
cmd 
builtins.bytes"builtins.bytes*(
mode
builtins.int"builtins.int *≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None 0:overloadX"38"39"310*R
Any
typing.Any"
builtins.object"builtins.object*27*35*36*37*38*39*310*d
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*C
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*27*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*#
osos *35*36*37*38*39*310*%
syssys *35*36*37*38*39*310