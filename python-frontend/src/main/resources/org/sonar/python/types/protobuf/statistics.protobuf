

statistics°◊
Decimaldecimal.Decimal"builtins.object*¿
__new__decimal.Decimal.__new__"
decimal._DecimalT*;
cls2
Type[decimal._DecimalT]
decimal._DecimalT*–
value¬
|TypeAlias[Union[decimal.Decimal,builtins.float,builtins.str,Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]]]™
qUnion[decimal.Decimal,builtins.float,builtins.str,Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]]"
decimal.Decimal"decimal.Decimal 
builtins.float"builtins.float
builtins.str"builtins.strŒ
>Tuple[builtins.int,typing.Sequence[builtins.int],builtins.int]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
builtins.int"builtins.int"decimal._DecimalNew *\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Á

from_floatdecimal.Decimal.from_float""
decimal.Decimal"decimal.Decimal*F
cls=
Type[decimal.Decimal]"
decimal.Decimal"decimal.Decimal*'
__f 
builtins.float"builtins.float0:classmethodpz35z36z37z38z39z310*ã
__bool__decimal.Decimal.__bool__"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*©
comparedecimal.Decimal.compare""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*â
__hash__decimal.Decimal.__hash__"
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*π
as_tupledecimal.Decimal.as_tuple"À
=Tuple[builtins.int,builtins.tuple[builtins.int],builtins.int]
builtins.int"builtins.intL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*›
as_integer_ratio decimal.Decimal.as_integer_ratio"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*Ò
to_eng_stringdecimal.Decimal.to_eng_string"
builtins.str"builtins.str*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*ã
__abs__decimal.Decimal.__abs__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*«
__add__decimal.Decimal.__add__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*ù

__divmod__decimal.Decimal.__divmod__"r
&Tuple[decimal.Decimal,decimal.Decimal]"
decimal.Decimal"decimal.Decimal"
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*≤
__eq__decimal.Decimal.__eq__"
builtins.bool"builtins.bool**
self"
decimal.Decimal"decimal.Decimal*+
other"
builtins.object"builtins.objectz35z36z37z38z39z310*—
__floordiv__decimal.Decimal.__floordiv__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*ò
__ge__decimal.Decimal.__ge__"
builtins.bool"builtins.bool**
self"
decimal.Decimal"decimal.Decimal*ê
otherÜ
ATypeAlias[Union[decimal.Decimal,builtins.float,numbers.Rational]]¶
6Union[decimal.Decimal,builtins.float,numbers.Rational]"
decimal.Decimal"decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"decimal._ComparableNumz35z36z37z38z39z310*ò
__gt__decimal.Decimal.__gt__"
builtins.bool"builtins.bool**
self"
decimal.Decimal"decimal.Decimal*ê
otherÜ
ATypeAlias[Union[decimal.Decimal,builtins.float,numbers.Rational]]¶
6Union[decimal.Decimal,builtins.float,numbers.Rational]"
decimal.Decimal"decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"decimal._ComparableNumz35z36z37z38z39z310*ò
__le__decimal.Decimal.__le__"
builtins.bool"builtins.bool**
self"
decimal.Decimal"decimal.Decimal*ê
otherÜ
ATypeAlias[Union[decimal.Decimal,builtins.float,numbers.Rational]]¶
6Union[decimal.Decimal,builtins.float,numbers.Rational]"
decimal.Decimal"decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"decimal._ComparableNumz35z36z37z38z39z310*ò
__lt__decimal.Decimal.__lt__"
builtins.bool"builtins.bool**
self"
decimal.Decimal"decimal.Decimal*ê
otherÜ
ATypeAlias[Union[decimal.Decimal,builtins.float,numbers.Rational]]¶
6Union[decimal.Decimal,builtins.float,numbers.Rational]"
decimal.Decimal"decimal.Decimal 
builtins.float"builtins.float$
numbers.Rational"numbers.Rational"decimal._ComparableNumz35z36z37z38z39z310*«
__mod__decimal.Decimal.__mod__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*«
__mul__decimal.Decimal.__mul__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*ã
__neg__decimal.Decimal.__neg__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ã
__pos__decimal.Decimal.__pos__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*Œ
__pow__decimal.Decimal.__pow__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*Ñ
modulox
(Union[decimal.Decimal,builtins.int,None]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int
None z35z36z37z38z39z310*…
__radd__decimal.Decimal.__radd__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*£
__rdivmod__decimal.Decimal.__rdivmod__"r
&Tuple[decimal.Decimal,decimal.Decimal]"
decimal.Decimal"decimal.Decimal"
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*”
__rfloordiv__decimal.Decimal.__rfloordiv__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*…
__rmod__decimal.Decimal.__rmod__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*…
__rmul__decimal.Decimal.__rmul__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*…
__rsub__decimal.Decimal.__rsub__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*—
__rtruediv__decimal.Decimal.__rtruediv__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*Ö
__str__decimal.Decimal.__str__"
builtins.str"builtins.str**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*«
__sub__decimal.Decimal.__sub__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*œ
__truediv__decimal.Decimal.__truediv__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimalz35z36z37z38z39z310*∑
remainder_neardecimal.Decimal.remainder_near""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*ç
	__float__decimal.Decimal.__float__" 
builtins.float"builtins.float**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*Ö
__int__decimal.Decimal.__int__"
builtins.int"builtins.int**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ã
	__trunc__decimal.Decimal.__trunc__"
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ï
realdecimal.Decimal.real""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal0:property`z35z36z37z38z39z310*ï
imagdecimal.Decimal.imag""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal0:property`z35z36z37z38z39z310*ë
	conjugatedecimal.Decimal.conjugate""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ï
__complex__decimal.Decimal.__complex__"$
builtins.complex"builtins.complex**
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ã
	__floor__decimal.Decimal.__floor__"
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*â
__ceil__decimal.Decimal.__ceil__"
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ﬂ
fmadecimal.Decimal.fma""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*ª
thirdØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*•
__rpow__decimal.Decimal.__rpow__""
decimal.Decimal"decimal.Decimal**
self"
decimal.Decimal"decimal.Decimal*π
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*Z
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ô
	normalizedecimal.Decimal.normalize""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*ˇ
quantizedecimal.Decimal.quantize""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*π
expØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ø
same_quantumdecimal.Decimal.same_quantum"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*’
to_integral_exact!decimal.Decimal.to_integral_exact""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*’
to_integral_value!decimal.Decimal.to_integral_value""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*…
to_integraldecimal.Decimal.to_integral""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*T
roundingD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Â
sqrtdecimal.Decimal.sqrt""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*°
maxdecimal.Decimal.max""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*°
mindecimal.Decimal.min""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*â
adjusteddecimal.Decimal.adjusted"
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ë
	canonicaldecimal.Decimal.canonical""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*∑
compare_signaldecimal.Decimal.compare_signal""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*µ
compare_totaldecimal.Decimal.compare_total""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ω
compare_total_mag!decimal.Decimal.compare_total_mag""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*è
copy_absdecimal.Decimal.copy_abs""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ï
copy_negatedecimal.Decimal.copy_negate""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*≠
	copy_signdecimal.Decimal.copy_sign""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*„
expdecimal.Decimal.exp""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*ì
is_canonicaldecimal.Decimal.is_canonical"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ç
	is_finitedecimal.Decimal.is_finite"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ë
is_infinitedecimal.Decimal.is_infinite"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*á
is_nandecimal.Decimal.is_nan"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*Î
	is_normaldecimal.Decimal.is_normal"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*â
is_qnandecimal.Decimal.is_qnan"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ç
	is_signeddecimal.Decimal.is_signed"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*â
is_snandecimal.Decimal.is_snan"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*Ò
is_subnormaldecimal.Decimal.is_subnormal"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*â
is_zerodecimal.Decimal.is_zero"
builtins.bool"builtins.bool*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*·
lndecimal.Decimal.ln""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Á
log10decimal.Decimal.log10""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Â
logbdecimal.Decimal.logb""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*±
logical_anddecimal.Decimal.logical_and""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*˘
logical_invertdecimal.Decimal.logical_invert""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ø

logical_ordecimal.Decimal.logical_or""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*±
logical_xordecimal.Decimal.logical_xor""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*©
max_magdecimal.Decimal.max_mag""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*©
min_magdecimal.Decimal.min_mag""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ò

next_minusdecimal.Decimal.next_minus""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ô
	next_plusdecimal.Decimal.next_plus""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*±
next_towarddecimal.Decimal.next_toward""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*Ô
number_classdecimal.Decimal.number_class"
builtins.str"builtins.str*,
self"
decimal.Decimal"decimal.Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*â
radixdecimal.Decimal.radix""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*ß
rotatedecimal.Decimal.rotate""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*ß
scalebdecimal.Decimal.scaleb""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*•
shiftdecimal.Decimal.shift""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*ª
otherØ
.TypeAlias[Union[decimal.Decimal,builtins.int]]i
#Union[decimal.Decimal,builtins.int]"
decimal.Decimal"decimal.Decimal
builtins.int"builtins.int"decimal._Decimal*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z310*ú

__reduce__decimal.Decimal.__reduce__"™
0Tuple[Type[decimal.Decimal],Tuple[builtins.str]]=
Type[decimal.Decimal]"
decimal.Decimal"decimal.Decimal5
Tuple[builtins.str]
builtins.str"builtins.str*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*è
__copy__decimal.Decimal.__copy__""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimalz35z36z37z38z39z310*™
__deepcopy__decimal.Decimal.__deepcopy__""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*
memo
Anyz35z36z37z38z39z310*ò

__format__decimal.Decimal.__format__"
builtins.str"builtins.str*,
self"
decimal.Decimal"decimal.Decimal*+
	specifier
builtins.str"builtins.str*\
contextM
Union[decimal.Context,None]"
decimal.Context"decimal.Context
None z35z36z37z38z39z3102ˆ
	__round__decimal.Decimal.__round__Ä
	__round__decimal.Decimal.__round__"
builtins.int"builtins.int*,
self"
decimal.Decimal"decimal.Decimal0:overloadX±
	__round__decimal.Decimal.__round__""
decimal.Decimal"decimal.Decimal*,
self"
decimal.Decimal"decimal.Decimal*)
ndigits
builtins.int"builtins.int0:overloadX"35"36"37"38"39"310j35j36j37j38j39j310–Ñ
Fractionfractions.Fraction"numbers.Rational*˘

from_floatfractions.Fraction.from_float"(
fractions.Fraction"fractions.Fraction*O
clsF
Type[fractions.Fraction](
fractions.Fraction"fractions.Fraction*'
f 
builtins.float"builtins.float0:classmethodpz35z36z37z38z39z310*Å
from_decimalfractions.Fraction.from_decimal"(
fractions.Fraction"fractions.Fraction*O
clsF
Type[fractions.Fraction](
fractions.Fraction"fractions.Fraction*+
dec"
decimal.Decimal"decimal.Decimal0:classmethodpz35z36z37z38z39z310*Â
limit_denominator$fractions.Fraction.limit_denominator"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction*3
max_denominator
builtins.int"builtins.int z35z36z37z38z39z310*¢
	numeratorfractions.Fraction.numerator"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fraction0:property`z35z36z37z38z39z310*¶
denominatorfractions.Fraction.denominator"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fraction0:property`z35z36z37z38z39z310*ö
__pos__fractions.Fraction.__pos__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*ö
__neg__fractions.Fraction.__neg__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*ö
__abs__fractions.Fraction.__abs__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*î
	__trunc__fractions.Fraction.__trunc__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*î
	__floor__fractions.Fraction.__floor__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*í
__ceil__fractions.Fraction.__ceil__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*í
__hash__fractions.Fraction.__hash__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*ª
__eq__fractions.Fraction.__eq__"
builtins.bool"builtins.bool*0
self(
fractions.Fraction"fractions.Fraction*+
other"
builtins.object"builtins.objectz35z36z37z38z39z310*À
__lt__fractions.Fraction.__lt__"
builtins.bool"builtins.bool*0
self(
fractions.Fraction"fractions.Fraction*∫
other∞
JTypeAlias[Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]]≈
?Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz35z36z37z38z39z310*À
__gt__fractions.Fraction.__gt__"
builtins.bool"builtins.bool*0
self(
fractions.Fraction"fractions.Fraction*∫
other∞
JTypeAlias[Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]]≈
?Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz35z36z37z38z39z310*À
__le__fractions.Fraction.__le__"
builtins.bool"builtins.bool*0
self(
fractions.Fraction"fractions.Fraction*∫
other∞
JTypeAlias[Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]]≈
?Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz35z36z37z38z39z310*À
__ge__fractions.Fraction.__ge__"
builtins.bool"builtins.bool*0
self(
fractions.Fraction"fractions.Fraction*∫
other∞
JTypeAlias[Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]]≈
?Union[builtins.int,builtins.float,decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz35z36z37z38z39z310*î
__bool__fractions.Fraction.__bool__"
builtins.bool"builtins.bool*2
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*§
realfractions.Fraction.real"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction0:property`z35z36z37z38z39z310*≥
imagfractions.Fraction.imag"7
Literal[builtins.int]	
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fraction0:property`z35z36z37z38z39z310*†
	conjugatefractions.Fraction.conjugate"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fractionz35z36z37z38z39z310*⁄
as_integer_ratio#fractions.Fraction.as_integer_ratio"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz38z39z3102—
__new__fractions.Fraction.__new__∫
__new__fractions.Fraction.__new__"
fractions._T*1
cls(
Type[fractions._T]
fractions._T*}
	numeratorl
$Union[builtins.int,numbers.Rational]
builtins.int"builtins.int$
numbers.Rational"numbers.Rational *é
denominator{
)Union[builtins.int,numbers.Rational,None]
builtins.int"builtins.int$
numbers.Rational"numbers.Rational
None *0

_normalize
builtins.bool"builtins.bool 0:overloadX”
__new__fractions.Fraction.__new__"
fractions._T*1
cls(
Type[fractions._T]
fractions._T*¶
__valueö
2Union[builtins.float,decimal.Decimal,builtins.str] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal
builtins.str"builtins.str*0

_normalize
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39"3102ø
__add__fractions.Fraction.__add__å
__add__fractions.Fraction.__add__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX≤
__add__fractions.Fraction.__add__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX∫
__add__fractions.Fraction.__add__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102«
__radd__fractions.Fraction.__radd__é
__radd__fractions.Fraction.__radd__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX¥
__radd__fractions.Fraction.__radd__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadXº
__radd__fractions.Fraction.__radd__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102ø
__sub__fractions.Fraction.__sub__å
__sub__fractions.Fraction.__sub__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX≤
__sub__fractions.Fraction.__sub__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX∫
__sub__fractions.Fraction.__sub__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102«
__rsub__fractions.Fraction.__rsub__é
__rsub__fractions.Fraction.__rsub__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX¥
__rsub__fractions.Fraction.__rsub__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadXº
__rsub__fractions.Fraction.__rsub__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102ø
__mul__fractions.Fraction.__mul__å
__mul__fractions.Fraction.__mul__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX≤
__mul__fractions.Fraction.__mul__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX∫
__mul__fractions.Fraction.__mul__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102«
__rmul__fractions.Fraction.__rmul__é
__rmul__fractions.Fraction.__rmul__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX¥
__rmul__fractions.Fraction.__rmul__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadXº
__rmul__fractions.Fraction.__rmul__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102ﬂ
__truediv__fractions.Fraction.__truediv__î
__truediv__fractions.Fraction.__truediv__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX∫
__truediv__fractions.Fraction.__truediv__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX¬
__truediv__fractions.Fraction.__truediv__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102Á
__rtruediv__fractions.Fraction.__rtruediv__ñ
__rtruediv__fractions.Fraction.__rtruediv__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadXº
__rtruediv__fractions.Fraction.__rtruediv__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadXƒ
__rtruediv__fractions.Fraction.__rtruediv__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102î
__floordiv__fractions.Fraction.__floordiv__ä
__floordiv__fractions.Fraction.__floordiv__"
builtins.int"builtins.int*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadXº
__floordiv__fractions.Fraction.__floordiv__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102ö
__rfloordiv__ fractions.Fraction.__rfloordiv__å
__rfloordiv__ fractions.Fraction.__rfloordiv__"
builtins.int"builtins.int*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadXæ
__rfloordiv__ fractions.Fraction.__rfloordiv__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102Ç
__mod__fractions.Fraction.__mod__å
__mod__fractions.Fraction.__mod__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX≤
__mod__fractions.Fraction.__mod__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102à
__rmod__fractions.Fraction.__rmod__é
__rmod__fractions.Fraction.__rmod__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadX¥
__rmod__fractions.Fraction.__rmod__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102∂

__divmod__fractions.Fraction.__divmod__‹

__divmod__fractions.Fraction.__divmod__"r
&Tuple[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*{
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadXê

__divmod__fractions.Fraction.__divmod__"x
(Tuple[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*)
other 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102ƒ
__rdivmod__fractions.Fraction.__rdivmod__‚
__rdivmod__fractions.Fraction.__rdivmod__"r
&Tuple[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction*}
otherr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:overloadXñ
__rdivmod__fractions.Fraction.__rdivmod__"x
(Tuple[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction*+
other 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102¬
__pow__fractions.Fraction.__pow__∂
__pow__fractions.Fraction.__pow__"(
fractions.Fraction"fractions.Fraction*0
self(
fractions.Fraction"fractions.Fraction*%
other
builtins.int"builtins.int0:overloadXã
__pow__fractions.Fraction.__pow__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*Å
otherx
(Union[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction0:overloadX∫
__pow__fractions.Fraction.__pow__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102ª
__rpow__fractions.Fraction.__rpow__π
__rpow__fractions.Fraction.__rpow__" 
builtins.float"builtins.float*0
self(
fractions.Fraction"fractions.Fraction*≠
other£
5Union[builtins.int,builtins.float,fractions.Fraction]
builtins.int"builtins.int 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction0:overloadXº
__rpow__fractions.Fraction.__rpow__"$
builtins.complex"builtins.complex*0
self(
fractions.Fraction"fractions.Fraction*-
other$
builtins.complex"builtins.complex0:overloadX"35"36"37"38"39"3102™
	__round__fractions.Fraction.__round__¢
	__round__fractions.Fraction.__round__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fraction*
ndigits
None 0:overloadX¿
	__round__fractions.Fraction.__round__"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction*)
ndigits
builtins.int"builtins.int0:overloadX"35"36"37"38"39"310j35j36j37j38j39j310¯
Hashabletyping.Hashable"builtins.object*ù
__hash__typing.Hashable.__hash__"
builtins.int"builtins.int*,
self"
typing.Hashable"typing.Hashable0:abstractmethod@z35z36z37z38z39z3108@Xbabc.ABCMetaj35j36j37j38j39j310Ø
Iterabletyping.Iterable"builtins.object*·
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z35z36z37z38z39z3108PXj35j36j37j38j39j310Ô

NamedTupletyping.NamedTuple"builtins.tuple*Ã
__init__typing.NamedTuple.__init__"
None*0
self&
typing.NamedTuple"typing.NamedTuple**
typename
builtins.str"builtins.str*ç
fields
(typing.Iterable[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterable *
kwargs
Anyz35z36z37z38z39z310*∆
_maketyping.NamedTuple._make"
	typing._T*+
cls"
Type[typing._T]
	typing._T*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:classmethodpz35z36z37z38z39z310*œ
_asdicttyping.NamedTuple._asdict"k
)collections.OrderedDict[builtins.str,Any]
builtins.str"builtins.str
Any"collections.OrderedDict*0
self&
typing.NamedTuple"typing.NamedTuplez35z36z37*º
_asdicttyping.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
typing.NamedTuple"typing.NamedTuplez38z39z310*|
_replacetyping.NamedTuple._replace"
	typing._T*
self
	typing._T*
kwargs
Anyz35z36z37z38z39z310j35j36j37j38j39j310¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310ï
SupportsFloattyping.SupportsFloat"builtins.object*∞
	__float__typing.SupportsFloat.__float__" 
builtins.float"builtins.float*4
self,
typing.SupportsFloat"typing.SupportsFloat0:abstractmethod@z35z36z37z38z39z3108@Xbabc.ABCMetaj35j36j37j38j39j310‰
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310[
StatisticsErrorstatistics.StatisticsError"builtins.ValueErrorj35j36j37j38j39j310Á#

NormalDiststatistics.NormalDist"builtins.object*÷
__init__statistics.NormalDist.__init__"
None*8
self.
statistics.NormalDist"statistics.NormalDist**
mu 
builtins.float"builtins.float *-
sigma 
builtins.float"builtins.float z38z39z310*ô
meanstatistics.NormalDist.mean" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist0:property`z38z39z310*ù
medianstatistics.NormalDist.median" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist0:property`z38z39z310*ô
modestatistics.NormalDist.mode" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist0:property`z38z39z310*õ
stdevstatistics.NormalDist.stdev" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist0:property`z38z39z310*°
variancestatistics.NormalDist.variance" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist0:property`z38z39z310*ä
from_samples"statistics.NormalDist.from_samples"
statistics._T*3
cls*
Type[statistics._T]
statistics._T*p
dataf
%typing.Iterable[typing.SupportsFloat],
typing.SupportsFloat"typing.SupportsFloat"typing.Iterable0:classmethodpz38z39z310*ö
samplesstatistics.NormalDist.samples"P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list*8
self.
statistics.NormalDist"statistics.NormalDist*#
n
builtins.int"builtins.int*2
seed&
Union[Any,None]
Any
None z38z39z310*≤
pdfstatistics.NormalDist.pdf" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist*'
x 
builtins.float"builtins.floatz38z39z310*≤
cdfstatistics.NormalDist.cdf" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist*'
x 
builtins.float"builtins.floatz38z39z310*∫
inv_cdfstatistics.NormalDist.inv_cdf" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist*'
p 
builtins.float"builtins.floatz38z39z310*Ã
overlapstatistics.NormalDist.overlap" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist*9
other.
statistics.NormalDist"statistics.NormalDistz38z39z310*Ï
	quantilesstatistics.NormalDist.quantiles"P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list*8
self.
statistics.NormalDist"statistics.NormalDist*%
n
builtins.int"builtins.int z38z39z310*®
__add__statistics.NormalDist.__add__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDist*à
x2Å
+Union[builtins.float,statistics.NormalDist] 
builtins.float"builtins.float.
statistics.NormalDist"statistics.NormalDistz38z39z310*®
__sub__statistics.NormalDist.__sub__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDist*à
x2Å
+Union[builtins.float,statistics.NormalDist] 
builtins.float"builtins.float.
statistics.NormalDist"statistics.NormalDistz38z39z310*≈
__mul__statistics.NormalDist.__mul__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDist*&
x2 
builtins.float"builtins.floatz38z39z310*Õ
__truediv__!statistics.NormalDist.__truediv__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDist*&
x2 
builtins.float"builtins.floatz38z39z310*ù
__pos__statistics.NormalDist.__pos__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDistz38z39z310*ù
__neg__statistics.NormalDist.__neg__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDistz38z39z310*™
__rsub__statistics.NormalDist.__rsub__".
statistics.NormalDist"statistics.NormalDist*6
self.
statistics.NormalDist"statistics.NormalDist*à
x2Å
+Union[builtins.float,statistics.NormalDist] 
builtins.float"builtins.float.
statistics.NormalDist"statistics.NormalDistz38z39z310*è
__hash__statistics.NormalDist.__hash__"
builtins.int"builtins.int*8
self.
statistics.NormalDist"statistics.NormalDistz38z39z310*¥
zscorestatistics.NormalDist.zscore" 
builtins.float"builtins.float*8
self.
statistics.NormalDist"statistics.NormalDist*'
x 
builtins.float"builtins.floatz39z310j38j39j310Ø
LinearRegressionstatistics.LinearRegression"builtins.tuple*Ï
_replace$statistics.LinearRegression._replace"#
statistics.LinearRegression._NT*.
_self#
statistics.LinearRegression._NT*1
	intercept 
builtins.float"builtins.float *-
slope 
builtins.float"builtins.float z310*ê
__new__#statistics.LinearRegression.__new__"#
statistics.LinearRegression._NT*X
_clsN
%Type[statistics.LinearRegression._NT]#
statistics.LinearRegression._NT*/
	intercept 
builtins.float"builtins.float*+
slope 
builtins.float"builtins.floatz310*º
_asdict#statistics.LinearRegression._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*.
_self#
statistics.LinearRegression._NTz310*ß
_make!statistics.LinearRegression._make"#
statistics.LinearRegression._NT*X
_clsN
%Type[statistics.LinearRegression._NT]#
statistics.LinearRegression._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz310j310•
meanstatistics.mean"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterablez35z36z37z38z39z310≤
harmonic_meanstatistics.harmonic_mean"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterablez35z36z37z38z39õ
harmonic_meanstatistics.harmonic_mean"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*ı
weightsÂ
`Union[typing.Iterable[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]],None]Ù
Ttyping.Iterable[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Iterable
None z310©
medianstatistics.median"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterablez35z36z37z38z39z310…

median_lowstatistics.median_low"
_typeshed.SupportsLessThanT*j
data`
,typing.Iterable[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Iterablez35z36z37z38z39z310À
median_highstatistics.median_high"
_typeshed.SupportsLessThanT*j
data`
,typing.Iterable[_typeshed.SupportsLessThanT]
_typeshed.SupportsLessThanT"typing.Iterablez35z36z37z38z39z310‚
median_groupedstatistics.median_grouped"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*'
interval
statistics._NumberT z35z36z37z38z39z310´
modestatistics.mode"
statistics._HashableT*^
dataT
&typing.Iterable[statistics._HashableT]
statistics._HashableT"typing.Iterablez35z36z37z38z39z310˚
pstdevstatistics.pstdev"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*P
muF
Union[statistics._NumberT,None]
statistics._NumberT
None z35z36z37z38z39z310Å
	pvariancestatistics.pvariance"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*P
muF
Union[statistics._NumberT,None]
statistics._NumberT
None z35z36z37z38z39z310˚
stdevstatistics.stdev"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*R
xbarF
Union[statistics._NumberT,None]
statistics._NumberT
None z35z36z37z38z39z310Å
variancestatistics.variance"
statistics._NumberT*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*R
xbarF
Union[statistics._NumberT,None]
statistics._NumberT
None z35z36z37z38z39z310∫
fmeanstatistics.fmean" 
builtins.float"builtins.float*p
dataf
%typing.Iterable[typing.SupportsFloat],
typing.SupportsFloat"typing.SupportsFloat"typing.Iterablez38z39z310Ã
geometric_meanstatistics.geometric_mean" 
builtins.float"builtins.float*p
dataf
%typing.Iterable[typing.SupportsFloat],
typing.SupportsFloat"typing.SupportsFloat"typing.Iterablez38z39z310‡
	multimodestatistics.multimode"P
$builtins.list[statistics._HashableT]
statistics._HashableT"builtins.list*^
dataT
&typing.Iterable[statistics._HashableT]
statistics._HashableT"typing.Iterablez38z39z310´
	quantilesstatistics.quantiles"L
"builtins.list[statistics._NumberT]
statistics._NumberT"builtins.list*Z
dataP
$typing.Iterable[statistics._NumberT]
statistics._NumberT"typing.Iterable*%
n
builtins.int"builtins.int **
method
builtins.str"builtins.str z38z39z310 
correlationstatistics.correlation" 
builtins.float"builtins.float*¸
__xÙ
Ttyping.Sequence[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Sequence*¸
__yÙ
Ttyping.Sequence[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Sequencez310»

covariancestatistics.covariance" 
builtins.float"builtins.float*¸
__xÙ
Ttyping.Sequence[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Sequence*¸
__yÙ
Ttyping.Sequence[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Sequencez310ª
linear_regressionstatistics.linear_regression"l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*Ñ
__regressorÙ
Ttyping.Sequence[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Sequence*ç
__dependent_variableÙ
Ttyping.Sequence[TypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]]ä
CTypeAlias[Union[builtins.float,decimal.Decimal,fractions.Fraction]]¨
8Union[builtins.float,decimal.Decimal,fractions.Fraction] 
builtins.float"builtins.float"
decimal.Decimal"decimal.Decimal(
fractions.Fraction"fractions.Fraction"statistics._Number"typing.Sequencez310*%
syssys *35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*X
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*Z
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310