
symtableâ
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310π
SymbolTablesymtable.SymbolTable"builtins.object*Ã
__init__symtable.SymbolTable.__init__"
None*6
self,
symtable.SymbolTable"symtable.SymbolTable*
	raw_table
Any**
filename
builtins.str"builtins.strz27z35z36z37z38z39z310*ú
get_typesymtable.SymbolTable.get_type"
builtins.str"builtins.str*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*ò
get_idsymtable.SymbolTable.get_id"
builtins.int"builtins.int*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*ú
get_namesymtable.SymbolTable.get_name"
builtins.str"builtins.str*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*†

get_linenosymtable.SymbolTable.get_lineno"
builtins.int"builtins.int*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*¶
is_optimized!symtable.SymbolTable.is_optimized"
builtins.bool"builtins.bool*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*†
	is_nestedsymtable.SymbolTable.is_nested"
builtins.bool"builtins.bool*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*¶
has_children!symtable.SymbolTable.has_children"
builtins.bool"builtins.bool*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*û
has_execsymtable.SymbolTable.has_exec"
builtins.bool"builtins.bool*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*ì
has_import_star$symtable.SymbolTable.has_import_star"
builtins.bool"builtins.bool*6
self,
symtable.SymbolTable"symtable.SymbolTablez27*‹
get_identifiers$symtable.SymbolTable.get_identifiers"N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*∆
lookupsymtable.SymbolTable.lookup""
symtable.Symbol"symtable.Symbol*6
self,
symtable.SymbolTable"symtable.SymbolTable*&
name
builtins.str"builtins.strz27z35z36z37z38z39z310*Ÿ
get_symbols symtable.SymbolTable.get_symbols"S
builtins.list[symtable.Symbol]"
symtable.Symbol"symtable.Symbol"builtins.list*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310*Í
get_children!symtable.SymbolTable.get_children"b
#builtins.list[symtable.SymbolTable],
symtable.SymbolTable"symtable.SymbolTable"builtins.list*6
self,
symtable.SymbolTable"symtable.SymbolTablez27z35z36z37z38z39z310j27j35j36j37j38j39j310Ä
Functionsymtable.Function"symtable.SymbolTable*œ
get_parameters symtable.Function.get_parameters"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*0
self&
symtable.Function"symtable.Functionz27z35z36z37z38z39z310*«

get_localssymtable.Function.get_locals"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*0
self&
symtable.Function"symtable.Functionz27z35z36z37z38z39z310*…
get_globalssymtable.Function.get_globals"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*0
self&
symtable.Function"symtable.Functionz27z35z36z37z38z39z310*≈
	get_freessymtable.Function.get_frees"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*0
self&
symtable.Function"symtable.Functionz27z35z36z37z38z39z310j27j35j36j37j38j39j310ç
Classsymtable.Class"symtable.SymbolTable*¿
get_methodssymtable.Class.get_methods"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple**
self 
symtable.Class"symtable.Classz27z35z36z37z38z39z310j27j35j36j37j38j39j310Ñ
Symbolsymtable.Symbol"builtins.object*˙
__init__symtable.Symbol.__init__"
None*,
self"
symtable.Symbol"symtable.Symbol*&
name
builtins.str"builtins.str*'
flags
builtins.int"builtins.int*∫

namespacesß
1Union[typing.Sequence[symtable.SymbolTable],None]f
%typing.Sequence[symtable.SymbolTable],
symtable.SymbolTable"symtable.SymbolTable"typing.Sequence
None z27z35z36z37*´
__init__symtable.Symbol.__init__"
None*,
self"
symtable.Symbol"symtable.Symbol*&
name
builtins.str"builtins.str*'
flags
builtins.int"builtins.int*∫

namespacesß
1Union[typing.Sequence[symtable.SymbolTable],None]f
%typing.Sequence[symtable.SymbolTable],
symtable.SymbolTable"symtable.SymbolTable"typing.Sequence
None *2
module_scope
builtins.bool"builtins.bool z38z39z310*ç
get_namesymtable.Symbol.get_name"
builtins.str"builtins.str*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ô
is_referencedsymtable.Symbol.is_referenced"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ó
is_parametersymtable.Symbol.is_parameter"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ë
	is_globalsymtable.Symbol.is_global"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*£
is_declared_global"symtable.Symbol.is_declared_global"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*è
is_localsymtable.Symbol.is_local"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ç
is_freesymtable.Symbol.is_free"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ï
is_importedsymtable.Symbol.is_imported"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ï
is_assignedsymtable.Symbol.is_assigned"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ó
is_namespacesymtable.Symbol.is_namespace"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*„
get_namespacessymtable.Symbol.get_namespaces"f
%typing.Sequence[symtable.SymbolTable],
symtable.SymbolTable"symtable.SymbolTable"typing.Sequence*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ß
get_namespacesymtable.Symbol.get_namespace",
symtable.SymbolTable"symtable.SymbolTable*,
self"
symtable.Symbol"symtable.Symbolz27z35z36z37z38z39z310*ì
is_annotatedsymtable.Symbol.is_annotated"
builtins.bool"builtins.bool*,
self"
symtable.Symbol"symtable.Symbolz35z36z37z38z39z310j27j35j36j37j38j39j310Î
symtablesymtable.symtable",
symtable.SymbolTable"symtable.SymbolTable*.
code$
builtins.unicode"builtins.unicode*2
filename$
builtins.unicode"builtins.unicode*6
compile_type$
builtins.unicode"builtins.unicodez27Ë
symtablesymtable.symtable",
symtable.SymbolTable"symtable.SymbolTable*&
code
builtins.str"builtins.str**
filename
builtins.str"builtins.str*.
compile_type
builtins.str"builtins.strz35z36z37z38z39z310*R
Any
typing.Any"
builtins.object"builtins.object*27*35*36*37*38*39*310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*%
syssys *35*36*37*38*39*310