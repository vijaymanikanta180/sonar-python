
tempfile¨%
Randomrandom.Random"_random.Random*á
__init__random.Random.__init__"
None*(
self
random.Random"random.Random*+
x"
builtins.object"builtins.object z27*
seedrandom.Random.seed"
None*(
self
random.Random"random.Random*+
x"
builtins.object"builtins.object z27*‹
getstaterandom.Random.getstate"â
'TypeAlias[builtins.tuple[builtins.int]]L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple"_random._State*(
self
random.Random"random.Randomz27*Ú
setstaterandom.Random.setstate"
None*(
self
random.Random"random.Random*ï
stateâ
'TypeAlias[builtins.tuple[builtins.int]]L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple"_random._Statez27*Å
	jumpaheadrandom.Random.jumpahead"
None*(
self
random.Random"random.Random*#
n
builtins.int"builtins.intz27*ô
getrandbitsrandom.Random.getrandbits"
builtins.int"builtins.int*(
self
random.Random"random.Random*#
k
builtins.int"builtins.intz27*∂
randintrandom.Random.randint"
builtins.int"builtins.int*(
self
random.Random"random.Random*#
a
builtins.int"builtins.int*#
b
builtins.int"builtins.intz27*¢
choicerandom.Random.choice"
	random._T*(
self
random.Random"random.Random*E
seq<
typing.Sequence[random._T]
	random._T"typing.Sequencez27*˙
shufflerandom.Random.shuffle"
None*(
self
random.Random"random.Random*E
x>
typing.MutableSequence[Any]
Any"typing.MutableSequence*Y
randomK
CallableType[builtins.function]&
builtins.function"builtins.function z27*ˇ
samplerandom.Random.sample"8
builtins.list[random._T]
	random._T"builtins.list*(
self
random.Random"random.Random*R

populationB
random._Sampleable[random._T]
	random._T"random._Sampleable*#
k
builtins.int"builtins.intz27*n
randomrandom.Random.random" 
builtins.float"builtins.float*(
self
random.Random"random.Randomz27*¬
uniformrandom.Random.uniform" 
builtins.float"builtins.float*(
self
random.Random"random.Random*'
a 
builtins.float"builtins.float*'
b 
builtins.float"builtins.floatz27*ˇ

triangularrandom.Random.triangular" 
builtins.float"builtins.float*(
self
random.Random"random.Random*+
low 
builtins.float"builtins.float *,
high 
builtins.float"builtins.float *,
mode 
builtins.float"builtins.float z27*—
betavariaterandom.Random.betavariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*+
alpha 
builtins.float"builtins.float**
beta 
builtins.float"builtins.floatz27*•
expovariaterandom.Random.expovariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*+
lambd 
builtins.float"builtins.floatz27*”
gammavariaterandom.Random.gammavariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*+
alpha 
builtins.float"builtins.float**
beta 
builtins.float"builtins.floatz27*√
gaussrandom.Random.gauss" 
builtins.float"builtins.float*(
self
random.Random"random.Random*(
mu 
builtins.float"builtins.float*+
sigma 
builtins.float"builtins.floatz27*’
lognormvariaterandom.Random.lognormvariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*(
mu 
builtins.float"builtins.float*+
sigma 
builtins.float"builtins.floatz27*”
normalvariaterandom.Random.normalvariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*(
mu 
builtins.float"builtins.float*+
sigma 
builtins.float"builtins.floatz27*◊
vonmisesvariaterandom.Random.vonmisesvariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*(
mu 
builtins.float"builtins.float*+
kappa 
builtins.float"builtins.floatz27*©
paretovariaterandom.Random.paretovariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*+
alpha 
builtins.float"builtins.floatz27*◊
weibullvariaterandom.Random.weibullvariate" 
builtins.float"builtins.float*(
self
random.Random"random.Random*+
alpha 
builtins.float"builtins.float**
beta 
builtins.float"builtins.floatz272≈
	randrangerandom.Random.randrange¢
	randrangerandom.Random.randrange"
builtins.int"builtins.int*(
self
random.Random"random.Random*&
stop
builtins.int"builtins.int0:overloadXı
	randrangerandom.Random.randrange"
builtins.int"builtins.int*(
self
random.Random"random.Random*'
start
builtins.int"builtins.int*&
stop
builtins.int"builtins.int*(
step
builtins.int"builtins.int 0:overloadX"27j27’
LockTypethread.LockType"builtins.object*¢
acquirethread.LockType.acquire"
builtins.bool"builtins.bool*,
self"
thread.LockType"thread.LockType*,
waitflag
builtins.int"builtins.int z27*¨
acquire_lockthread.LockType.acquire_lock"
builtins.bool"builtins.bool*,
self"
thread.LockType"thread.LockType*,
waitflag
builtins.int"builtins.int z27*^
releasethread.LockType.release"
None*,
self"
thread.LockType"thread.LockTypez27*h
release_lockthread.LockType.release_lock"
None*,
self"
thread.LockType"thread.LockTypez27*r
lockedthread.LockType.locked"
builtins.bool"builtins.bool*,
self"
thread.LockType"thread.LockTypez27*|
locked_lockthread.LockType.locked_lock"
builtins.bool"builtins.bool*,
self"
thread.LockType"thread.LockTypez27*z
	__enter__thread.LockType.__enter__""
thread.LockType"thread.LockType**
self"
thread.LockType"thread.LockTypez27*ñ
__exit__thread.LockType.__exit__"
None**
self"
thread.LockType"thread.LockType*
typ
Any*
value
Any*
	traceback
Anyz27j27ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310∑
Iterabletyping.Iterable"builtins.object*Â
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z3108PXj27j35j36j37j38j39j310Ó
Iteratortyping.Iterator"typing.Iterable*î
nexttyping.Iterator.next"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z27*—
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz27z35z36z37z38z39z310*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z3108PXj27j35j36j37j38j39j310Ó
_RandomNameSequencetempfile._RandomNameSequence"builtins.object*°
rng tempfile._RandomNameSequence.rng"
random.Random"random.Random*F
self<
tempfile._RandomNameSequence"tempfile._RandomNameSequence0:property`z27*π
__iter__%tempfile._RandomNameSequence.__iter__"<
tempfile._RandomNameSequence"tempfile._RandomNameSequence*D
self<
tempfile._RandomNameSequence"tempfile._RandomNameSequencez27*ì
next!tempfile._RandomNameSequence.next"
builtins.str"builtins.str*F
self<
tempfile._RandomNameSequence"tempfile._RandomNameSequencez27*≠
normcase%tempfile._RandomNameSequence.normcase"
typing.AnyStr*F
self<
tempfile._RandomNameSequence"tempfile._RandomNameSequence*
path
typing.AnyStrz27j27∫#
_TemporaryFileWrappertempfile._TemporaryFileWrapper"	typing.IO*ú
__init__'tempfile._TemporaryFileWrapper.__init__"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*
name
Any*,
delete
builtins.bool"builtins.bool z27*â
__del__&tempfile._TemporaryFileWrapper.__del__"
None*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*≈
	__enter__(tempfile._TemporaryFileWrapper.__enter__"@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*˚
__exit__'tempfile._TemporaryFileWrapper.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*
exc
Any*
value
Any*
tb
Anyz27*æ
__getattr__*tempfile._TemporaryFileWrapper.__getattr__"
Any*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*,
name$
builtins.unicode"builtins.unicodez27*á
close$tempfile._TemporaryFileWrapper.close"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*π
unlink%tempfile._TemporaryFileWrapper.unlink"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*.
path$
builtins.unicode"builtins.unicodez27*—
__iter__'tempfile._TemporaryFileWrapper.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*H
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*ù
fileno%tempfile._TemporaryFileWrapper.fileno"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*á
flush$tempfile._TemporaryFileWrapper.flush"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*ü
isatty%tempfile._TemporaryFileWrapper.isatty"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*ô
next#tempfile._TemporaryFileWrapper.next"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*¿
read#tempfile._TemporaryFileWrapper.read"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*%
n
builtins.int"builtins.int z27*£
readable'tempfile._TemporaryFileWrapper.readable"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*Ã
readline'tempfile._TemporaryFileWrapper.readline"
builtins.str"builtins.str*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*)
limit
builtins.int"builtins.int z27*˚
	readlines(tempfile._TemporaryFileWrapper.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*(
hint
builtins.int"builtins.int z27*Ô
seek#tempfile._TemporaryFileWrapper.seek"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z27*£
seekable'tempfile._TemporaryFileWrapper.seekable"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*ô
tell#tempfile._TemporaryFileWrapper.tell"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*Û
truncate'tempfile._TemporaryFileWrapper.truncate"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*£
writable'tempfile._TemporaryFileWrapper.writable"
builtins.bool"builtins.bool*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapperz27*»
write$tempfile._TemporaryFileWrapper.write"
builtins.int"builtins.int*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*+
s$
builtins.unicode"builtins.unicodez27*Ï

writelines)tempfile._TemporaryFileWrapper.writelines"
None*J
self@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*Y
linesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterablez27j27ô,
_TemporaryFileWrappertempfile._TemporaryFileWrapper"	typing.IO*ﬁ
__init__'tempfile._TemporaryFileWrapper.__init__"
None*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*B
file8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*&
name
builtins.str"builtins.str*,
delete
builtins.bool"builtins.bool z35z36z37z38z39z310*û
	__enter__(tempfile._TemporaryFileWrapper.__enter__"b
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*j
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*‰
__exit__'tempfile._TemporaryFileWrapper.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*j
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*í
excä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*_
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*Ì
__getattr__*tempfile._TemporaryFileWrapper.__getattr__"
Any*j
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*$
name
builtins.str"builtins.strz35z36z37z38z39z310*æ
close$tempfile._TemporaryFileWrapper.close"
None*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*˛
__iter__'tempfile._TemporaryFileWrapper.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*j
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*Õ
__next__'tempfile._TemporaryFileWrapper.__next__"
typing.AnyStr*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*‘
fileno%tempfile._TemporaryFileWrapper.fileno"
builtins.int"builtins.int*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*æ
flush$tempfile._TemporaryFileWrapper.flush"
None*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*÷
isatty%tempfile._TemporaryFileWrapper.isatty"
builtins.bool"builtins.bool*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*Ï
read#tempfile._TemporaryFileWrapper.read"
typing.AnyStr*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*%
n
builtins.int"builtins.int z35z36z37z38z39z310*⁄
readable'tempfile._TemporaryFileWrapper.readable"
builtins.bool"builtins.bool*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*¯
readline'tempfile._TemporaryFileWrapper.readline"
typing.AnyStr*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*)
limit
builtins.int"builtins.int z35z36z37z38z39z310*®
	readlines(tempfile._TemporaryFileWrapper.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*(
hint
builtins.int"builtins.int z35z36z37z38z39z310*¶
seek#tempfile._TemporaryFileWrapper.seek"
builtins.int"builtins.int*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z35z36z37z38z39z310*⁄
seekable'tempfile._TemporaryFileWrapper.seekable"
builtins.bool"builtins.bool*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*–
tell#tempfile._TemporaryFileWrapper.tell"
builtins.int"builtins.int*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*™
truncate'tempfile._TemporaryFileWrapper.truncate"
builtins.int"builtins.int*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*⁄
writable'tempfile._TemporaryFileWrapper.writable"
builtins.bool"builtins.bool*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapperz35z36z37z38z39z310*Ï
write$tempfile._TemporaryFileWrapper.write"
builtins.int"builtins.int*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*
s
typing.AnyStrz35z36z37z38z39z310*ô

writelines)tempfile._TemporaryFileWrapper.writelines"
None*l
selfb
-tempfile._TemporaryFileWrapper[typing.AnyStr]
typing.AnyStr"tempfile._TemporaryFileWrapper*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterablez35z36z37z38z39z310Pj35j36j37j38j39j310á
TemporaryDirectorytempfile.TemporaryDirectory"builtins.object*ı
__init__$tempfile.TemporaryDirectory.__init__"
None*D
self:
tempfile.TemporaryDirectory"tempfile.TemporaryDirectory*z
suffixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *z
prefixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *w
dirl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode z27*Ç
cleanup#tempfile.TemporaryDirectory.cleanup"
None*D
self:
tempfile.TemporaryDirectory"tempfile.TemporaryDirectoryz27*É
	__enter__%tempfile.TemporaryDirectory.__enter__"
Any*B
self:
tempfile.TemporaryDirectory"tempfile.TemporaryDirectoryz27*ª
__exit__$tempfile.TemporaryDirectory.__exit__"
None*B
self:
tempfile.TemporaryDirectory"tempfile.TemporaryDirectory*
type
Any*
value
Any*
	traceback
Anyz27j27Ì
TemporaryDirectorytempfile.TemporaryDirectory"builtins.object*π
cleanup#tempfile.TemporaryDirectory.cleanup"
None*f
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectoryz35z36z37z38z39z310*ƒ
	__enter__%tempfile.TemporaryDirectory.__enter__"
typing.AnyStr*d
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectoryz35z36z37z38z39z310*ß
__exit__$tempfile.TemporaryDirectory.__exit__"
None*d
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*©
__class_getitem__-tempfile.TemporaryDirectory.__class_getitem__"(
types.GenericAlias"types.GenericAlias*ú
clsí
0Type[tempfile.TemporaryDirectory[typing.AnyStr]]\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*
item
Anypz39z3102¥
__init__$tempfile.TemporaryDirectory.__init__ˇ
__init__$tempfile.TemporaryDirectory.__init__"
None*p
selff
)tempfile.TemporaryDirectory[builtins.str]
builtins.str"builtins.str"tempfile.TemporaryDirectory*
suffix
None *
prefix
None *
dir
None 0:overloadXÊ
__init__$tempfile.TemporaryDirectory.__init__"
None*f
self\
*tempfile.TemporaryDirectory[typing.AnyStr]
typing.AnyStr"tempfile.TemporaryDirectory*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX"35"36"37"38"39"310Pj35j36j37j38j39j310á	
TracebackTypetypes.TracebackType"builtins.object*Õ
tb_nexttypes.TracebackType.tb_next"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*4
self*
types.TracebackType"types.TracebackType0:property`z35z36*©
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*£
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*•
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*Ï
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.intz37z38z39z310j35j36j37j38j39j310‰
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310◊l
SpooledTemporaryFiletempfile.SpooledTemporaryFile"	typing.IO*¡
rollover&tempfile.SpooledTemporaryFile.rollover"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*w
	__enter__'tempfile.SpooledTemporaryFile.__enter__"
tempfile._S*
self
tempfile._Sz35z36z37z38z39z310*Ï
__exit__&tempfile.SpooledTemporaryFile.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*h
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez35z36z37z38z39z310*ª
close#tempfile.SpooledTemporaryFile.close"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*—
fileno$tempfile.SpooledTemporaryFile.fileno"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*ª
flush#tempfile.SpooledTemporaryFile.flush"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*”
isatty$tempfile.SpooledTemporaryFile.isatty"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*È
read"tempfile.SpooledTemporaryFile.read"
typing.AnyStr*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*%
n
builtins.int"builtins.int z35z36z37z38z39z310*ı
readline&tempfile.SpooledTemporaryFile.readline"
typing.AnyStr*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*)
limit
builtins.int"builtins.int z35z36z37z38z39z310*•
	readlines'tempfile.SpooledTemporaryFile.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*(
hint
builtins.int"builtins.int z35z36z37z38z39z310*£
seek"tempfile.SpooledTemporaryFile.seek"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int z35z36z37z38z39z310*Õ
tell"tempfile.SpooledTemporaryFile.tell"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*ß
truncate&tempfile.SpooledTemporaryFile.truncate"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*È
write#tempfile.SpooledTemporaryFile.write"
builtins.int"builtins.int*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*
s
typing.AnyStrz35z36z37z38z39z310*ô

writelines(tempfile.SpooledTemporaryFile.writelines"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*R
iterableD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterablez35z36z37z38z39z310*˚
__iter__&tempfile.SpooledTemporaryFile.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*h
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*◊
readable&tempfile.SpooledTemporaryFile.readable"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*◊
seekable&tempfile.SpooledTemporaryFile.seekable"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*◊
writable&tempfile.SpooledTemporaryFile.writable"
builtins.bool"builtins.bool*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310* 
__next__&tempfile.SpooledTemporaryFile.__next__"
typing.AnyStr*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFilez35z36z37z38z39z310*˚
errors$tempfile.SpooledTemporaryFile.errors"D
Union[builtins.str,None]
builtins.str"builtins.str
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile0:property`z38z39z3102Œ 
__init__&tempfile.SpooledTemporaryFile.__init__⁄

__init__&tempfile.SpooledTemporaryFile.__init__"
None*z
selfp
-tempfile.SpooledTemporaryFile[builtins.bytes] 
builtins.bytes"builtins.bytes"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÃ
__init__&tempfile.SpooledTemporaryFile.__init__"
None*t
selfj
+tempfile.SpooledTemporaryFile[builtins.str]
builtins.str"builtins.str"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *à

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX·
__init__&tempfile.SpooledTemporaryFile.__init__"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"35"36"372À"
__init__&tempfile.SpooledTemporaryFile.__init__Æ
__init__&tempfile.SpooledTemporaryFile.__init__"
None*z
selfp
-tempfile.SpooledTemporaryFile[builtins.bytes] 
builtins.bytes"builtins.bytes"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX†
__init__&tempfile.SpooledTemporaryFile.__init__"
None*t
selfj
+tempfile.SpooledTemporaryFile[builtins.str]
builtins.str"builtins.str"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *à

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXµ
__init__&tempfile.SpooledTemporaryFile.__init__"
None*j
self`
,tempfile.SpooledTemporaryFile[typing.AnyStr]
typing.AnyStr"tempfile.SpooledTemporaryFile*,
max_size
builtins.int"builtins.int *(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
suffixD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
dirD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"38"39"310Pj35j36j37j38j39j310Ü
GenericAliastypes.GenericAlias"builtins.object*≠
__init__types.GenericAlias.__init__"
None*2
self(
types.GenericAlias"types.GenericAlias**
origin
builtins.type"builtins.type*
args
Anyz39z310*ó
__getattr__types.GenericAlias.__getattr__"
Any*0
self(
types.GenericAlias"types.GenericAlias*$
name
builtins.str"builtins.strz39z310j39j310D
overloadtyping.overload"
	typing._F*
f
	typing._Fz27\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310Ö
TemporaryFiletempfile.TemporaryFile"@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*x
model
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *+
bufsize
builtins.int"builtins.int *z
suffixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *z
prefixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *w
dirl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode z27Ω
NamedTemporaryFiletempfile.NamedTemporaryFile"@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*x
model
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *+
bufsize
builtins.int"builtins.int *z
suffixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *z
prefixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *w
dirl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *,
delete
builtins.bool"builtins.bool z27√
SpooledTemporaryFiletempfile.SpooledTemporaryFile"@
tempfile._TemporaryFileWrapper"tempfile._TemporaryFileWrapper*,
max_size
builtins.int"builtins.int *x
model
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *-
	buffering
builtins.int"builtins.int *z
suffixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *z
prefixl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode *w
dirl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode z27\

gettempdirtempfile.gettempdir"
builtins.str"builtins.strz27z35z36z37z38z39z310b
gettempprefixtempfile.gettempprefix"
builtins.str"builtins.strz27z35z36z37z38z39z310ã
_candidate_tempdir_list tempfile._candidate_tempdir_list"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz27Ø
_get_candidate_namestempfile._get_candidate_names"t
(Union[tempfile._RandomNameSequence,None]<
tempfile._RandomNameSequence"tempfile._RandomNameSequence
Nonez27W
_get_default_tempdirtempfile._get_default_tempdir"
builtins.str"builtins.strz27^
gettempdirbtempfile.gettempdirb" 
builtins.bytes"builtins.bytesz35z36z37z38z39z310d
gettempprefixbtempfile.gettempprefixb" 
builtins.bytes"builtins.bytesz35z36z37z38z39z310"Ê
mkstemptempfile.mkstempã
mkstemptempfile.mkstemp"`
 Tuple[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX∂
mkstemptempfile.mkstemp"V
!Tuple[builtins.int,typing.AnyStr]
builtins.int"builtins.int
typing.AnyStr*
suffix
typing.AnyStr *
prefix
typing.AnyStr *E
dir:
Union[typing.AnyStr,None]
typing.AnyStr
None **
text
builtins.bool"builtins.bool 0:overloadX"27"®
mkstemptempfile.mkstempã
mkstemptempfile.mkstemp"`
 Tuple[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:overloadX„
mkstemptempfile.mkstemp"V
!Tuple[builtins.int,typing.AnyStr]
builtins.int"builtins.int
typing.AnyStr*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None **
text
builtins.bool"builtins.bool 0:overloadX"35"36"37"38"39"310"∞
mkdtemptempfile.mkdtempG
mkdtemptempfile.mkdtemp"
builtins.str"builtins.str0:overloadX≈
mkdtemptempfile.mkdtemp"
typing.AnyStr*
suffix
typing.AnyStr *
prefix
typing.AnyStr *E
dir:
Union[typing.AnyStr,None]
typing.AnyStr
None 0:overloadX"27"Ú
mkdtemptempfile.mkdtempG
mkdtemptempfile.mkdtemp"
builtins.str"builtins.str0:overloadXÚ
mkdtemptempfile.mkdtemp"
typing.AnyStr*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX"35"36"37"38"39"310"™
mktemptempfile.mktempE
mktemptempfile.mktemp"
builtins.str"builtins.str0:overloadX√
mktemptempfile.mktemp"
typing.AnyStr*
suffix
typing.AnyStr *
prefix
typing.AnyStr *E
dir:
Union[typing.AnyStr,None]
typing.AnyStr
None 0:overloadX"27"Ï
mktemptempfile.mktempE
mktemptempfile.mktemp"
builtins.str"builtins.str0:overloadX
mktemptempfile.mktemp"
typing.AnyStr*H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX"35"36"37"38"39"310"µ!
NamedTemporaryFiletempfile.NamedTemporaryFileÙ
NamedTemporaryFiletempfile.NamedTemporaryFile"l
,tempfile._TemporaryFileWrapper[builtins.str]
builtins.str"builtins.str"tempfile._TemporaryFileWrapper*Ü

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool 0:overloadXÑ
NamedTemporaryFiletempfile.NamedTemporaryFile"r
.tempfile._TemporaryFileWrapper[builtins.bytes] 
builtins.bytes"builtins.bytes"tempfile._TemporaryFileWrapper*ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool 0:overloadX˜
NamedTemporaryFiletempfile.NamedTemporaryFile"N
#tempfile._TemporaryFileWrapper[Any]
Any"tempfile._TemporaryFileWrapper*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool 0:overloadX"35"36"37"≤#
NamedTemporaryFiletempfile.NamedTemporaryFile»
NamedTemporaryFiletempfile.NamedTemporaryFile"l
,tempfile._TemporaryFileWrapper[builtins.str]
builtins.str"builtins.str"tempfile._TemporaryFileWrapper*Ü

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÿ
NamedTemporaryFiletempfile.NamedTemporaryFile"r
.tempfile._TemporaryFileWrapper[builtins.bytes] 
builtins.bytes"builtins.bytes"tempfile._TemporaryFileWrapper*ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÀ
NamedTemporaryFiletempfile.NamedTemporaryFile"N
#tempfile._TemporaryFileWrapper[Any]
Any"tempfile._TemporaryFileWrapper*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *,
delete
builtins.bool"builtins.bool *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"38"39"310"Ö
TemporaryFiletempfile.TemporaryFileí
TemporaryFiletempfile.TemporaryFile"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*Ü

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX¢

TemporaryFiletempfile.TemporaryFile"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadXï
TemporaryFiletempfile.TemporaryFile"$
typing.IO[Any]
Any"	typing.IO*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None 0:overloadX"35"36"37"Ç!
TemporaryFiletempfile.TemporaryFileÊ
TemporaryFiletempfile.TemporaryFile"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*Ü

mode˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXˆ

TemporaryFiletempfile.TemporaryFile"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*ê
modeÉ
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadXÈ
TemporaryFiletempfile.TemporaryFile"$
typing.IO[Any]
Any"	typing.IO*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *H
suffix:
Union[typing.AnyStr,None]
typing.AnyStr
None *H
prefix:
Union[typing.AnyStr,None]
typing.AnyStr
None *ü
dirì
4Union[typing.AnyStr,os.PathLike[typing.AnyStr],None]
typing.AnyStr<
os.PathLike[typing.AnyStr]
typing.AnyStr"os.PathLike
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:overloadX"38"39"310*R
Any
typing.Any"
builtins.object"builtins.object*27*35*36*37*38*39*310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*V
TMP_MAXtempfile.TMP_MAX
builtins.int"builtins.int*27*35*36*37*38*39*310*=
tempdirtempfile.tempdir
builtins.str"builtins.str*27*z
tempdirtempfile.tempdirD
Union[builtins.str,None]
builtins.str"builtins.str
None*35*36*37*38*39*310*X
templatetempfile.template
builtins.str"builtins.str*27*35*36*37*38*39*310*£
_name_sequencetempfile._name_sequencet
(Union[tempfile._RandomNameSequence,None]<
tempfile._RandomNameSequence"tempfile._RandomNameSequence
None*27*#
osos *35*36*37*38*39*310*%
syssys *35*36*37*38*39*310*^
Generictyping.Generic*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*X
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310*
Literaltyping_extensions.Literal@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*35*36*37*38*39*310