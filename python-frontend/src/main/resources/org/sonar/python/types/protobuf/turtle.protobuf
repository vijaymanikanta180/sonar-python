
turtleâ
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j310…
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310ß
TurtleScreenBaseturtle.TurtleScreenBase"builtins.object*¨
__init__ turtle.TurtleScreenBase.__init__"
None*<
self2
turtle.TurtleScreenBase"turtle.TurtleScreenBase*2
cv*
TypeAlias[Any]
Any"turtle.Canvasz27*∑
__init__ turtle.TurtleScreenBase.__init__"
None*<
self2
turtle.TurtleScreenBase"turtle.TurtleScreenBase*(
cv 
tkinter.Canvas"tkinter.Canvasz35z36z37z38z39z310*ç
mainloop turtle.TurtleScreenBase.mainloop"
None*<
self2
turtle.TurtleScreenBase"turtle.TurtleScreenBasez35z36z37z38z39z310*û
	textinput!turtle.TurtleScreenBase.textinput"D
Union[builtins.str,None]
builtins.str"builtins.str
None*<
self2
turtle.TurtleScreenBase"turtle.TurtleScreenBase*'
title
builtins.str"builtins.str*(
prompt
builtins.str"builtins.strz35z36z37z38z39z310*±
numinput turtle.TurtleScreenBase.numinput"J
Union[builtins.float,None] 
builtins.float"builtins.float
None*<
self2
turtle.TurtleScreenBase"turtle.TurtleScreenBase*'
title
builtins.str"builtins.str*(
prompt
builtins.str"builtins.str*Y
defaultJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *X
minvalJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *X
maxvalJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37z38z39z310j27j35j36j37j38j39j310P

Terminatorturtle.Terminator"builtins.Exceptionj27j35j36j37j38j39j310b
TurtleGraphicsErrorturtle.TurtleGraphicsError"builtins.Exceptionj27j35j36j37j38j39j310È
Shapeturtle.Shape"builtins.object*¿
__init__turtle.Shape.__init__"
None*&
self
turtle.Shape"turtle.Shape*'
type_
builtins.str"builtins.str*Ω
data∞
[Union[TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]],TypeAlias[Any],None]î
@TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence"turtle._PolygonCoords.
TypeAlias[Any]
Any"turtle.PhotoImage
None z27*”
__init__turtle.Shape.__init__"
None*&
self
turtle.Shape"turtle.Shape*'
type_
builtins.str"builtins.str*ª
dataÆ
_Union[TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]],tkinter.PhotoImage,None]î
@TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence"turtle._PolygonCoords(
tkinter.PhotoImage"tkinter.PhotoImage
None z35z36z37z38z39z310*«
addcomponentturtle.Shape.addcomponent"
None*&
self
turtle.Shape"turtle.Shape*ü
polyî
@TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence"turtle._PolygonCoords*å
fillÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color*¥
outline§
PUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float],None]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None z27*¿
addcomponentturtle.Shape.addcomponent"
None*&
self
turtle.Shape"turtle.Shape*ü
polyî
@TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence"turtle._PolygonCoords*¸
fillÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color*®
outlineò
LUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float],None]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None z35z36z37z38z39z310j27j35j36j37j38j39j310ÀO
TurtleScreenturtle.TurtleScreen"turtle.TurtleScreenBase*®
__init__turtle.TurtleScreen.__init__"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*2
cv*
TypeAlias[Any]
Any"turtle.Canvas*(
mode
builtins.str"builtins.str *1
	colormode 
builtins.float"builtins.float *)
delay
builtins.int"builtins.int z27*≥
__init__turtle.TurtleScreen.__init__"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*(
cv 
tkinter.Canvas"tkinter.Canvas*(
mode
builtins.str"builtins.str *1
	colormode 
builtins.float"builtins.float *)
delay
builtins.int"builtins.int z35z36z37z38z39z310*
clearturtle.TurtleScreen.clear"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*«
setworldcoordinates'turtle.TurtleScreen.setworldcoordinates"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*)
llx 
builtins.float"builtins.float*)
lly 
builtins.float"builtins.float*)
urx 
builtins.float"builtins.float*)
ury 
builtins.float"builtins.floatz27z35z36z37z38z39z310*Ê
register_shape"turtle.TurtleScreen.register_shape"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*&
name
builtins.str"builtins.str*™
shapeú
YUnion[TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]],turtle.Shape,None]î
@TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence"turtle._PolygonCoords
turtle.Shape"turtle.Shape
None z27z35z36z37z38z39z310*
resetturtle.TurtleScreen.reset"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*»
turtlesturtle.TurtleScreen.turtles"M
builtins.list[turtle.Turtle]
turtle.Turtle"turtle.Turtle"builtins.list*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*Å
updateturtle.TurtleScreen.update"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*°
window_width turtle.TurtleScreen.window_width"
builtins.int"builtins.int*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*£
window_height!turtle.TurtleScreen.window_height"
builtins.int"builtins.int*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*ê
	getcanvasturtle.TurtleScreen.getcanvas"*
TypeAlias[Any]
Any"turtle.Canvas*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27*õ
	getcanvasturtle.TurtleScreen.getcanvas" 
tkinter.Canvas"tkinter.Canvas*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz35z36z37z38z39z310*…
	getshapesturtle.TurtleScreen.getshapes"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*4
self*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310*µ
onclickturtle.TurtleScreen.onclick"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *1
add&
Union[Any,None]
Any
None z27z35z36z37z38z39z310*¸
onkeyturtle.TurtleScreen.onkey"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*%
key
builtins.str"builtins.strz27z35z36z37z38z39z310*µ
listenturtle.TurtleScreen.listen"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*X
xdummyJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *X
ydummyJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z27z35z36z37z38z39z310*Ä
ontimerturtle.TurtleScreen.ontimer"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*%
t
builtins.int"builtins.int z27z35z36z37z38z39z310*¨

onkeypressturtle.TurtleScreen.onkeypress"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*O
keyD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z3102Ò
modeturtle.TurtleScreen.modeò
modeturtle.TurtleScreen.mode"
builtins.str"builtins.str*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
mode
None 0:overloadXñ
modeturtle.TurtleScreen.mode"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*&
mode
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"3102ô
	colormodeturtle.TurtleScreen.colormodeß
	colormodeturtle.TurtleScreen.colormode" 
builtins.float"builtins.float*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
cmode
None 0:overloadX•
	colormodeturtle.TurtleScreen.colormode"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*+
cmode 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"3102ø
bgcolorturtle.TurtleScreen.bgcolorô
bgcolorturtle.TurtleScreen.bgcolor"-
TypeAlias[Any]
Any"turtle._AnyColor*4
self*
turtle.TurtleScreen"turtle.TurtleScreen0:overloadXÑ
bgcolorturtle.TurtleScreen.bgcolor"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadXÔ
bgcolorturtle.TurtleScreen.bgcolor"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"272ƒ
bgcolorturtle.TurtleScreen.bgcolorô
bgcolorturtle.TurtleScreen.bgcolor"-
TypeAlias[Any]
Any"turtle._AnyColor*4
self*
turtle.TurtleScreen"turtle.TurtleScreen0:overloadXÙ
bgcolorturtle.TurtleScreen.bgcolor"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadXÔ
bgcolorturtle.TurtleScreen.bgcolor"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102 
tracerturtle.TurtleScreen.tracerô
tracerturtle.TurtleScreen.tracer"
builtins.int"builtins.int*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
n
None 0:overloadXÍ
tracerturtle.TurtleScreen.tracer"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*#
n
builtins.int"builtins.int*Q
delayD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overloadX"27"35"36"37"38"39"3102˘
delayturtle.TurtleScreen.delayõ
delayturtle.TurtleScreen.delay"
builtins.int"builtins.int*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
delay
None 0:overloadXô
delayturtle.TurtleScreen.delay"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*'
delay
builtins.int"builtins.int0:overloadX"27"35"36"37"38"39"3102˝
bgpicturtle.TurtleScreen.bgpicù
bgpicturtle.TurtleScreen.bgpic"
builtins.str"builtins.str*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
picname
None 0:overloadXõ
bgpicturtle.TurtleScreen.bgpic"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*)
picname
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"3102⁄

screensizeturtle.TurtleScreen.screensizeù

screensizeturtle.TurtleScreen.screensize"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
	canvwidth
None *

canvheight
None *
bg
None 0:overloadXá

screensizeturtle.TurtleScreen.screensize"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*+
	canvwidth
builtins.int"builtins.int*,

canvheight
builtins.int"builtins.int*Ø
bg§
PUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float],None]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None 0:overloadX"272„

screensizeturtle.TurtleScreen.screensizeù

screensizeturtle.TurtleScreen.screensize"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*
	canvwidth
None *

canvheight
None *
bg
None 0:overloadX˚

screensizeturtle.TurtleScreen.screensize"
None*4
self*
turtle.TurtleScreen"turtle.TurtleScreen*+
	canvwidth
builtins.int"builtins.int*,

canvheight
builtins.int"builtins.int*£
bgò
LUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float],None]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None 0:overloadX"35"36"37"38"39"310j27j35j36j37j38j39j310©&

TNavigatorturtle.TNavigator"builtins.object*©
__init__turtle.TNavigator.__init__"
None*0
self&
turtle.TNavigator"turtle.TNavigator*(
mode
builtins.str"builtins.str z27z35z36z37z38z39z310*y
resetturtle.TNavigator.reset"
None*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*±
degreesturtle.TNavigator.degrees"
None*0
self&
turtle.TNavigator"turtle.TNavigator*2

fullcircle 
builtins.float"builtins.float z27z35z36z37z38z39z310*}
radiansturtle.TNavigator.radians"
None*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*≠
forwardturtle.TNavigator.forward"
None*0
self&
turtle.TNavigator"turtle.TNavigator*.
distance 
builtins.float"builtins.floatz27z35z36z37z38z39z310*ß
backturtle.TNavigator.back"
None*0
self&
turtle.TNavigator"turtle.TNavigator*.
distance 
builtins.float"builtins.floatz27z35z36z37z38z39z310*¶
rightturtle.TNavigator.right"
None*0
self&
turtle.TNavigator"turtle.TNavigator*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310*§
leftturtle.TNavigator.left"
None*0
self&
turtle.TNavigator"turtle.TNavigator*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310*ù
posturtle.TNavigator.pos"Ø
/TypeAlias[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle.Vec2D*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*è
xcorturtle.TNavigator.xcor" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*è
ycorturtle.TNavigator.ycor" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*w
hometurtle.TNavigator.home"
None*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*†
setxturtle.TNavigator.setx"
None*0
self&
turtle.TNavigator"turtle.TNavigator*'
x 
builtins.float"builtins.floatz27z35z36z37z38z39z310*†
setyturtle.TNavigator.sety"
None*0
self&
turtle.TNavigator"turtle.TNavigator*'
y 
builtins.float"builtins.floatz27z35z36z37z38z39z310*ï
headingturtle.TNavigator.heading" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigatorz27z35z36z37z38z39z310*≥

setheadingturtle.TNavigator.setheading"
None*0
self&
turtle.TNavigator"turtle.TNavigator*.
to_angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310*÷
circleturtle.TNavigator.circle"
None*0
self&
turtle.TNavigator"turtle.TNavigator*,
radius 
builtins.float"builtins.float*X
extentJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Q
stepsD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z3102Î
gototurtle.TNavigator.goto
gototurtle.TNavigator.goto"
None*0
self&
turtle.TNavigator"turtle.TNavigator*s
xl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*
y
None 0:overloadX∫
gototurtle.TNavigator.goto"
None*0
self&
turtle.TNavigator"turtle.TNavigator*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"3102†
distanceturtle.TNavigator.distance˝
distanceturtle.TNavigator.distance" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigator*ﬂ
x◊
=Union[turtle.TNavigator,Tuple[builtins.float,builtins.float]]&
turtle.TNavigator"turtle.TNavigatorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*
y
None 0:overloadX⁄
distanceturtle.TNavigator.distance" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigator*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"3102ö
towardsturtle.TNavigator.towards˚
towardsturtle.TNavigator.towards" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigator*ﬂ
x◊
=Union[turtle.TNavigator,Tuple[builtins.float,builtins.float]]&
turtle.TNavigator"turtle.TNavigatorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*
y
None 0:overloadXÿ
towardsturtle.TNavigator.towards" 
builtins.float"builtins.float*0
self&
turtle.TNavigator"turtle.TNavigator*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"310j27j35j36j37j38j39j310–d
TPenturtle.TPen"builtins.object*ù
__init__turtle.TPen.__init__"
None*$
self
turtle.TPen"turtle.TPen*.

resizemode
builtins.str"builtins.str z27z35z36z37z38z39z310*g
penupturtle.TPen.penup"
None*$
self
turtle.TPen"turtle.TPenz27z35z36z37z38z39z310*k
pendownturtle.TPen.pendown"
None*$
self
turtle.TPen"turtle.TPenz27z35z36z37z38z39z310*
isdownturtle.TPen.isdown"
builtins.bool"builtins.bool*$
self
turtle.TPen"turtle.TPenz27z35z36z37z38z39z310*q

showturtleturtle.TPen.showturtle"
None*$
self
turtle.TPen"turtle.TPenz27z35z36z37z38z39z310*q

hideturtleturtle.TPen.hideturtle"
None*$
self
turtle.TPen"turtle.TPenz27z35z36z37z38z39z310*Ö
	isvisibleturtle.TPen.isvisible"
builtins.bool"builtins.bool*$
self
turtle.TPen"turtle.TPenz27z35z36z37z38z39z3102ﬂ

resizemodeturtle.TPen.resizemodeç

resizemodeturtle.TPen.resizemode"
builtins.str"builtins.str*$
self
turtle.TPen"turtle.TPen*
rmode
None 0:overloadXã

resizemodeturtle.TPen.resizemode"
None*$
self
turtle.TPen"turtle.TPen*'
rmode
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"3102Õ
pensizeturtle.TPen.pensizeá
pensizeturtle.TPen.pensize"
builtins.int"builtins.int*$
self
turtle.TPen"turtle.TPen*
width
None 0:overloadXÖ
pensizeturtle.TPen.pensize"
None*$
self
turtle.TPen"turtle.TPen*'
width
builtins.int"builtins.int0:overloadX"27"35"36"37"38"39"3102œ
speedturtle.TPen.speedÉ
speedturtle.TPen.speed"
builtins.int"builtins.int*$
self
turtle.TPen"turtle.TPen*
speed
None 0:overloadXè
speedturtle.TPen.speed"
None*$
self
turtle.TPen"turtle.TPen*¥
speed®
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"turtle._Speed0:overloadX"27"35"36"37"38"39"3102˜
pencolorturtle.TPen.pencolorÉ
pencolorturtle.TPen.pencolor"-
TypeAlias[Any]
Any"turtle._AnyColor*$
self
turtle.TPen"turtle.TPen0:overloadXÓ
pencolorturtle.TPen.pencolor"
None*$
self
turtle.TPen"turtle.TPen*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadXŸ
pencolorturtle.TPen.pencolor"
None*$
self
turtle.TPen"turtle.TPen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"272¸
pencolorturtle.TPen.pencolorÉ
pencolorturtle.TPen.pencolor"-
TypeAlias[Any]
Any"turtle._AnyColor*$
self
turtle.TPen"turtle.TPen0:overloadXﬁ
pencolorturtle.TPen.pencolor"
None*$
self
turtle.TPen"turtle.TPen*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadXŸ
pencolorturtle.TPen.pencolor"
None*$
self
turtle.TPen"turtle.TPen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102ˇ
	fillcolorturtle.TPen.fillcolorÖ
	fillcolorturtle.TPen.fillcolor"-
TypeAlias[Any]
Any"turtle._AnyColor*$
self
turtle.TPen"turtle.TPen0:overloadX
	fillcolorturtle.TPen.fillcolor"
None*$
self
turtle.TPen"turtle.TPen*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX€
	fillcolorturtle.TPen.fillcolor"
None*$
self
turtle.TPen"turtle.TPen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"272Ñ
	fillcolorturtle.TPen.fillcolorÖ
	fillcolorturtle.TPen.fillcolor"-
TypeAlias[Any]
Any"turtle._AnyColor*$
self
turtle.TPen"turtle.TPen0:overloadX‡
	fillcolorturtle.TPen.fillcolor"
None*$
self
turtle.TPen"turtle.TPen*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX€
	fillcolorturtle.TPen.fillcolor"
None*$
self
turtle.TPen"turtle.TPen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102∂
colorturtle.TPen.color◊
colorturtle.TPen.color"Ü
$Tuple[TypeAlias[Any],TypeAlias[Any]]-
TypeAlias[Any]
Any"turtle._AnyColor-
TypeAlias[Any]
Any"turtle._AnyColor*$
self
turtle.TPen"turtle.TPen0:overloadXË
colorturtle.TPen.color"
None*$
self
turtle.TPen"turtle.TPen*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX”
colorturtle.TPen.color"
None*$
self
turtle.TPen"turtle.TPen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX˙
colorturtle.TPen.color"
None*$
self
turtle.TPen"turtle.TPen*é
color1Å
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color*é
color2Å
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX"272õ
colorturtle.TPen.color◊
colorturtle.TPen.color"Ü
$Tuple[TypeAlias[Any],TypeAlias[Any]]-
TypeAlias[Any]
Any"turtle._AnyColor-
TypeAlias[Any]
Any"turtle._AnyColor*$
self
turtle.TPen"turtle.TPen0:overloadXÿ
colorturtle.TPen.color"
None*$
self
turtle.TPen"turtle.TPen*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX”
colorturtle.TPen.color"
None*$
self
turtle.TPen"turtle.TPen*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX⁄
colorturtle.TPen.color"
None*$
self
turtle.TPen"turtle.TPen*˛
color1Ò
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color*˛
color2Ò
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX"35"36"37"38"39"3102È
penturtle.TPen.penÊ
penturtle.TPen.pen"ô
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"turtle._PenState*$
self
turtle.TPen"turtle.TPen0:overloadX„
penturtle.TPen.pen"
None*$
self
turtle.TPen"turtle.TPen*û
pení
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *+
shown
builtins.bool"builtins.bool *-
pendown
builtins.bool"builtins.bool *í
pencolorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *ì
	fillcolorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *+
pensize
builtins.int"builtins.int *)
speed
builtins.int"builtins.int *.

resizemode
builtins.str"builtins.str *Å
stretchfactorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float *+
outline
builtins.int"builtins.int *,
tilt 
builtins.float"builtins.float 0:overloadX"272ﬁ
penturtle.TPen.penÊ
penturtle.TPen.pen"ô
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"turtle._PenState*$
self
turtle.TPen"turtle.TPen0:overloadX√
penturtle.TPen.pen"
None*$
self
turtle.TPen"turtle.TPen*û
pení
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *+
shown
builtins.bool"builtins.bool *-
pendown
builtins.bool"builtins.bool *Ç
pencolorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *É
	fillcolorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *+
pensize
builtins.int"builtins.int *)
speed
builtins.int"builtins.int *.

resizemode
builtins.str"builtins.str *Å
stretchfactorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float *+
outline
builtins.int"builtins.int *,
tilt 
builtins.float"builtins.float 0:overloadX"35"36"37"38"39"310j27j35j36j37j38j39j310ÆL
	RawTurtleturtle.RawTurtle"turtle.TPen"turtle.TNavigator*ó
__init__turtle.RawTurtle.__init__"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*£
canvasî
.Union[TypeAlias[Any],turtle.TurtleScreen,None]*
TypeAlias[Any]
Any"turtle.Canvas*
turtle.TurtleScreen"turtle.TurtleScreen
None *)
shape
builtins.str"builtins.str *2
undobuffersize
builtins.int"builtins.int *-
visible
builtins.bool"builtins.bool z27*¢
__init__turtle.RawTurtle.__init__"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*ô
canvasä
.Union[tkinter.Canvas,turtle.TurtleScreen,None] 
tkinter.Canvas"tkinter.Canvas*
turtle.TurtleScreen"turtle.TurtleScreen
None *)
shape
builtins.str"builtins.str *2
undobuffersize
builtins.int"builtins.int *-
visible
builtins.bool"builtins.bool z35z36z37z38z39z310*v
resetturtle.RawTurtle.reset"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*÷
setundobufferturtle.RawTurtle.setundobuffer"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*N
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez27z35z36z37z38z39z310*¢
undobufferentries"turtle.RawTurtle.undobufferentries"
builtins.int"builtins.int*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*v
clearturtle.RawTurtle.clear"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*d
cloneturtle.RawTurtle.clone"
	turtle._T*
self
	turtle._Tz27z35z36z37z38z39z310*±
settiltangleturtle.RawTurtle.settiltangle"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310*°
tiltturtle.RawTurtle.tilt"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310*u
stampturtle.RawTurtle.stamp"
Any*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*±

clearstampturtle.RawTurtle.clearstamp"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*Æ
stampid†
0Union[builtins.int,builtins.tuple[builtins.int]]
builtins.int"builtins.intL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuplez27z35z36z37z38z39z310*—
clearstampsturtle.RawTurtle.clearstamps"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310*ê
fillingturtle.RawTurtle.filling"
builtins.bool"builtins.bool*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*Ä

begin_fillturtle.RawTurtle.begin_fill"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*|
end_fillturtle.RawTurtle.end_fill"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*ª
dotturtle.RawTurtle.dot"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Colorz27*¿
dotturtle.RawTurtle.dot"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Colorz35z36z37z38z39z310*ï
writeturtle.RawTurtle.write"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*+
arg"
builtins.object"builtins.object**
move
builtins.bool"builtins.bool *)
align
builtins.str"builtins.str *ò
fontã
-Tuple[builtins.str,builtins.int,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str z27z35z36z37z38z39z310*Ä

begin_polyturtle.RawTurtle.begin_poly"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*|
end_polyturtle.RawTurtle.end_poly"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*˝
get_polyturtle.RawTurtle.get_poly"à
AUnion[typing.Sequence[Tuple[builtins.float,builtins.float]],None]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*†
	getscreenturtle.RawTurtle.getscreen"*
turtle.TurtleScreen"turtle.TurtleScreen*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*l
	getturtleturtle.RawTurtle.getturtle"
	turtle._T*
self
	turtle._Tz27z35z36z37z38z39z310*Õ
onclickturtle.RawTurtle.onclick"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *R
addG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27z35z36z37z38z39z310*—
	onreleaseturtle.RawTurtle.onrelease"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *R
addG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27z35z36z37z38z39z310*À
ondragturtle.RawTurtle.ondrag"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *R
addG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27z35z36z37z38z39z310*t
undoturtle.RawTurtle.undo"
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez27z35z36z37z38z39z310*É
get_shapepolyturtle.RawTurtle.get_shapepoly"à
AUnion[typing.Sequence[Tuple[builtins.float,builtins.float]],None]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence
None*.
self$
turtle.RawTurtle"turtle.RawTurtlez35z36z37z38z39z3102‚
shapeturtle.RawTurtle.shapeë
shapeturtle.RawTurtle.shape"
builtins.str"builtins.str*.
self$
turtle.RawTurtle"turtle.RawTurtle*
name
None 0:overloadXè
shapeturtle.RawTurtle.shape"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*&
name
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"3102◊
	shapesizeturtle.RawTurtle.shapesizeÖ
	shapesizeturtle.RawTurtle.shapesize"ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float*.
self$
turtle.RawTurtle"turtle.RawTurtle0:overloadXà
	shapesizeturtle.RawTurtle.shapesize"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*]
stretch_widJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *]
stretch_lenJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Y
outlineJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"27"35"36"37"38"39"3102Ñ
	tiltangleturtle.RawTurtle.tiltangleû
	tiltangleturtle.RawTurtle.tiltangle" 
builtins.float"builtins.float*.
self$
turtle.RawTurtle"turtle.RawTurtle*
angle
None 0:overloadXú
	tiltangleturtle.RawTurtle.tiltangle"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*+
angle 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"3102å
shearfactorturtle.RawTurtle.shearfactor¢
shearfactorturtle.RawTurtle.shearfactor" 
builtins.float"builtins.float*.
self$
turtle.RawTurtle"turtle.RawTurtle*
shear
None 0:overloadX†
shearfactorturtle.RawTurtle.shearfactor"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*+
shear 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"3102Â
shapetransformturtle.RawTurtle.shapetransform¿
shapetransformturtle.RawTurtle.shapetransform"Œ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float*.
self$
turtle.RawTurtle"turtle.RawTurtle0:overloadX’
shapetransformturtle.RawTurtle.shapetransform"
None*.
self$
turtle.RawTurtle"turtle.RawTurtle*U
t11J
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
t12J
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
t21J
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
t22J
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"35"36"37"38"39"310j27j35j36j37j38j39j310◊
_Screenturtle._Screen"turtle.TurtleScreen*v
__init__turtle._Screen.__init__"
None**
self 
turtle._Screen"turtle._Screenz27z35z36z37z38z39z310*É
setupturtle._Screen.setup"
None**
self 
turtle._Screen"turtle._Screen*s
widthf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float *t
heightf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float *R
startxD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
startyD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310*ü
titleturtle._Screen.title"
None**
self 
turtle._Screen"turtle._Screen*-
titlestring
builtins.str"builtins.strz27z35z36z37z38z39z310*l
byeturtle._Screen.bye"
None**
self 
turtle._Screen"turtle._Screenz27z35z36z37z38z39z310*|
exitonclickturtle._Screen.exitonclick"
None**
self 
turtle._Screen"turtle._Screenz27z35z36z37z38z39z310j27j35j36j37j38j39j310 
Turtleturtle.Turtle"turtle.RawTurtle*Å
__init__turtle.Turtle.__init__"
None*(
self
turtle.Turtle"turtle.Turtle*)
shape
builtins.str"builtins.str *2
undobuffersize
builtins.int"builtins.int *-
visible
builtins.bool"builtins.bool z27z35z36z37z38z39z310j27j35j36j37j38j39j310ª»
Canvastkinter.Canvas"tkinter.Widget"tkinter.XView"tkinter.YView*å7
__init__tkinter.Canvas.__init__"
None**
self 
tkinter.Canvas"tkinter.Canvas*R
masterD
Union[tkinter.Misc,None]
tkinter.Misc"tkinter.Misc
None *û
cnfí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *.

background
builtins.str"builtins.str *∫
bdØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *&
bg
builtins.str"builtins.str *æ
borderØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *√
borderwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *3
closeenough 
builtins.float"builtins.float *-
confine
builtins.bool"builtins.bool *ò
cursorâ
ºTypeAlias[Union[builtins.str,Tuple[builtins.str],Tuple[builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str,builtins.str]]]¥
±Union[builtins.str,Tuple[builtins.str],Tuple[builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str,builtins.str]]
builtins.str"builtins.str5
Tuple[builtins.str]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"tkinter._Cursor *æ
heightØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *7
highlightbackground
builtins.str"builtins.str *2
highlightcolor
builtins.str"builtins.str * 
highlightthicknessØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *4
insertbackground
builtins.str"builtins.str *…
insertborderwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *1
insertofftime
builtins.int"builtins.int *0
insertontime
builtins.int"builtins.int *√
insertwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *(
name
builtins.str"builtins.str *
offset
Any *¢
reliefì
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"tkinter._Relief *Ç	
scrollregionÌ
ÕUnion[Tuple[TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]]],Tuple[]]ã
æTuple[TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]]]Ø
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnitsØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnitsØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnitsØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits
Tuple[] *4
selectbackground
builtins.str"builtins.str *…
selectborderwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *4
selectforeground
builtins.str"builtins.str *∂
state®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *˜
	takefocusÂ
TTypeAlias[Union[builtins.int,Literal[builtins.str],CallableType[builtins.function]]]Ò
IUnion[builtins.int,Literal[builtins.str],CallableType[builtins.function]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tkinter._TakeFocusValue *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *ò
xscrollcommandÅ
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tkinter._XYScrollCommand *»
xscrollincrementØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *ò
yscrollcommandÅ
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tkinter._XYScrollCommand *»
yscrollincrementØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits z35z36z37z38z39z310*L
addtagtkinter.Canvas.addtag*
self*
argsz35z36z37z38z39z310*g
addtag_abovetkinter.Canvas.addtag_above*
self*

newtag*
tagOrIdz35z36z37z38z39z310*V

addtag_alltkinter.Canvas.addtag_all*
self*

newtagz35z36z37z38z39z310*g
addtag_belowtkinter.Canvas.addtag_below*
self*

newtag*
tagOrIdz35z36z37z38z39z310*õ
addtag_closesttkinter.Canvas.addtag_closest"
Any**
self 
tkinter.Canvas"tkinter.Canvas*
newtag
Any*
x
Any*
y
Any*2
halo&
Union[Any,None]
Any
None *3
start&
Union[Any,None]
Any
None z35z36z37z38z39z310*Ä
addtag_enclosedtkinter.Canvas.addtag_enclosed*
self*

newtag*
x1*
y1*
x2*
y2z35z36z37z38z39z310*Ü
addtag_overlapping!tkinter.Canvas.addtag_overlapping*
self*

newtag*
x1*
y1*
x2*
y2z35z36z37z38z39z310*k
addtag_withtagtkinter.Canvas.addtag_withtag*
self*

newtag*
tagOrIdz35z36z37z38z39z310*H
bboxtkinter.Canvas.bbox*
self*
argsz35z36z37z38z39z310*Â

tag_unbindtkinter.Canvas.tag_unbind"
None**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int**
sequence
builtins.str"builtins.str*R
funcidD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310*¿
canvasxtkinter.Canvas.canvasx"
Any**
self 
tkinter.Canvas"tkinter.Canvas*
screenx
Any*9
gridspacing&
Union[Any,None]
Any
None z35z36z37z38z39z310*¿
canvasytkinter.Canvas.canvasy"
Any**
self 
tkinter.Canvas"tkinter.Canvas*
screeny
Any*9
gridspacing&
Union[Any,None]
Any
None z35z36z37z38z39z310*L
coordstkinter.Canvas.coords*
self*
argsz35z36z37z38z39z310*Æ

create_arctkinter.Canvas.create_arc"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*
args
Any*
kw
Anyz35z36z37z38z39z310*¥
create_bitmaptkinter.Canvas.create_bitmap"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*
args
Any*
kw
Anyz35z36z37z38z39z310*≤
create_imagetkinter.Canvas.create_image"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*
args
Any*
kw
Anyz35z36z37z38z39z310*ç
create_linetkinter.Canvas.create_line"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*(
__x0 
builtins.float"builtins.float*(
__y0 
builtins.float"builtins.float*(
__x1 
builtins.float"builtins.float*(
__y1 
builtins.float"builtins.float*.

activedash
builtins.str"builtins.str *.

activefill
builtins.str"builtins.str *1
activestipple
builtins.str"builtins.str *√
activewidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *Ö
arrow˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *∞

arrowshapeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float *à
capstyle˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *í
dashÖ
ÑUnion[Tuple[builtins.float],Tuple[builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]];
Tuple[builtins.float] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float *¬

dashoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *0
disableddash
builtins.str"builtins.str *0
disabledfill
builtins.str"builtins.str *3
disabledstipple
builtins.str"builtins.str *≈
disabledwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *(
fill
builtins.str"builtins.str *â
	joinstyle˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *æ
offsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *,
smooth
builtins.bool"builtins.bool *3
splinesteps 
builtins.float"builtins.float *Ö
state˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *+
stipple
builtins.str"builtins.str *≠
tags†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits z35z36z37z38z39z310*ﬂ
create_ovaltkinter.Canvas.create_oval"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*(
__x0 
builtins.float"builtins.float*(
__y0 
builtins.float"builtins.float*(
__x1 
builtins.float"builtins.float*(
__y1 
builtins.float"builtins.float*.

activedash
builtins.str"builtins.str *.

activefill
builtins.str"builtins.str *1
activeoutline
builtins.str"builtins.str *8
activeoutlinestipple
builtins.str"builtins.str *1
activestipple
builtins.str"builtins.str *√
activewidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *í
dashÖ
ÑUnion[Tuple[builtins.float],Tuple[builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]];
Tuple[builtins.float] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float *¬

dashoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *0
disableddash
builtins.str"builtins.str *0
disabledfill
builtins.str"builtins.str *3
disabledoutline
builtins.str"builtins.str *:
disabledoutlinestipple
builtins.str"builtins.str *3
disabledstipple
builtins.str"builtins.str *≈
disabledwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *(
fill
builtins.str"builtins.str *æ
offsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *+
outline
builtins.str"builtins.str *≈
outlineoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *2
outlinestipple
builtins.str"builtins.str *Ö
state˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *+
stipple
builtins.str"builtins.str *≠
tags†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits z35z36z37z38z39z310*Ñ
create_polygontkinter.Canvas.create_polygon"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*(
__x0 
builtins.float"builtins.float*(
__y0 
builtins.float"builtins.float*(
__x1 
builtins.float"builtins.float*(
__y1 
builtins.float"builtins.float*.
xy_pairs 
builtins.float"builtins.float*.

activedash
builtins.str"builtins.str *.

activefill
builtins.str"builtins.str *1
activeoutline
builtins.str"builtins.str *8
activeoutlinestipple
builtins.str"builtins.str *1
activestipple
builtins.str"builtins.str *√
activewidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *í
dashÖ
ÑUnion[Tuple[builtins.float],Tuple[builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]];
Tuple[builtins.float] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float *¬

dashoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *0
disableddash
builtins.str"builtins.str *0
disabledfill
builtins.str"builtins.str *3
disabledoutline
builtins.str"builtins.str *:
disabledoutlinestipple
builtins.str"builtins.str *3
disabledstipple
builtins.str"builtins.str *≈
disabledwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *(
fill
builtins.str"builtins.str *â
	joinstyle˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *æ
offsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *+
outline
builtins.str"builtins.str *≈
outlineoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *2
outlinestipple
builtins.str"builtins.str *,
smooth
builtins.bool"builtins.bool *3
splinesteps 
builtins.float"builtins.float *Ö
state˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *+
stipple
builtins.str"builtins.str *≠
tags†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits z35z36z37z38z39z310*È
create_rectangletkinter.Canvas.create_rectangle"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*(
__x0 
builtins.float"builtins.float*(
__y0 
builtins.float"builtins.float*(
__x1 
builtins.float"builtins.float*(
__y1 
builtins.float"builtins.float*.

activedash
builtins.str"builtins.str *.

activefill
builtins.str"builtins.str *1
activeoutline
builtins.str"builtins.str *8
activeoutlinestipple
builtins.str"builtins.str *1
activestipple
builtins.str"builtins.str *√
activewidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *í
dashÖ
ÑUnion[Tuple[builtins.float],Tuple[builtins.float,builtins.float],Tuple[builtins.float,builtins.float,builtins.float,builtins.float]];
Tuple[builtins.float] 
builtins.float"builtins.floatl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatŒ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float *¬

dashoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *0
disableddash
builtins.str"builtins.str *0
disabledfill
builtins.str"builtins.str *3
disabledoutline
builtins.str"builtins.str *:
disabledoutlinestipple
builtins.str"builtins.str *3
disabledstipple
builtins.str"builtins.str *≈
disabledwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *(
fill
builtins.str"builtins.str *æ
offsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *+
outline
builtins.str"builtins.str *≈
outlineoffsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *2
outlinestipple
builtins.str"builtins.str *Ö
state˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *+
stipple
builtins.str"builtins.str *≠
tags†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits z35z36z37z38z39z310*Õ
create_texttkinter.Canvas.create_text"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*'
__x 
builtins.float"builtins.float*'
__y 
builtins.float"builtins.float*.

activefill
builtins.str"builtins.str *1
activestipple
builtins.str"builtins.str *—
anchor¬
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"tkinter._Anchor *0
disabledfill
builtins.str"builtins.str *3
disabledstipple
builtins.str"builtins.str *(
fill
builtins.str"builtins.str *¿
font≥
ÅTypeAlias[Union[builtins.str,tkinter.font.Font,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]]ã
vUnion[builtins.str,tkinter.font.Font,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]]
builtins.str"builtins.str&
tkinter.font.Font"tkinter.font.Font»
PTypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]◊
EUnion[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]D
builtins.list[UnboundType[_T]]
UnboundType[_T]"builtins.listF
builtins.tuple[UnboundType[_T]]
UnboundType[_T]"builtins.tuple"tkinter._TkinterSequence"tkinter.font._FontDescription *á
justify˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *æ
offsetØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *Ö
state˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *+
stipple
builtins.str"builtins.str *≠
tags†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *r
textf
"Union[builtins.float,builtins.str] 
builtins.float"builtins.float
builtins.str"builtins.str *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits z35z36z37z38z39z310*ü
create_windowtkinter.Canvas.create_window"
builtins.int"builtins.int**
self 
tkinter.Canvas"tkinter.Canvas*'
__x 
builtins.float"builtins.float*'
__y 
builtins.float"builtins.float*—
anchor¬
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"tkinter._Anchor *æ
heightØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *Ö
state˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *≠
tags†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *.
window 
tkinter.Widget"tkinter.Widget z35z36z37z38z39z310*L
dcharstkinter.Canvas.dchars*
self*
argsz35z36z37z38z39z310*Â
deletetkinter.Canvas.delete"
None**
self 
tkinter.Canvas"tkinter.Canvas*u
tagsOrCanvasIds`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz35z36z37z38z39z310*H
dtagtkinter.Canvas.dtag*
self*
argsz35z36z37z38z39z310*H
findtkinter.Canvas.find*
self*
argsz35z36z37z38z39z310*‰

find_abovetkinter.Canvas.find_above"
Any**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz35z36z37z38z39z310*F
find_alltkinter.Canvas.find_all*
selfz35z36z37z38z39z310*‰

find_belowtkinter.Canvas.find_below"
Any**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz35z36z37z38z39z310*Ç
find_closesttkinter.Canvas.find_closest"
Any**
self 
tkinter.Canvas"tkinter.Canvas*
x
Any*
y
Any*2
halo&
Union[Any,None]
Any
None *3
start&
Union[Any,None]
Any
None z35z36z37z38z39z310*p
find_enclosedtkinter.Canvas.find_enclosed*
self*
x1*
y1*
x2*
y2z35z36z37z38z39z310*v
find_overlappingtkinter.Canvas.find_overlapping*
self*
x1*
y1*
x2*
y2z35z36z37z38z39z310*Ë
find_withtagtkinter.Canvas.find_withtag"
Any**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intz35z36z37z38z39z310*J
focustkinter.Canvas.focus*
self*
argsz35z36z37z38z39z310*N
gettagstkinter.Canvas.gettags*
self*
argsz35z36z37z38z39z310*N
icursortkinter.Canvas.icursor*
self*
argsz35z36z37z38z39z310*J
indextkinter.Canvas.index*
self*
argsz35z36z37z38z39z310*L
inserttkinter.Canvas.insert*
self*
argsz35z36z37z38z39z310*_
itemcgettkinter.Canvas.itemcget*
self*
tagOrId*

optionz35z36z37z38z39z310*’
itemconfiguretkinter.Canvas.itemconfigure"
Any**
self 
tkinter.Canvas"tkinter.Canvas*
tagOrId
Any*1
cnf&
Union[Any,None]
Any
None *
kw
Anyz35z36z37z38z39z310*R
	tag_lowertkinter.Canvas.tag_lower*
self*
argsz35z36z37z38z39z310*H
movetkinter.Canvas.move*
self*
argsz35z36z37z38z39z310*]

postscripttkinter.Canvas.postscript*
self*	
cnf *
kwz35z36z37z38z39z310*R
	tag_raisetkinter.Canvas.tag_raise*
self*
argsz35z36z37z38z39z310*J
scaletkinter.Canvas.scale*
self*
argsz35z36z37z38z39z310*V
	scan_marktkinter.Canvas.scan_mark*
self*
x*
yz35z36z37z38z39z310*¡
scan_dragtotkinter.Canvas.scan_dragto"
Any**
self 
tkinter.Canvas"tkinter.Canvas*
x
Any*
y
Any*(
gain
builtins.int"builtins.int z35z36z37z38z39z310*h
select_adjusttkinter.Canvas.select_adjust*
self*
tagOrId*	
indexz35z36z37z38z39z310*N
select_cleartkinter.Canvas.select_clear*
selfz35z36z37z38z39z310*d
select_fromtkinter.Canvas.select_from*
self*
tagOrId*	
indexz35z36z37z38z39z310*L
select_itemtkinter.Canvas.select_item*
selfz35z36z37z38z39z310*`
	select_totkinter.Canvas.select_to*
self*
tagOrId*	
indexz35z36z37z38z39z310*K
typetkinter.Canvas.type*
self*
tagOrIdz35z36z37z38z39z310*ˇ
movetotkinter.Canvas.moveto"
None**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*î
xä
+Union[Literal[builtins.str],builtins.float]7
Literal[builtins.str]	
builtins.str"builtins.str 
builtins.float"builtins.float *î
yä
+Union[Literal[builtins.str],builtins.float]7
Literal[builtins.str]	
builtins.str"builtins.str 
builtins.float"builtins.float z38z39z3102Ü<
	configuretkinter.Canvas.configureî9
	configuretkinter.Canvas.configure"ñ
]Union[builtins.dict[builtins.str,Tuple[builtins.str,builtins.str,builtins.str,Any,Any]],None]®
Qbuiltins.dict[builtins.str,Tuple[builtins.str,builtins.str,builtins.str,Any,Any]]
builtins.str"builtins.str•
5Tuple[builtins.str,builtins.str,builtins.str,Any,Any]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
Any
Any"builtins.dict
None**
self 
tkinter.Canvas"tkinter.Canvas*û
cnfí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *.

background
builtins.str"builtins.str *∫
bdØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *&
bg
builtins.str"builtins.str *æ
borderØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *√
borderwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *3
closeenough 
builtins.float"builtins.float *-
confine
builtins.bool"builtins.bool *ò
cursorâ
ºTypeAlias[Union[builtins.str,Tuple[builtins.str],Tuple[builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str,builtins.str]]]¥
±Union[builtins.str,Tuple[builtins.str],Tuple[builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str],Tuple[builtins.str,builtins.str,builtins.str,builtins.str]]
builtins.str"builtins.str5
Tuple[builtins.str]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"tkinter._Cursor *æ
heightØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *7
highlightbackground
builtins.str"builtins.str *2
highlightcolor
builtins.str"builtins.str * 
highlightthicknessØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *4
insertbackground
builtins.str"builtins.str *…
insertborderwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *1
insertofftime
builtins.int"builtins.int *0
insertontime
builtins.int"builtins.int *√
insertwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *
offset
Any *¢
reliefì
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"tkinter._Relief *Ç	
scrollregionÌ
ÕUnion[Tuple[TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]]],Tuple[]]ã
æTuple[TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]],TypeAlias[Union[builtins.str,builtins.float]]]Ø
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnitsØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnitsØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnitsØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits
Tuple[] *4
selectbackground
builtins.str"builtins.str *…
selectborderwidthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *4
selectforeground
builtins.str"builtins.str *∂
state®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *˜
	takefocusÂ
TTypeAlias[Union[builtins.int,Literal[builtins.str],CallableType[builtins.function]]]Ò
IUnion[builtins.int,Literal[builtins.str],CallableType[builtins.function]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tkinter._TakeFocusValue *Ω
widthØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *ò
xscrollcommandÅ
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tkinter._XYScrollCommand *»
xscrollincrementØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits *ò
yscrollcommandÅ
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"tkinter._XYScrollCommand *»
yscrollincrementØ
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"tkinter._ScreenUnits 0:overloadXÆ
	configuretkinter.Canvas.configure"•
5Tuple[builtins.str,builtins.str,builtins.str,Any,Any]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
Any
Any**
self 
tkinter.Canvas"tkinter.Canvas*%
cnf
builtins.str"builtins.str0:overloadX"35"36"37"38"39"3102Á

tag_bindtkinter.Canvas.tag_bind™
tag_bindtkinter.Canvas.tag_bind"
builtins.str"builtins.str**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*T
sequenceD
Union[builtins.str,None]
builtins.str"builtins.str
None *ì
funcÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *R
addG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadX¶
tag_bindtkinter.Canvas.tag_bind"
None**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*R
sequenceD
Union[builtins.str,None]
builtins.str"builtins.str
None*&
func
builtins.str"builtins.str*R
addG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadX“
tag_bindtkinter.Canvas.tag_bind"
None**
self 
tkinter.Canvas"tkinter.Canvas*m
tagOrId`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*&
func
builtins.str"builtins.str*R
addG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:overloadX"35"36"37"38"39"310j35j36j37j38j39j310ü9

PhotoImagetkinter.PhotoImage"tkinter.Image*§

__init__tkinter.PhotoImage.__init__"
None*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *b
cnfW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict *ê
masterÅ
+Union[tkinter.Misc,_tkinter.TkappType,None]
tkinter.Misc"tkinter.Misc(
_tkinter.TkappType"_tkinter.TkappType
None *r
dataf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes **
format
builtins.str"builtins.str *√
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *-
gamma 
builtins.float"builtins.float **
height
builtins.int"builtins.int *o
palette`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *)
width
builtins.int"builtins.int z35z36z37z38z39z310*›
	configuretkinter.PhotoImage.configure"
None*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*r
dataf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes **
format
builtins.str"builtins.str *√
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *-
gamma 
builtins.float"builtins.float **
height
builtins.int"builtins.int *o
palette`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *)
width
builtins.int"builtins.int z35z36z37z38z39z310*x
blanktkinter.PhotoImage.blank"
None*2
self(
tkinter.PhotoImage"tkinter.PhotoImagez35z36z37z38z39z310*¥
cgettkinter.PhotoImage.cget"
builtins.str"builtins.str*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*(
option
builtins.str"builtins.strz35z36z37z38z39z310*ª
__getitem__tkinter.PhotoImage.__getitem__"
builtins.str"builtins.str*0
self(
tkinter.PhotoImage"tkinter.PhotoImage*#
key
builtins.str"builtins.strz35z36z37z38z39z310*ñ
copytkinter.PhotoImage.copy"(
tkinter.PhotoImage"tkinter.PhotoImage*2
self(
tkinter.PhotoImage"tkinter.PhotoImagez35z36z37z38z39z310*Ã
zoomtkinter.PhotoImage.zoom"(
tkinter.PhotoImage"tkinter.PhotoImage*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*#
x
builtins.int"builtins.int*é
yÑ
)Union[builtins.int,Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str z35z36z37z38z39z310*÷
	subsampletkinter.PhotoImage.subsample"(
tkinter.PhotoImage"tkinter.PhotoImage*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*#
x
builtins.int"builtins.int*é
yÑ
)Union[builtins.int,Literal[builtins.str]]
builtins.int"builtins.int7
Literal[builtins.str]	
builtins.str"builtins.str z35z36z37z38z39z310*¬
gettkinter.PhotoImage.get"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*#
x
builtins.int"builtins.int*#
y
builtins.int"builtins.intz35z36z37z38z39z310*≠
puttkinter.PhotoImage.put"
None*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*å
dataÅ
≤Union[builtins.str,TypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]],TypeAlias[Union[builtins.list[builtins.list[UnboundType[_T]]],builtins.list[builtins.tuple[UnboundType[_T]]],builtins.tuple[builtins.list[UnboundType[_T]]],builtins.tuple[builtins.tuple[UnboundType[_T]]]]]]
builtins.str"builtins.str»
PTypeAlias[Union[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]]◊
EUnion[builtins.list[UnboundType[_T]],builtins.tuple[UnboundType[_T]]]D
builtins.list[UnboundType[_T]]
UnboundType[_T]"builtins.listF
builtins.tuple[UnboundType[_T]]
UnboundType[_T]"builtins.tuple"tkinter._TkinterSequenceﬁ
ÕTypeAlias[Union[builtins.list[builtins.list[UnboundType[_T]]],builtins.list[builtins.tuple[UnboundType[_T]]],builtins.tuple[builtins.list[UnboundType[_T]]],builtins.tuple[builtins.tuple[UnboundType[_T]]]]]Ì
¬Union[builtins.list[builtins.list[UnboundType[_T]]],builtins.list[builtins.tuple[UnboundType[_T]]],builtins.tuple[builtins.list[UnboundType[_T]]],builtins.tuple[builtins.tuple[UnboundType[_T]]]]Ñ
-builtins.list[builtins.list[UnboundType[_T]]]D
builtins.list[UnboundType[_T]]
UnboundType[_T]"builtins.list"builtins.listá
.builtins.list[builtins.tuple[UnboundType[_T]]]F
builtins.tuple[UnboundType[_T]]
UnboundType[_T]"builtins.tuple"builtins.listÜ
.builtins.tuple[builtins.list[UnboundType[_T]]]D
builtins.list[UnboundType[_T]]
UnboundType[_T]"builtins.list"builtins.tupleâ
/builtins.tuple[builtins.tuple[UnboundType[_T]]]F
builtins.tuple[UnboundType[_T]]
UnboundType[_T]"builtins.tuple"builtins.tuple"tkinter._TkinterSequence2D*ß
toú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None z35z36z37z38z39z310*«
writetkinter.PhotoImage.write"
None*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None *∞
from_coordsú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None z35z36z37z38z39z310*‚
transparency_get#tkinter.PhotoImage.transparency_get"
builtins.bool"builtins.bool*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*#
x
builtins.int"builtins.int*#
y
builtins.int"builtins.intz38z39z310*˘
transparency_set#tkinter.PhotoImage.transparency_set"
None*2
self(
tkinter.PhotoImage"tkinter.PhotoImage*#
x
builtins.int"builtins.int*#
y
builtins.int"builtins.int*+
boolean
builtins.bool"builtins.boolz38z39z310j35j36j37j38j39j310D
overloadtyping.overload"
	typing._F*
f
	typing._Fz27\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310Ü
write_docstringdictturtle.write_docstringdict"
None*,
filename
builtins.str"builtins.str z27z35z36z37z38z39z310B
mainloopturtle.mainloop"
Nonez27z35z36z37z38z39z310<
clearturtle.clear"
Nonez27z35z36z37z38z39z310Ñ
setworldcoordinatesturtle.setworldcoordinates"
None*)
llx 
builtins.float"builtins.float*)
lly 
builtins.float"builtins.float*)
urx 
builtins.float"builtins.float*)
ury 
builtins.float"builtins.floatz27z35z36z37z38z39z310£
register_shapeturtle.register_shape"
None*&
name
builtins.str"builtins.str*™
shapeú
YUnion[TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]],turtle.Shape,None]î
@TypeAlias[typing.Sequence[Tuple[builtins.float,builtins.float]]]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence"turtle._PolygonCoords
turtle.Shape"turtle.Shape
None z27z35z36z37z38z39z310<
resetturtle.reset"
Nonez27z35z36z37z38z39z310Ö
turtlesturtle.turtles"M
builtins.list[turtle.Turtle]
turtle.Turtle"turtle.Turtle"builtins.listz27z35z36z37z38z39z310>
updateturtle.update"
Nonez27z35z36z37z38z39z310^
window_widthturtle.window_width"
builtins.int"builtins.intz27z35z36z37z38z39z310`
window_heightturtle.window_height"
builtins.int"builtins.intz27z35z36z37z38z39z310M
	getcanvasturtle.getcanvas"*
TypeAlias[Any]
Any"turtle.Canvasz27X
	getcanvasturtle.getcanvas" 
tkinter.Canvas"tkinter.Canvasz35z36z37z38z39z310Ü
	getshapesturtle.getshapes"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz27z35z36z37z38z39z310Ú
onclickturtle.onclick"
None*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *1
add&
Union[Any,None]
Any
None z27z35z36z37z38z39z310π
onkeyturtle.onkey"
None*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*%
key
builtins.str"builtins.strz27z35z36z37z38z39z310Ú
listenturtle.listen"
None*X
xdummyJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *X
ydummyJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z27z35z36z37z38z39z310Ω
ontimerturtle.ontimer"
None*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*%
t
builtins.int"builtins.int z27z35z36z37z38z39z310√
setupturtle.setup"
None*-
width 
builtins.float"builtins.float *.
height 
builtins.float"builtins.float *R
startxD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
startyD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310k
titleturtle.title"
None*-
titlestring
builtins.str"builtins.strz27z35z36z37z38z39z3108
bye
turtle.bye"
Nonez27z35z36z37z38z39z310H
exitonclickturtle.exitonclick"
Nonez27z35z36z37z38z39z310V
Screenturtle.Screen" 
turtle._Screen"turtle._Screenz27z35z36z37z38z39z310t
degreesturtle.degrees"
None*2

fullcircle 
builtins.float"builtins.float z27z35z36z37z38z39z310@
radiansturtle.radians"
Nonez27z35z36z37z38z39z310p
forwardturtle.forward"
None*.
distance 
builtins.float"builtins.floatz27z35z36z37z38z39z310j
backturtle.back"
None*.
distance 
builtins.float"builtins.floatz27z35z36z37z38z39z310i
rightturtle.right"
None*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310g
leftturtle.left"
None*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310‡
pos
turtle.pos"Ø
/TypeAlias[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle.Vec2Dz27z35z36z37z38z39z310R
xcorturtle.xcor" 
builtins.float"builtins.floatz27z35z36z37z38z39z310R
ycorturtle.ycor" 
builtins.float"builtins.floatz27z35z36z37z38z39z310:
hometurtle.home"
Nonez27z35z36z37z38z39z310c
setxturtle.setx"
None*'
x 
builtins.float"builtins.floatz27z35z36z37z38z39z310c
setyturtle.sety"
None*'
y 
builtins.float"builtins.floatz27z35z36z37z38z39z310X
headingturtle.heading" 
builtins.float"builtins.floatz27z35z36z37z38z39z310v

setheadingturtle.setheading"
None*.
to_angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310ô
circleturtle.circle"
None*,
radius 
builtins.float"builtins.float*X
extentJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Q
stepsD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310<
penupturtle.penup"
Nonez27z35z36z37z38z39z310@
pendownturtle.pendown"
Nonez27z35z36z37z38z39z310T
isdownturtle.isdown"
builtins.bool"builtins.boolz27z35z36z37z38z39z310F

showturtleturtle.showturtle"
Nonez27z35z36z37z38z39z310F

hideturtleturtle.hideturtle"
Nonez27z35z36z37z38z39z310Z
	isvisibleturtle.isvisible"
builtins.bool"builtins.boolz27z35z36z37z38z39z310ú
setundobufferturtle.setundobuffer"
None*N
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez27z35z36z37z38z39z310h
undobufferentriesturtle.undobufferentries"
builtins.int"builtins.intz27z35z36z37z38z39z310w
settiltangleturtle.settiltangle"
None*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310g
tiltturtle.tilt"
None*+
angle 
builtins.float"builtins.floatz27z35z36z37z38z39z310;
stampturtle.stamp"
Anyz27z35z36z37z38z39z310˜

clearstampturtle.clearstamp"
None*Æ
stampid†
0Union[builtins.int,builtins.tuple[builtins.int]]
builtins.int"builtins.intL
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuplez27z35z36z37z38z39z310ó
clearstampsturtle.clearstamps"
None*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None z27z35z36z37z38z39z310V
fillingturtle.filling"
builtins.bool"builtins.boolz27z35z36z37z38z39z310F

begin_fillturtle.begin_fill"
Nonez27z35z36z37z38z39z310B
end_fillturtle.end_fill"
Nonez27z35z36z37z38z39z310Å
dot
turtle.dot"
None*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Colorz27Ü
dot
turtle.dot"
None*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Colorz35z36z37z38z39z310€
writeturtle.write"
None*+
arg"
builtins.object"builtins.object**
move
builtins.bool"builtins.bool *)
align
builtins.str"builtins.str *ò
fontã
-Tuple[builtins.str,builtins.int,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str z27z35z36z37z38z39z310F

begin_polyturtle.begin_poly"
Nonez27z35z36z37z38z39z310B
end_polyturtle.end_poly"
Nonez27z35z36z37z38z39z310√
get_polyturtle.get_poly"à
AUnion[typing.Sequence[Tuple[builtins.float,builtins.float]],None]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence
Nonez27z35z36z37z38z39z310f
	getscreenturtle.getscreen"*
turtle.TurtleScreen"turtle.TurtleScreenz27z35z36z37z38z39z310Z
	getturtleturtle.getturtle"
turtle.Turtle"turtle.Turtlez27z35z36z37z38z39z310ˆ
	onreleaseturtle.onrelease"
None*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *1
add&
Union[Any,None]
Any
None z27z35z36z37z38z39z310
ondragturtle.ondrag"
None*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*'
btn
builtins.int"builtins.int *1
add&
Union[Any,None]
Any
None z27z35z36z37z38z39z310:
undoturtle.undo"
Nonez27z35z36z37z38z39z310R
cloneturtle.clone"
turtle.Turtle"turtle.Turtlez27z35z36z37z38z39z310œ
	textinputturtle.textinput"D
Union[builtins.str,None]
builtins.str"builtins.str
None*'
title
builtins.str"builtins.str*(
prompt
builtins.str"builtins.strz35z36z37z38z39z310‚
numinputturtle.numinput"J
Union[builtins.float,None] 
builtins.float"builtins.float
None*'
title
builtins.str"builtins.str*(
prompt
builtins.str"builtins.str*Y
defaultJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *X
minvalJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *X
maxvalJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z35z36z37z38z39z310È

onkeypressturtle.onkeypress"
None*T
funK
CallableType[builtins.function]&
builtins.function"builtins.function*O
keyD
Union[builtins.str,None]
builtins.str"builtins.str
None z35z36z37z38z39z310…
get_shapepolyturtle.get_shapepoly"à
AUnion[typing.Sequence[Tuple[builtins.float,builtins.float]],None]∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence
Nonez35z36z37z38z39z310"‹
modeturtle.modeU
modeturtle.mode"
builtins.str"builtins.str*
mode
None 0:overloadXS
modeturtle.mode"
None*&
mode
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"310"Ñ
	colormodeturtle.colormoded
	colormodeturtle.colormode" 
builtins.float"builtins.float*
cmode
None 0:overloadXb
	colormodeturtle.colormode"
None*+
cmode 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"310"Ë
bgcolorturtle.bgcolorV
bgcolorturtle.bgcolor"-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadX¡
bgcolorturtle.bgcolor"
None*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX¨
bgcolorturtle.bgcolor"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"27"Ì
bgcolorturtle.bgcolorV
bgcolorturtle.bgcolor"-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadX±
bgcolorturtle.bgcolor"
None*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX¨
bgcolorturtle.bgcolor"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"310"∂
tracerturtle.tracerV
tracerturtle.tracer"
builtins.int"builtins.int*
n
None 0:overloadXß
tracerturtle.tracer"
None*#
n
builtins.int"builtins.int*Q
delayD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:overloadX"27"35"36"37"38"39"310"‰
delayturtle.delayX
delayturtle.delay"
builtins.int"builtins.int*
delay
None 0:overloadXV
delayturtle.delay"
None*'
delay
builtins.int"builtins.int0:overloadX"27"35"36"37"38"39"310"Ë
bgpicturtle.bgpicZ
bgpicturtle.bgpic"
builtins.str"builtins.str*
picname
None 0:overloadXX
bgpicturtle.bgpic"
None*)
picname
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"310"«

screensizeturtle.screensize⁄

screensizeturtle.screensize"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*
	canvwidth
None *

canvheight
None *
bg
None 0:overloadXƒ

screensizeturtle.screensize"
None*+
	canvwidth
builtins.int"builtins.int*,

canvheight
builtins.int"builtins.int*Ø
bg§
PUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float],None]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None 0:overloadX"27"–

screensizeturtle.screensize⁄

screensizeturtle.screensize"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*
	canvwidth
None *

canvheight
None *
bg
None 0:overloadX∏

screensizeturtle.screensize"
None*+
	canvwidth
builtins.int"builtins.int*,

canvheight
builtins.int"builtins.int*£
bgò
LUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float],None]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float
None 0:overloadX"35"36"37"38"39"310"Â
gototurtle.goto≥
gototurtle.goto"
None*s
xl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*
y
None 0:overloadX}
gototurtle.goto"
None*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"310"õ
distanceturtle.distance¿
distanceturtle.distance" 
builtins.float"builtins.float*ﬂ
x◊
=Union[turtle.TNavigator,Tuple[builtins.float,builtins.float]]&
turtle.TNavigator"turtle.TNavigatorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*
y
None 0:overloadXù
distanceturtle.distance" 
builtins.float"builtins.float*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"310"ï
towardsturtle.towardsæ
towardsturtle.towards" 
builtins.float"builtins.float*ﬂ
x◊
=Union[turtle.TNavigator,Tuple[builtins.float,builtins.float]]&
turtle.TNavigator"turtle.TNavigatorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*
y
None 0:overloadXõ
towardsturtle.towards" 
builtins.float"builtins.float*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"310"Ç

resizemodeturtle.resizemodeb

resizemodeturtle.resizemode"
builtins.str"builtins.str*
rmode
None 0:overloadX`

resizemodeturtle.resizemode"
None*'
rmode
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"310"
pensizeturtle.pensize\
pensizeturtle.pensize"
builtins.int"builtins.int*
width
None 0:overloadXZ
pensizeturtle.pensize"
None*'
width
builtins.int"builtins.int0:overloadX"27"35"36"37"38"39"310"Û
speedturtle.speedX
speedturtle.speed"
builtins.int"builtins.int*
speed
None 0:overloadX‰
speedturtle.speed"
None*¥
speed®
-TypeAlias[Union[builtins.str,builtins.float]]f
"Union[builtins.str,builtins.float]
builtins.str"builtins.str 
builtins.float"builtins.float"turtle._Speed0:overloadX"27"35"36"37"38"39"310"
pencolorturtle.pencolorX
pencolorturtle.pencolor"-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadX√
pencolorturtle.pencolor"
None*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadXÆ
pencolorturtle.pencolor"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"27"ı
pencolorturtle.pencolorX
pencolorturtle.pencolor"-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadX≥
pencolorturtle.pencolor"
None*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadXÆ
pencolorturtle.pencolor"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"310"¯
	fillcolorturtle.fillcolorZ
	fillcolorturtle.fillcolor"-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadX≈
	fillcolorturtle.fillcolor"
None*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX∞
	fillcolorturtle.fillcolor"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"27"˝
	fillcolorturtle.fillcolorZ
	fillcolorturtle.fillcolor"-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadXµ
	fillcolorturtle.fillcolor"
None*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX∞
	fillcolorturtle.fillcolor"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"310"Ö
colorturtle.color¨
colorturtle.color"Ü
$Tuple[TypeAlias[Any],TypeAlias[Any]]-
TypeAlias[Any]
Any"turtle._AnyColor-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadXΩ
colorturtle.color"
None*ç
colorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX®
colorturtle.color"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadXœ
colorturtle.color"
None*é
color1Å
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color*é
color2Å
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX"27"Í
colorturtle.color¨
colorturtle.color"Ü
$Tuple[TypeAlias[Any],TypeAlias[Any]]-
TypeAlias[Any]
Any"turtle._AnyColor-
TypeAlias[Any]
Any"turtle._AnyColor0:overloadX≠
colorturtle.color"
None*˝
colorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX®
colorturtle.color"
None*'
r 
builtins.float"builtins.float*'
g 
builtins.float"builtins.float*'
b 
builtins.float"builtins.float0:overloadXØ
colorturtle.color"
None*˛
color1Ò
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color*˛
color2Ò
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color0:overloadX"35"36"37"38"39"310"é
pen
turtle.penª
pen
turtle.pen"ô
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"turtle._PenState0:overloadX∏
pen
turtle.pen"
None*û
pení
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *+
shown
builtins.bool"builtins.bool *-
pendown
builtins.bool"builtins.bool *í
pencolorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *ì
	fillcolorÅ
VTypeAlias[Union[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]]ï
KUnion[builtins.unicode,Tuple[builtins.float,builtins.float,builtins.float]]$
builtins.unicode"builtins.unicodeù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *+
pensize
builtins.int"builtins.int *)
speed
builtins.int"builtins.int *.

resizemode
builtins.str"builtins.str *Å
stretchfactorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float *+
outline
builtins.int"builtins.int *,
tilt 
builtins.float"builtins.float 0:overloadX"27"É
pen
turtle.penª
pen
turtle.pen"ô
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"turtle._PenState0:overloadXò
pen
turtle.pen"
None*û
pení
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *+
shown
builtins.bool"builtins.bool *-
pendown
builtins.bool"builtins.bool *Ç
pencolorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *É
	fillcolorÒ
RTypeAlias[Union[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]]â
GUnion[builtins.str,Tuple[builtins.float,builtins.float,builtins.float]]
builtins.str"builtins.strù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"turtle._Color *+
pensize
builtins.int"builtins.int *)
speed
builtins.int"builtins.int *.

resizemode
builtins.str"builtins.str *Å
stretchfactorl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float *+
outline
builtins.int"builtins.int *,
tilt 
builtins.float"builtins.float 0:overloadX"35"36"37"38"39"310"‚
shapeturtle.shapeW
shapeturtle.shape"
builtins.str"builtins.str*
name
None 0:overloadXU
shapeturtle.shape"
None*&
name
builtins.str"builtins.str0:overloadX"27"35"36"37"38"39"310"Ÿ
	shapesizeturtle.shapesizeÀ
	shapesizeturtle.shapesize"ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:overloadXŒ
	shapesizeturtle.shapesize"
None*]
stretch_widJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *]
stretch_lenJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Y
outlineJ
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"27"35"36"37"38"39"310"Ñ
	tiltangleturtle.tiltangled
	tiltangleturtle.tiltangle" 
builtins.float"builtins.float*
angle
None 0:overloadXb
	tiltangleturtle.tiltangle"
None*+
angle 
builtins.float"builtins.float0:overloadX"27"35"36"37"38"39"310"å
shearfactorturtle.shearfactorh
shearfactorturtle.shearfactor" 
builtins.float"builtins.float*
shear
None 0:overloadXf
shearfactorturtle.shearfactor"
None*+
shear 
builtins.float"builtins.float0:overloadX"35"36"37"38"39"310"Á
shapetransformturtle.shapetransformÜ
shapetransformturtle.shapetransform"Œ
BTuple[builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:overloadXõ
shapetransformturtle.shapetransform"
None*U
t11J
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
t12J
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
t21J
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
t22J
Union[builtins.float,None] 
builtins.float"builtins.float
None 0:overloadX"35"36"37"38"39"310*R
Any
typing.Any"
builtins.object"builtins.object*27*35*36*37*38*39*310*d
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*è
onscreenclickturtle.onscreenclickK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*ã
resetscreenturtle.resetscreenK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*ã
clearscreenturtle.clearscreenK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*Ö
addshapeturtle.addshapeK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
fd	turtle.fdK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
bk	turtle.bkK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*Ö
backwardturtle.backwardK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
rt	turtle.rtK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
lt	turtle.ltK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*Ö
positionturtle.positionK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*@
setposturtle.setpos

#Unknown*27*35*36*37*38*39*310*J
setpositionturtle.setposition

#Unknown*27*35*36*37*38*39*310*}
sethturtle.sethK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*>
widthturtle.width

#Unknown*27*35*36*37*38*39*310*y
up	turtle.upK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
pu	turtle.puK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
pd	turtle.pdK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*}
downturtle.downK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
st	turtle.stK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*y
ht	turtle.htK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*Å
getpenturtle.getpenK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*H

turtlesizeturtle.turtlesize

#Unknown*27*35*36*37*38*39*310*}
doneturtle.doneK
CallableType[builtins.function]&
builtins.function"builtins.function*27*35*36*37*38*39*310*â
onkeyreleaseturtle.onkeyreleaseK
CallableType[builtins.function]&
builtins.function"builtins.function*35*36*37*38*39*310