
unicodedata…
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j27j35j36j37j38j39j310¶)
UCDunicodedata.UCD"builtins.object*≠
bidirectionalunicodedata.UCD.bidirectional"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicodez27*∫
bidirectionalunicodedata.UCD.bidirectional"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310*£
categoryunicodedata.UCD.category"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicodez27*∞
categoryunicodedata.UCD.category"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310*•
	combiningunicodedata.UCD.combining"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicodez27*≤
	combiningunicodedata.UCD.combining"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310*Ä
decimalunicodedata.UCD.decimal"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27*ç
decimalunicodedata.UCD.decimal"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310*≠
decompositionunicodedata.UCD.decomposition"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicodez27*∫
decompositionunicodedata.UCD.decomposition"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310*¸
digitunicodedata.UCD.digit"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27*â
digitunicodedata.UCD.digit"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310*≥
east_asian_width unicodedata.UCD.east_asian_width"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicodez27*¿
east_asian_width unicodedata.UCD.east_asian_width"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310*
lookupunicodedata.UCD.lookup"$
builtins.unicode"builtins.unicode*,
self"
unicodedata.UCD"unicodedata.UCD*v
__namel
$Union[builtins.unicode,builtins.str]$
builtins.unicode"builtins.unicode
builtins.str"builtins.strz27*˜
lookupunicodedata.UCD.lookup"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*p
__namef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*£
mirroredunicodedata.UCD.mirrored"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicodez27*∞
mirroredunicodedata.UCD.mirrored"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310*Ü
nameunicodedata.UCD.name"d
&Union[builtins.unicode,unicodedata._T]$
builtins.unicode"builtins.unicode
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27*á
nameunicodedata.UCD.name"X
"Union[builtins.str,unicodedata._T]
builtins.str"builtins.str
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310*‡
	normalizeunicodedata.UCD.normalize"$
builtins.unicode"builtins.unicode*,
self"
unicodedata.UCD"unicodedata.UCD*.
__form$
builtins.unicode"builtins.unicode*0
__unistr$
builtins.unicode"builtins.unicodez27*›
	normalizeunicodedata.UCD.normalize"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*&
__form
builtins.str"builtins.str*(
__unistr
builtins.str"builtins.strz35z36z37z38z39z310*Ü
numericunicodedata.UCD.numeric"^
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.float
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27*ì
numericunicodedata.UCD.numeric"^
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.float
unicodedata._T*,
self"
unicodedata.UCD"unicodedata.UCD*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310j27j35j36j37j38j39j310É
bidirectionalunicodedata.bidirectional"$
builtins.unicode"builtins.unicode*-
__chr$
builtins.unicode"builtins.unicodez27à
bidirectionalunicodedata.bidirectional"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310y
categoryunicodedata.category"$
builtins.unicode"builtins.unicode*-
__chr$
builtins.unicode"builtins.unicodez27~
categoryunicodedata.category"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310s
	combiningunicodedata.combining"
builtins.int"builtins.int*-
__chr$
builtins.unicode"builtins.unicodez27Ä
	combiningunicodedata.combining"
builtins.int"builtins.int*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310Œ
decimalunicodedata.decimal"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27€
decimalunicodedata.decimal"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310É
decompositionunicodedata.decomposition"$
builtins.unicode"builtins.unicode*-
__chr$
builtins.unicode"builtins.unicodez27à
decompositionunicodedata.decomposition"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310 
digitunicodedata.digit"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27◊
digitunicodedata.digit"X
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.int
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310â
east_asian_widthunicodedata.east_asian_width"$
builtins.unicode"builtins.unicode*-
__chr$
builtins.unicode"builtins.unicodez27é
east_asian_widthunicodedata.east_asian_width"
builtins.str"builtins.str*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310æ
lookupunicodedata.lookup"$
builtins.unicode"builtins.unicode*v
__namel
$Union[builtins.unicode,builtins.str]$
builtins.unicode"builtins.unicode
builtins.str"builtins.strz27≈
lookupunicodedata.lookup"
builtins.str"builtins.str*p
__namef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz35z36z37z38z39z310q
mirroredunicodedata.mirrored"
builtins.int"builtins.int*-
__chr$
builtins.unicode"builtins.unicodez27~
mirroredunicodedata.mirrored"
builtins.int"builtins.int*%
__chr
builtins.str"builtins.strz35z36z37z38z39z310‘
nameunicodedata.name"d
&Union[builtins.unicode,unicodedata._T]$
builtins.unicode"builtins.unicode
unicodedata._T*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27’
nameunicodedata.name"X
"Union[builtins.str,unicodedata._T]
builtins.str"builtins.str
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310Æ
	normalizeunicodedata.normalize"$
builtins.unicode"builtins.unicode*.
__form$
builtins.unicode"builtins.unicode*0
__unistr$
builtins.unicode"builtins.unicodez27´
	normalizeunicodedata.normalize"
builtins.str"builtins.str*&
__form
builtins.str"builtins.str*(
__unistr
builtins.str"builtins.strz35z36z37z38z39z310‘
numericunicodedata.numeric"^
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.float
unicodedata._T*-
__chr$
builtins.unicode"builtins.unicode*!
	__default
unicodedata._T z27·
numericunicodedata.numeric"^
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.float
unicodedata._T*%
__chr
builtins.str"builtins.str*!
	__default
unicodedata._T z35z36z37z38z39z310©
is_normalizedunicodedata.is_normalized"
builtins.bool"builtins.bool*&
__form
builtins.str"builtins.str*(
__unistr
builtins.str"builtins.strz38z39z310*R
Any
typing.Any"
builtins.object"builtins.object*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*c
	ucd_3_2_0unicodedata.ucd_3_2_0"
unicodedata.UCD"unicodedata.UCD*27*35*36*37*38*39*310*N
ucnhash_CAPIunicodedata.ucnhash_CAPI
Any*27*35*36*37*38*39*310*i
unidata_versionunicodedata.unidata_version
builtins.str"builtins.str*27*35*36*37*38*39*310*%
syssys *35*36*37*38*39*310