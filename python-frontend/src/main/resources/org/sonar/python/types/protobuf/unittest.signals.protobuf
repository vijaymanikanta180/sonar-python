
unittest.signalsä
TypeVartyping.TypeVar"builtins.object*ž
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310T
installHandlerunittest.signals.installHandler"
Nonez35z36z37z38z39z310š
registerResultunittest.signals.registerResult"
None*D
result8
unittest.result.TestResult"unittest.result.TestResultz35z36z37z38z39z310¬
removeResultunittest.signals.removeResult"
builtins.bool"builtins.bool*D
result8
unittest.result.TestResult"unittest.result.TestResultz35z36z37z38z39z310"¦
removeHandlerunittest.signals.removeHandler_
removeHandlerunittest.signals.removeHandler"
None*
method
None 0:overloadX{
removeHandlerunittest.signals.removeHandler"
unittest.signals._F*#
method
unittest.signals._F0:overloadX"35"36"37"38"39"310*/
unittestunittest *35*36*37*38*39*310*N
Any
typing.Any"
builtins.object"builtins.object*35*36*37*38*39*310*`
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*35*36*37*38*39*310