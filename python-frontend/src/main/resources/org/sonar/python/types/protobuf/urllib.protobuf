
urllibœ 
IO	typing.IO"typing.Iterator*ä
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*ä
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*~
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27*î
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*~
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ñ
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27*ö
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*∏
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27*Ë
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27*Ê
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27*ö
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*ê
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*Í
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27*ö
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¨
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27*Ÿ

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*æ
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*¥
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*©
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27Pj27É
Mappingtyping.Mapping"typing.Iterable"typing.Container*–
__getitem__typing.Mapping.__getitem__"
typing._VT_co*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:abstractmethod@z27*ƒ
keystyping.Mapping.keys":
builtins.list[typing._KT]

typing._KT"builtins.list*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*Œ
valuestyping.Mapping.values"@
builtins.list[typing._VT_co]
typing._VT_co"builtins.list*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*î
itemstyping.Mapping.items"á
.builtins.list[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"builtins.list*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*–
iterkeystyping.Mapping.iterkeys">
typing.Iterator[typing._KT]

typing._KT"typing.Iterator*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*⁄

itervaluestyping.Mapping.itervalues"D
typing.Iterator[typing._VT_co]
typing._VT_co"typing.Iterator*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*†
	iteritemstyping.Mapping.iteritems"ã
0typing.Iterator[Tuple[typing._KT,typing._VT_co]]F
Tuple[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Iterator*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mappingz27*ﬂ
__contains__typing.Mapping.__contains__"
builtins.bool"builtins.bool*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*'
o"
builtins.object"builtins.objectz27*æ
__len__typing.Mapping.__len__"
builtins.int"builtins.int*e
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping0:abstractmethod@z272∆
gettyping.Mapping.get„
gettyping.Mapping.get":
Union[typing._VT_co,None]
typing._VT_co
None*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT0:overloadX¿
gettyping.Mapping.get"D
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T*g
self]
(typing.Mapping[typing._KT,typing._VT_co]

typing._KT
typing._VT_co"typing.Mapping*
k

typing._KT*Q
defaultD
Union[typing._VT_co,typing._T]
typing._VT_co
	typing._T0:overloadX"27Pj27â
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27è
TypeVartyping.TypeVar"builtins.object*ﬁ
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*H
bound;
Union[Type[Any],None]
	Type[Any]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z27j27¸
ContentTooShortErrorurllib.ContentTooShortError"builtins.IOError*∞
__init__$urllib.ContentTooShortError.__init__"
None*D
self:
urllib.ContentTooShortError"urllib.ContentTooShortError*
message
Any*
content
Anyz27j27ö
	URLopenerurllib.URLopener"builtins.object*ó
__init__urllib.URLopener.__init__"
None*.
self$
urllib.URLopener"urllib.URLopener*Ü
proxiesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *
context
Any *
x509
Anyz27*1
__del__urllib.URLopener.__del__*
selfz27*-
closeurllib.URLopener.close*
selfz27*1
cleanupurllib.URLopener.cleanup*
selfz27*?
	addheaderurllib.URLopener.addheader*
self*
argsz27*ö
openurllib.URLopener.open"
Any*.
self$
urllib.URLopener"urllib.URLopener*)
fullurl
builtins.str"builtins.str*
data
Any z27*T
open_unknownurllib.URLopener.open_unknown*
self*
fullurl*

data z27*k
open_unknown_proxy#urllib.URLopener.open_unknown_proxy*
self*	
proxy*
fullurl*

data z27*j
retrieveurllib.URLopener.retrieve*
self*
url*
filename *

reporthook *

data z27*J
	open_httpurllib.URLopener.open_http*
self*
url*

data z27*z

http_errorurllib.URLopener.http_error*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*~
http_error_default#urllib.URLopener.http_error_default*
self*
url*
fp*
errcode*

errmsg*
headersz27*L

open_httpsurllib.URLopener.open_https*
self*
url*

data z27*>
	open_fileurllib.URLopener.open_file*
self*
urlz27*J
open_local_file urllib.URLopener.open_local_file*
self*
urlz27*<
open_ftpurllib.URLopener.open_ftp*
self*
urlz27*J
	open_dataurllib.URLopener.open_data*
self*
url*

data z27j27Í
FancyURLopenerurllib.FancyURLopener"urllib.URLopener*ö
__init__urllib.FancyURLopener.__init__"
None*8
self.
urllib.FancyURLopener"urllib.FancyURLopener*
args
Any*
kwargs
Anyz27*É
http_error_default(urllib.FancyURLopener.http_error_default*
self*
url*
fp*
errcode*

errmsg*
headersz27*á
http_error_302$urllib.FancyURLopener.http_error_302*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*ã
redirect_internal'urllib.FancyURLopener.redirect_internal*
self*
url*
fp*
errcode*

errmsg*
headers*
dataz27*á
http_error_301$urllib.FancyURLopener.http_error_301*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*á
http_error_303$urllib.FancyURLopener.http_error_303*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*á
http_error_307$urllib.FancyURLopener.http_error_307*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*á
http_error_401$urllib.FancyURLopener.http_error_401*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*á
http_error_407$urllib.FancyURLopener.http_error_407*
self*
url*
fp*
errcode*

errmsg*
headers*

data z27*~
retry_proxy_http_basic_auth1urllib.FancyURLopener.retry_proxy_http_basic_auth*
self*
url*	
realm*

data z27*Ä
retry_proxy_https_basic_auth2urllib.FancyURLopener.retry_proxy_https_basic_auth*
self*
url*	
realm*

data z27*r
retry_http_basic_auth+urllib.FancyURLopener.retry_http_basic_auth*
self*
url*	
realm*

data z27*t
retry_https_basic_auth,urllib.FancyURLopener.retry_https_basic_auth*
self*
url*	
realm*

data z27*n
get_user_passwd%urllib.FancyURLopener.get_user_passwd*
self*
host*	
realm*
clear_cache z27*a
prompt_user_passwd(urllib.FancyURLopener.prompt_user_passwd*
self*
host*	
realmz27j27â

ftpwrapperurllib.ftpwrapper"builtins.object*˙
__init__urllib.ftpwrapper.__init__"
None*0
self&
urllib.ftpwrapper"urllib.ftpwrapper*
user
Any*
passwd
Any*
host
Any*
port
Any*
dirs
Any*
timeout
Any *

persistent
Any z27*,
initurllib.ftpwrapper.init*
selfz27*H
retrfileurllib.ftpwrapper.retrfile*
self*
file*
typez27*:
endtransferurllib.ftpwrapper.endtransfer*
selfz27*.
closeurllib.ftpwrapper.close*
selfz27*8

file_closeurllib.ftpwrapper.file_close*
selfz27*8

real_closeurllib.ftpwrapper.real_close*
selfz27j27¶
addbaseurllib.addbase"builtins.object*ê
readurllib.addbase.read"
builtins.str"builtins.str**
self 
urllib.addbase"urllib.addbase*%
n
builtins.int"builtins.int z27*ú
readlineurllib.addbase.readline"
builtins.str"builtins.str**
self 
urllib.addbase"urllib.addbase*)
limit
builtins.int"builtins.int z27*À
	readlinesurllib.addbase.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list**
self 
urllib.addbase"urllib.addbase*(
hint
builtins.int"builtins.int z27*m
filenourllib.addbase.fileno"
builtins.int"builtins.int**
self 
urllib.addbase"urllib.addbasez27*S
__iter__urllib.addbase.__iter__"
urllib._AIUT*
self
urllib._AIUTz27*i
nexturllib.addbase.next"
builtins.str"builtins.str**
self 
urllib.addbase"urllib.addbasez27*n
__init__urllib.addbase.__init__"
None**
self 
urllib.addbase"urllib.addbase*
fp
Anyz27*W
closeurllib.addbase.close"
None**
self 
urllib.addbase"urllib.addbasez27j27ò
addclosehookurllib.addclosehook"urllib.addbase*¨
__init__urllib.addclosehook.__init__"
None*4
self*
urllib.addclosehook"urllib.addclosehook*
fp
Any*
	closehook
Any*
hookargs
Anyz27*0
closeurllib.addclosehook.close*
selfz27j27ﬂ
addinfourllib.addinfo"urllib.addbase*Ñ
__init__urllib.addinfo.__init__"
None**
self 
urllib.addinfo"urllib.addinfo*
fp
Any*
headers
Anyz27*)
infourllib.addinfo.info*
selfz27j27˛

addinfourlurllib.addinfourl"urllib.addbase*¥
__init__urllib.addinfourl.__init__"
None*0
self&
urllib.addinfourl"urllib.addinfourl*
fp
Any*
headers
Any*
url
Any*
code
Any z27*,
infourllib.addinfourl.info*
selfz27*2
getcodeurllib.addinfourl.getcode*
selfz27*0
geturlurllib.addinfourl.geturl*
selfz27j27[
url2pathnameurllib.url2pathname"
typing.AnyStr*
pathname
typing.AnyStrz27[
pathname2urlurllib.pathname2url"
typing.AnyStr*
pathname
typing.AnyStrz27†
urlopenurllib.urlopen"$
typing.IO[Any]
Any"	typing.IO*%
url
builtins.str"builtins.str*
data
Any *Ü
proxiesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *
context
Any z27k
urlretrieveurllib.urlretrieve*
url*
filename *

reporthook *

data *
context z27-

urlcleanupurllib.urlcleanup"
Nonez27$
unwrapurllib.unwrap*
urlz27*
	splittypeurllib.splittype*
urlz27*
	splithosturllib.splithost*
urlz27+
	splituserurllib.splituser*
hostz27/
splitpasswdurllib.splitpasswd*
userz27+
	splitporturllib.splitport*
hostz27<

splitnporturllib.splitnport*
host*
defport z27,

splitqueryurllib.splitquery*
urlz27(
splittagurllib.splittag*
urlz27*
	splitattrurllib.splitattr*
urlz27-

splitvalueurllib.splitvalue*
attrz27J
unquoteurllib.unquote"
typing.AnyStr*
s
typing.AnyStrz27T
unquote_plusurllib.unquote_plus"
typing.AnyStr*
s
typing.AnyStrz27x
quoteurllib.quote"
typing.AnyStr*
s
typing.AnyStr*0
safe$
builtins.unicode"builtins.unicode z27Ç

quote_plusurllib.quote_plus"
typing.AnyStr*
s
typing.AnyStr*0
safe$
builtins.unicode"builtins.unicode z27Ω
	urlencodeurllib.urlencode"
builtins.str"builtins.str*Â
queryŸ
>Union[typing.Sequence[Tuple[Any,Any]],typing.Mapping[Any,Any]]X
typing.Sequence[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"typing.Sequence;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping*
doseq
Any z27ú

getproxiesurllib.getproxies"w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mappingz27X
proxy_bypassurllib.proxy_bypass"
Any*&
host
builtins.str"builtins.strz27*9
Any
typing.Any"
builtins.object"builtins.object*27*E
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*E
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27