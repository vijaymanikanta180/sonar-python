
urlparseŸ

NamedTupletyping.NamedTuple"builtins.tuple*–
__init__typing.NamedTuple.__init__"
None*0
self&
typing.NamedTuple"typing.NamedTuple*2
typename$
builtins.unicode"builtins.unicode*û
fieldsè
,typing.Iterable[Tuple[builtins.unicode,Any]]N
Tuple[builtins.unicode,Any]$
builtins.unicode"builtins.unicode
Any"typing.Iterable *
kwargs
Anyz27*±
_maketyping.NamedTuple._make"
	typing._T*+
cls"
Type[typing._T]
	typing._T*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:classmethodpz27*≥
_asdicttyping.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*0
self&
typing.NamedTuple"typing.NamedTuplez27*g
_replacetyping.NamedTuple._replace"
	typing._T*
self
	typing._T*
kwargs
Anyz27j27â
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27†
ResultMixinurlparse.ResultMixin"builtins.object*π
usernameurlparse.ResultMixin.username"D
Union[builtins.str,None]
builtins.str"builtins.str
None*6
self,
urlparse.ResultMixin"urlparse.ResultMixin0:property`z27*π
passwordurlparse.ResultMixin.password"D
Union[builtins.str,None]
builtins.str"builtins.str
None*6
self,
urlparse.ResultMixin"urlparse.ResultMixin0:property`z27*π
hostnameurlparse.ResultMixin.hostname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*6
self,
urlparse.ResultMixin"urlparse.ResultMixin0:property`z27*±
porturlparse.ResultMixin.port"D
Union[builtins.int,None]
builtins.int"builtins.int
None*6
self,
urlparse.ResultMixin"urlparse.ResultMixin0:property`z27j27æ	
_SplitResulturlparse._SplitResult"builtins.tuple*“
_replaceurlparse._SplitResult._replace"
urlparse._SplitResult._NT*(
_self
urlparse._SplitResult._NT**
scheme
builtins.str"builtins.str **
netloc
builtins.str"builtins.str *(
path
builtins.str"builtins.str *)
query
builtins.str"builtins.str *,
fragment
builtins.str"builtins.str z27*Í
__new__urlparse._SplitResult.__new__"
urlparse._SplitResult._NT*L
_clsB
Type[urlparse._SplitResult._NT]
urlparse._SplitResult._NT*(
scheme
builtins.str"builtins.str*(
netloc
builtins.str"builtins.str*&
path
builtins.str"builtins.str*'
query
builtins.str"builtins.str**
fragment
builtins.str"builtins.strz27*Ø
_asdicturlparse._SplitResult._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*(
_self
urlparse._SplitResult._NTz27*é
_makeurlparse._SplitResult._make"
urlparse._SplitResult._NT*L
_clsB
Type[urlparse._SplitResult._NT]
urlparse._SplitResult._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz27j27ç
SplitResulturlparse.SplitResult"urlparse._SplitResult"urlparse.ResultMixin*∂
geturlurlparse.SplitResult.geturl"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz27j27î

_ParseResulturlparse._ParseResult"builtins.tuple*˛
_replaceurlparse._ParseResult._replace"
urlparse._ParseResult._NT*(
_self
urlparse._ParseResult._NT**
scheme
builtins.str"builtins.str **
netloc
builtins.str"builtins.str *(
path
builtins.str"builtins.str **
params
builtins.str"builtins.str *)
query
builtins.str"builtins.str *,
fragment
builtins.str"builtins.str z27*î
__new__urlparse._ParseResult.__new__"
urlparse._ParseResult._NT*L
_clsB
Type[urlparse._ParseResult._NT]
urlparse._ParseResult._NT*(
scheme
builtins.str"builtins.str*(
netloc
builtins.str"builtins.str*&
path
builtins.str"builtins.str*(
params
builtins.str"builtins.str*'
query
builtins.str"builtins.str**
fragment
builtins.str"builtins.strz27*Ø
_asdicturlparse._ParseResult._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*(
_self
urlparse._ParseResult._NTz27*é
_makeurlparse._ParseResult._make"
urlparse._ParseResult._NT*L
_clsB
Type[urlparse._ParseResult._NT]
urlparse._ParseResult._NT*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz27j27–
ParseResulturlparse.ParseResult"urlparse._ParseResult"urlparse.ResultMixin*˘
geturlurlparse.ParseResult.geturl"≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String*ó
selfå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz27j27D
overloadtyping.overload"
	typing._F*
f
	typing._Fz271
clear_cacheurlparse.clear_cache"
Nonez27Ï
urlparseurlparse.urlparse"å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ω
url≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String*¬
scheme≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String *5
allow_fragments
builtins.bool"builtins.bool z27¡
urlspliturlparse.urlsplit"·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ω
url≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String*¬
scheme≥
/TypeAlias[Union[builtins.str,builtins.unicode]]l
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode"urlparse._String *5
allow_fragments
builtins.bool"builtins.bool z27¢
urljoinurlparse.urljoin"
typing.AnyStr*
base
typing.AnyStr*
url
typing.AnyStr*5
allow_fragments
builtins.bool"builtins.bool z27ç
	urldefragurlparse.urldefrag"L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr*
url
typing.AnyStrz27L
unquoteurlparse.unquote"
typing.AnyStr*
s
typing.AnyStrz27Õ
parse_qsurlparse.parse_qs"ü
9builtins.dict[typing.AnyStr,builtins.list[typing.AnyStr]]
typing.AnyStr@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list"builtins.dict*
qs
typing.AnyStr*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool z27æ
	parse_qslurlparse.parse_qsl"ê
1builtins.list[Tuple[typing.AnyStr,typing.AnyStr]]L
"Tuple[typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr"builtins.list*
qs
typing.AnyStr*5
keep_blank_values
builtins.int"builtins.int *4
strict_parsing
builtins.bool"builtins.bool z27"›

urlunparseurlparse.urlunparse†

urlunparseurlparse.urlunparse"
typing.AnyStr*€
data–
ZTuple[typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr0:overloadXí

urlunparseurlparse.urlunparse"
typing.AnyStr*N
dataD
typing.Sequence[typing.AnyStr]
typing.AnyStr"typing.Sequence0:overloadX"27"º

urlunspliturlparse.urlunsplitˇ

urlunspliturlparse.urlunsplit"
typing.AnyStr*∫
dataØ
LTuple[typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr,typing.AnyStr]
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr
typing.AnyStr0:overloadXí

urlunspliturlparse.urlunsplit"
typing.AnyStr*N
dataD
typing.Sequence[typing.AnyStr]
typing.AnyStr"typing.Sequence0:overloadX"27*K
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*E
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*E
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*w
uses_relativeurlparse.uses_relativeJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*s
uses_netlocurlparse.uses_netlocJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*s
uses_paramsurlparse.uses_paramsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*}
non_hierarchicalurlparse.non_hierarchicalJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*q

uses_queryurlparse.uses_queryJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*w
uses_fragmenturlparse.uses_fragmentJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*27*G
scheme_charsurlparse.scheme_chars
builtins.str"builtins.str*27*K
MAX_CACHE_SIZEurlparse.MAX_CACHE_SIZE
builtins.int"builtins.int*27