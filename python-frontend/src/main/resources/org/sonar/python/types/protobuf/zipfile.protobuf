
zipfileã	
TracebackTypetypes.TracebackType"builtins.object*Õ
tb_nexttypes.TracebackType.tb_next"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*4
self*
types.TracebackType"types.TracebackType0:property`z35z36*©
tb_frametypes.TracebackType.tb_frame""
types.FrameType"types.FrameType*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*£
tb_lastitypes.TracebackType.tb_lasti"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*•
	tb_linenotypes.TracebackType.tb_lineno"
builtins.int"builtins.int*4
self*
types.TracebackType"types.TracebackType0:property`z35z36z37z38z39z310*Ï
__init__types.TracebackType.__init__"
None*4
self*
types.TracebackType"types.TracebackType*f
tb_nextY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*0
tb_frame"
types.FrameType"types.FrameType**
tb_lasti
builtins.int"builtins.int*+
	tb_lineno
builtins.int"builtins.intz37z38z39z310j27j35j36j37j38j39j310ú&
IO	typing.IO"typing.Iterator*£
modetyping.IO.mode"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*£
nametyping.IO.name"
builtins.str"builtins.str*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*ó
closetyping.IO.close"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
closedtyping.IO.closed"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:property`z27z35z36z37z38z39z310*≠
filenotyping.IO.fileno"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*ó
flushtyping.IO.flush"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Ø
isattytyping.IO.isatty"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
readtyping.IO.read"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*%
n
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
readabletyping.IO.readable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*—
readlinetyping.IO.readline"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*)
limit
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*Å
	readlinestyping.IO.readlines"@
builtins.list[typing.AnyStr]
typing.AnyStr"builtins.list*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
hint
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*ˇ
seektyping.IO.seek"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*(
offset
builtins.int"builtins.int**
whence
builtins.int"builtins.int 0:abstractmethod@z27z35z36z37z38z39z310*≥
seekabletyping.IO.seekable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*©
telltyping.IO.tell"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*É
truncatetyping.IO.truncate"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:abstractmethod@z27z35z36z37z38z39z310*≥
writabletyping.IO.writable"
builtins.bool"builtins.bool*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*≈
writetyping.IO.write"
builtins.int"builtins.int*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*
s
typing.AnyStr0:abstractmethod@z27z35z36z37z38z39z310*Ú

writelinestyping.IO.writelines"
None*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*O
linesD
typing.Iterable[typing.AnyStr]
typing.AnyStr"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z310*Ö
nexttyping.IO.next"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27*◊
__iter__typing.IO.__iter__"D
typing.Iterator[typing.AnyStr]
typing.AnyStr"typing.Iterator*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*Õ
	__enter__typing.IO.__enter__"8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z27z35z36z37z38z39z310*¬
__exit__typing.IO.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*@
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO*ê
tä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*k
valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*f
	tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None0:abstractmethod@z27z35z36z37z38z39z310*¢
__next__typing.IO.__next__"
typing.AnyStr*B
self8
typing.IO[typing.AnyStr]
typing.AnyStr"	typing.IO0:abstractmethod@z35z36z37z38z39z310Pj27j35j36j37j38j39j310∑
Iterabletyping.Iterable"builtins.object*Â
__iter__typing.Iterable.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterable[typing._T_co]
typing._T_co"typing.Iterable0:abstractmethod@z27z35z36z37z38z39z3108PXj27j35j36j37j38j39j310ê
Patterntyping.Pattern"builtins.object*‰
searchtyping.Pattern.search"{
)Union[typing.Match[typing._AnyStr2],None]B
typing.Match[typing._AnyStr2]
typing._AnyStr2"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*‚
matchtyping.Pattern.match"{
)Union[typing.Match[typing._AnyStr2],None]B
typing.Match[typing._AnyStr2]
typing._AnyStr2"typing.Match
None*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*Ñ
splittyping.Pattern.split"D
builtins.list[typing._AnyStr2]
typing._AnyStr2"builtins.list*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*,
maxsplit
builtins.int"builtins.int z27*
findalltyping.Pattern.findall",
builtins.list[Any]
Any"builtins.list*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*x
stringl
$Union[builtins.str,builtins.unicode]
builtins.str"builtins.str$
builtins.unicode"builtins.unicode*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z27*Û
finditertyping.Pattern.finditer"Ö
.typing.Iterator[typing.Match[typing._AnyStr2]]B
typing.Match[typing._AnyStr2]
typing._AnyStr2"typing.Match"typing.Iterator*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
string
typing._AnyStr2*'
pos
builtins.int"builtins.int **
endpos
builtins.int"builtins.int z272≈
subtyping.Pattern.subı
subtyping.Pattern.sub"
typing._AnyStr2*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
repl
typing._AnyStr2*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadX≠
subtyping.Pattern.sub"
typing._AnyStr2*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*U
replK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadX"272Ÿ
subntyping.Pattern.subnæ
subntyping.Pattern.subn"Z
#Tuple[typing._AnyStr2,builtins.int]
typing._AnyStr2
builtins.int"builtins.int*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*
repl
typing._AnyStr2*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadXˆ
subntyping.Pattern.subn"Z
#Tuple[typing._AnyStr2,builtins.int]
typing._AnyStr2
builtins.int"builtins.int*L
selfB
typing.Pattern[typing.AnyStr]
typing.AnyStr"typing.Pattern*U
replK
CallableType[builtins.function]&
builtins.function"builtins.function*
string
typing._AnyStr2*)
count
builtins.int"builtins.int 0:overloadX"27Pj27â
Sequencetyping.Sequence"typing.Iterable"typing.Container"typing.Reversible*û
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*û
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
x
Anyz27*≈
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz27*∏
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*¿
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez27*§
__len__typing.Sequence.__len__"
builtins.int"builtins.int*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence0:abstractmethod@z272Ä
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"27Pj27¬
Sequencetyping.Sequence"typing.Collection"typing.Reversible*å
indextyping.Sequence.index"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Any*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int z35z36z37z38z39z310*∑
counttyping.Sequence.count"
builtins.int"builtins.int*L
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*
value
Anyz35z36z37z38z39z310*⁄
__contains__typing.Sequence.__contains__"
builtins.bool"builtins.bool*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*'
x"
builtins.object"builtins.objectz35z36z37z38z39z310*Õ
__iter__typing.Sequence.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z310*’
__reversed__typing.Sequence.__reversed__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequencez35z36z37z38z39z3102ï
__getitem__typing.Sequence.__getitem__À
__getitem__typing.Sequence.__getitem__"
typing._T_co*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*!
i
builtins.int"builtins.int0:overload:abstractmethod@XÅ
__getitem__typing.Sequence.__getitem__"B
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*J
selfB
typing.Sequence[typing._T_co]
typing._T_co"typing.Sequence*%
s 
builtins.slice"builtins.slice0:overload:abstractmethod@X"35"36"37"38"39"310Pj35j36j37j38j39j3108

BadZipfilezipfile.BadZipfile"builtins.Exceptionj27U
LargeZipFilezipfile.LargeZipFile"builtins.Exceptionj27j35j36j37j38j39j310‚(

ZipExtFilezipfile.ZipExtFile"io.BufferedIOBase*„
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*O
fileobjB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*ò
	decrypterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *3
close_fileobj
builtins.bool"builtins.bool z27*ƒ
readzipfile.ZipExtFile.read"
builtins.str"builtins.str*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*›
readzipfile.ZipExtFile.read" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36z37z38z39z310*®
readlinezipfile.ZipExtFile.readline"
builtins.str"builtins.str*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*)
limit
builtins.int"builtins.int z27*¡
readlinezipfile.ZipExtFile.readline" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*)
limit
builtins.int"builtins.int z35z36z37z38z39z310*î
__repr__zipfile.ZipExtFile.__repr__"
builtins.str"builtins.str*0
self(
zipfile.ZipExtFile"zipfile.ZipExtFilez27z35z36z37z38z39z310*ú
peekzipfile.ZipExtFile.peek"
builtins.str"builtins.str*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*%
n
builtins.int"builtins.int z27*µ
peekzipfile.ZipExtFile.peek" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*%
n
builtins.int"builtins.int z35z36z37z38z39z310*ƒ
read1zipfile.ZipExtFile.read1"
builtins.str"builtins.str*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*K
nD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez27*›
read1zipfile.ZipExtFile.read1" 
builtins.bytes"builtins.bytes*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*K
nD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez35z36z37z38z39z3102ü
__init__zipfile.ZipExtFile.__init__˚
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*E
fileobj8
zipfile._ClosableZipStream"zipfile._ClosableZipStream*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*ñ
	decrypterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*M
close_fileobj:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX˝
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*E
fileobj8
zipfile._ClosableZipStream"zipfile._ClosableZipStream*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*ò
	decrypterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *M
close_fileobj:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXÔ
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*5
fileobj(
zipfile._ZipStream"zipfile._ZipStream*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*ò
	decrypterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *O
close_fileobj:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"35"362‹

__init__zipfile.ZipExtFile.__init__∑
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*E
fileobj8
zipfile._ClosableZipStream"zipfile._ClosableZipStream*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*S
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*M
close_fileobj:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadXπ
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*E
fileobj8
zipfile._ClosableZipStream"zipfile._ClosableZipStream*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *M
close_fileobj:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:overloadX´
__init__zipfile.ZipExtFile.__init__"
None*2
self(
zipfile.ZipExtFile"zipfile.ZipExtFile*5
fileobj(
zipfile._ZipStream"zipfile._ZipStream*&
mode
builtins.str"builtins.str*/
zipinfo"
zipfile.ZipInfo"zipfile.ZipInfo*U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *O
close_fileobj:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:overloadX"37"38"39"310j27j35j36j37j38j39j310˚
_Writerzipfile._Writer"builtins.object*~
writezipfile._Writer.write"
Any*,
self"
zipfile._Writer"zipfile._Writer*#
__s
builtins.str"builtins.strz27*Æ
writezipfile._Writer.write""
builtins.object"builtins.object*,
self"
zipfile._Writer"zipfile._Writer*#
__s
builtins.str"builtins.strz35z36z37z38z39z310Xj27j35j36j37j38j39j310⁄^
ZipFilezipfile.ZipFile"builtins.object*†
__init__zipfile.ZipFile.__init__"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*®
fileù
/Union[builtins.unicode,typing.IO[builtins.str]]$
builtins.unicode"builtins.unicodeB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*0
mode$
builtins.unicode"builtins.unicode */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool z27*í
__init__zipfile.ZipFile.__init__"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*û
fileì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool z35z36*È
__init__zipfile.ZipFile.__init__"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*û
fileì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None z37*´
__init__zipfile.ZipFile.__init__"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*û
fileì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *7
strict_timestamps
builtins.bool"builtins.bool z38z39z310*z
	__enter__zipfile.ZipFile.__enter__""
zipfile.ZipFile"zipfile.ZipFile**
self"
zipfile.ZipFile"zipfile.ZipFilez27*g
	__enter__zipfile.ZipFile.__enter__"

zipfile._T*
self

zipfile._Tz35z36z37z38z39z310*Â
__exit__zipfile.ZipFile.__exit__"
None**
self"
zipfile.ZipFile"zipfile.ZipFile*ó
exc_typeä
(Union[Type[builtins.BaseException],None]R
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException
None*m
exc_valb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*c
exc_tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez27z35z36z37z38z39z310*s
closezipfile.ZipFile.close"
None*,
self"
zipfile.ZipFile"zipfile.ZipFilez27z35z36z37z38z39z310*®
getinfozipfile.ZipFile.getinfo""
zipfile.ZipInfo"zipfile.ZipInfo*,
self"
zipfile.ZipFile"zipfile.ZipFile*.
name$
builtins.unicode"builtins.unicodez27*µ
getinfozipfile.ZipFile.getinfo""
zipfile.ZipInfo"zipfile.ZipInfo*,
self"
zipfile.ZipFile"zipfile.ZipFile*&
name
builtins.str"builtins.strz35z36z37z38z39z310*ƒ
infolistzipfile.ZipFile.infolist"S
builtins.list[zipfile.ZipInfo]"
zipfile.ZipInfo"zipfile.ZipInfo"builtins.list*,
self"
zipfile.ZipFile"zipfile.ZipFilez27z35z36z37z38z39z310*Æ
namelistzipfile.ZipFile.namelist"V
builtins.list[builtins.unicode]$
builtins.unicode"builtins.unicode"builtins.list*,
self"
zipfile.ZipFile"zipfile.ZipFilez27*∑
namelistzipfile.ZipFile.namelist"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,
self"
zipfile.ZipFile"zipfile.ZipFilez35z36z37z38z39z310*ë
openzipfile.ZipFile.open"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*,
self"
zipfile.ZipFile"zipfile.ZipFile*∆
nameª
2TypeAlias[Union[builtins.unicode,zipfile.ZipInfo]]u
'Union[builtins.unicode,zipfile.ZipInfo]$
builtins.unicode"builtins.unicode"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*0
mode$
builtins.unicode"builtins.unicode *O
pwdD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
force_zip64
builtins.bool"builtins.bool z27*÷
openzipfile.ZipFile.open"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*,
self"
zipfile.ZipFile"zipfile.ZipFile*s
namei
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo*(
mode
builtins.str"builtins.str *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *1
force_zip64
builtins.bool"builtins.bool z35z36z37z38z39z310*Ï
extractzipfile.ZipFile.extract"
builtins.str"builtins.str*,
self"
zipfile.ZipFile"zipfile.ZipFile*»
memberª
2TypeAlias[Union[builtins.unicode,zipfile.ZipInfo]]u
'Union[builtins.unicode,zipfile.ZipInfo]$
builtins.unicode"builtins.unicode"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*\
pathP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *O
pwdD
Union[builtins.str,None]
builtins.str"builtins.str
None z27*ã
extractzipfile.ZipFile.extract"
builtins.str"builtins.str*,
self"
zipfile.ZipFile"zipfile.ZipFile*u
memberi
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo*≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310*Ω

extractallzipfile.ZipFile.extractall"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*\
pathP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *ß
membersó
-Union[typing.Iterable[builtins.unicode],None]Z
!typing.Iterable[builtins.unicode]$
builtins.unicode"builtins.unicode"typing.Iterable
None *O
pwdD
Union[builtins.str,None]
builtins.str"builtins.str
None z27*†

extractallzipfile.ZipFile.extractall"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*≥
path¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *ó
membersá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310*`
printdirzipfile.ZipFile.printdir"
None*,
self"
zipfile.ZipFile"zipfile.ZipFilez27*–
printdirzipfile.ZipFile.printdir"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*Y
fileM
Union[zipfile._Writer,None]"
zipfile._Writer"zipfile._Writer
None z35z36z37z38z39z310*ç
setpasswordzipfile.ZipFile.setpassword"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*%
pwd
builtins.str"builtins.strz27*¶
setpasswordzipfile.ZipFile.setpassword"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*)
pwd 
builtins.bytes"builtins.bytesz35z36z37z38z39z310*Ü
readzipfile.ZipFile.read"
builtins.str"builtins.str*,
self"
zipfile.ZipFile"zipfile.ZipFile*∆
nameª
2TypeAlias[Union[builtins.unicode,zipfile.ZipInfo]]u
'Union[builtins.unicode,zipfile.ZipInfo]$
builtins.unicode"builtins.unicode"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*O
pwdD
Union[builtins.str,None]
builtins.str"builtins.str
None z27*—
readzipfile.ZipFile.read" 
builtins.bytes"builtins.bytes*,
self"
zipfile.ZipFile"zipfile.ZipFile*s
namei
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo*U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None z35z36z37z38z39z310*≥
testzipzipfile.ZipFile.testzip"D
Union[builtins.str,None]
builtins.str"builtins.str
None*,
self"
zipfile.ZipFile"zipfile.ZipFilez27z35z36z37z38z39z310* 
writezipfile.ZipFile.write"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*2
filename$
builtins.unicode"builtins.unicode*_
arcnameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*Ì
writezipfile.ZipFile.write"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36*—
writezipfile.ZipFile.write"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None z37z38z39z310*π
writestrzipfile.ZipFile.writestr"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*“
zinfo_or_arcnameª
2TypeAlias[Union[builtins.unicode,zipfile.ZipInfo]]u
'Union[builtins.unicode,zipfile.ZipInfo]$
builtins.unicode"builtins.unicode"
zipfile.ZipInfo"zipfile.ZipInfo"zipfile._SZI*'
bytes
builtins.str"builtins.str*Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None z27*≤
writestrzipfile.ZipFile.writestr"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*
zinfo_or_arcnamei
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo*p
dataf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None z35z36*ñ
writestrzipfile.ZipFile.writestr"
None*,
self"
zipfile.ZipFile"zipfile.ZipFile*
zinfo_or_arcnamei
#Union[builtins.str,zipfile.ZipInfo]
builtins.str"builtins.str"
zipfile.ZipInfo"zipfile.ZipInfo*p
dataf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str*Y
compress_typeD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None z37z38z39z310j27j35j36j37j38j39j310Ô
	PyZipFilezipfile.PyZipFile"zipfile.ZipFile*Œ
writepyzipfile.PyZipFile.writepy"
None*0
self&
zipfile.PyZipFile"zipfile.PyZipFile*2
pathname$
builtins.unicode"builtins.unicode*4
basename$
builtins.unicode"builtins.unicode z27*Ô
writepyzipfile.PyZipFile.writepy"
None*0
self&
zipfile.PyZipFile"zipfile.PyZipFile**
pathname
builtins.str"builtins.str*,
basename
builtins.str"builtins.str *ô

filterfuncÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z35z36z37z38z39z310*›
__init__zipfile.PyZipFile.__init__"
None*0
self&
zipfile.PyZipFile"zipfile.PyZipFile*§
fileô
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*(
mode
builtins.str"builtins.str */
compression
builtins.int"builtins.int *0

allowZip64
builtins.bool"builtins.bool *,
optimize
builtins.int"builtins.int z35z36z37z38z39z310j27j35j36j37j38j39j310 
ZipInfozipfile.ZipInfo"builtins.object*‘
__init__zipfile.ZipInfo.__init__"
None*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*`
filenameP
Union[builtins.unicode,None]$
builtins.unicode"builtins.unicode
None *è
	date_time˝
`Union[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int],None]å
TTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None z27*›
__init__zipfile.ZipInfo.__init__"
None*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *è
	date_time˝
`Union[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int],None]å
TTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None z35z36z37z38z39z310*Œ

FileHeaderzipfile.ZipInfo.FileHeader"
builtins.str"builtins.str*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*T
zip64G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z27*Á

FileHeaderzipfile.ZipInfo.FileHeader" 
builtins.bytes"builtins.bytes*,
self"
zipfile.ZipInfo"zipfile.ZipInfo*T
zip64G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z35z36z37z38z39z310*„
	from_filezipfile.ZipInfo.from_file""
zipfile.ZipInfo"zipfile.ZipInfo*F
cls=
Type[zipfile.ZipInfo]"
zipfile.ZipInfo"zipfile.ZipInfo*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None 0:classmethodpz35z36z37*ù
	from_filezipfile.ZipInfo.from_file""
zipfile.ZipInfo"zipfile.ZipInfo*F
cls=
Type[zipfile.ZipInfo]"
zipfile.ZipInfo"zipfile.ZipInfo*¯
filenameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*∂
arcname¶
2Union[builtins.str,os.PathLike[builtins.str],None]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
None *7
strict_timestamps
builtins.bool"builtins.bool 0:classmethodpz38z39z310*á
is_dirzipfile.ZipInfo.is_dir"
builtins.bool"builtins.bool*,
self"
zipfile.ZipInfo"zipfile.ZipInfoz35z36z37z38z39z310j27j35j36j37j38j39j310—
_PathOpenProtocolzipfile._PathOpenProtocol"builtins.object*Ê
__call__"zipfile._PathOpenProtocol.__call__"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*@
self6
zipfile._PathOpenProtocol"zipfile._PathOpenProtocol*(
mode
builtins.str"builtins.str *O
pwdD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
force_zip64
builtins.bool"builtins.bool z27*á
__call__"zipfile._PathOpenProtocol.__call__"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*@
self6
zipfile._PathOpenProtocol"zipfile._PathOpenProtocol*(
mode
builtins.str"builtins.str *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *1
force_zip64
builtins.bool"builtins.bool z35z36z37z38z39z310Xj27j35j36j37j38j39j310œ
Iteratortyping.Iterator"typing.Iterable*±
__next__typing.Iterator.__next__"
typing._T_co*L
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator0:abstractmethod@z35z36z37z38z39z310*Õ
__iter__typing.Iterator.__iter__"B
typing.Iterator[typing._T_co]
typing._T_co"typing.Iterator*J
selfB
typing.Iterator[typing._T_co]
typing._T_co"typing.Iteratorz35z36z37z38z39z3108PXj35j36j37j38j39j310‰
TypeVartyping.TypeVar"builtins.object*û
__init__typing.TypeVar.__init__"
None**
self 
typing.TypeVar"typing.TypeVar*&
name
builtins.str"builtins.str*'
constraints
	Type[Any]
Any*s
boundf
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any
builtins.str"builtins.str */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool z35z36z37z38z39z310j35j36j37j38j39j310M

BadZipFilezipfile.BadZipFile"builtins.Exceptionj35j36j37j38j39j310Ç

_ZipStreamzipfile._ZipStream"builtins.object*≥
readzipfile._ZipStream.read" 
builtins.bytes"builtins.bytes*2
self(
zipfile._ZipStream"zipfile._ZipStream*#
__n
builtins.int"builtins.intz35z36z37z38z39z310Xj35j36j37j38j39j310å
_ClosableZipStreamzipfile._ClosableZipStream"zipfile._ZipStream*™
close zipfile._ClosableZipStream.close""
builtins.object"builtins.object*B
self8
zipfile._ClosableZipStream"zipfile._ClosableZipStreamz35z36z37z38z39z310Xj35j36j37j38j39j310©
Pathzipfile.Path"builtins.object*z
namezipfile.Path.name"
builtins.str"builtins.str*&
self
zipfile.Path"zipfile.Path0:property`z38z39z310*~
parentzipfile.Path.parent"
zipfile.Path"zipfile.Path*&
self
zipfile.Path"zipfile.Path0:property`z38z39z310*›
__init__zipfile.Path.__init__"
None*&
self
zipfile.Path"zipfile.Path*“
root«
iUnion[zipfile.ZipFile,TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]"
zipfile.ZipFile"zipfile.ZipFileÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
at
builtins.str"builtins.str z38z39z310*ã
openzipfile.Path.open"6
zipfile._PathOpenProtocol"zipfile._PathOpenProtocol*&
self
zipfile.Path"zipfile.Path0:property`z38*»
openzipfile.Path.open"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
self
zipfile.Path"zipfile.Path*(
mode
builtins.str"builtins.str *U
pwdJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *1
force_zip64
builtins.bool"builtins.bool z39z310*§
iterdirzipfile.Path.iterdir"N
typing.Iterator[zipfile.Path]
zipfile.Path"zipfile.Path"typing.Iterator*&
self
zipfile.Path"zipfile.Pathz38z39z310*r
is_dirzipfile.Path.is_dir"
builtins.bool"builtins.bool*&
self
zipfile.Path"zipfile.Pathz38z39z310*t
is_filezipfile.Path.is_file"
builtins.bool"builtins.bool*&
self
zipfile.Path"zipfile.Pathz38z39z310*r
existszipfile.Path.exists"
builtins.bool"builtins.bool*&
self
zipfile.Path"zipfile.Pathz38z39z310*‡
	read_textzipfile.Path.read_text"
builtins.str"builtins.str*&
self
zipfile.Path"zipfile.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool z38z39z310*|

read_byteszipfile.Path.read_bytes" 
builtins.bytes"builtins.bytes*&
self
zipfile.Path"zipfile.Pathz38z39z310*Í
joinpathzipfile.Path.joinpath"
zipfile.Path"zipfile.Path*&
self
zipfile.Path"zipfile.Path*Û
addÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310*Ï
__truediv__zipfile.Path.__truediv__"
zipfile.Path"zipfile.Path*$
self
zipfile.Path"zipfile.Path*Ò
addÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310j38j39j310Û

is_zipfilezipfile.is_zipfile"
builtins.bool"builtins.bool*¨
filenameù
/Union[builtins.unicode,typing.IO[builtins.str]]$
builtins.unicode"builtins.unicodeB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IOz27˛

is_zipfilezipfile.is_zipfile"
builtins.bool"builtins.bool*¢
filenameì
YUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],typing.IO[builtins.bytes]]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz35z36z37z38z39z310\
overloadtyping.overload"
	typing._F*
func
	typing._Fz35z36z37z38z39z310*'
ioio *27*35*36*37*38*39*310*9
Any
typing.Any"
builtins.object"builtins.object*27*d
Callabletyping.Callable*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*d
Optionaltyping.Optional*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*d
Protocoltyping.Protocol*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Tupletyping.Tuple*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*\
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*^
Uniontyping.Union*
typing._SpecialForm"typing._SpecialForm*27*35*36*37*38*39*310*[

ZIP_STOREDzipfile.ZIP_STORED
builtins.int"builtins.int*27*35*36*37*38*39*310*_
ZIP_DEFLATEDzipfile.ZIP_DEFLATED
builtins.int"builtins.int*27*35*36*37*38*39*310*]
ZIP64_LIMITzipfile.ZIP64_LIMIT
builtins.int"builtins.int*27*35*36*37*38*39*310*m
ZIP_FILECOUNT_LIMITzipfile.ZIP_FILECOUNT_LIMIT
builtins.int"builtins.int*27*35*36*37*38*39*310*e
ZIP_MAX_COMMENTzipfile.ZIP_MAX_COMMENT
builtins.int"builtins.int*27*35*36*37*38*39*310*%
syssys *35*36*37*38*39*310*
Literaltyping_extensions.Literal@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*35*36*37*38*39*310*U
	ZIP_BZIP2zipfile.ZIP_BZIP2
builtins.int"builtins.int*35*36*37*38*39*310*S
ZIP_LZMAzipfile.ZIP_LZMA
builtins.int"builtins.int*35*36*37*38*39*310